
TickTackToe.elf:     file format elf32-littleriscv

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005640  80000000  80000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .sdata        00000010  80005640  80005640  00006640  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  2 .data         000004b0  80005650  80005650  00006650  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  3 .sbss         00000010  80005b00  80005b00  00006b00  2**4
                  ALLOC
  4 .bss          000000f0  80005b40  80005b40  00006b00  2**6
                  ALLOC
  5 .heap         00000800  80005c30  80005c30  00006b00  2**4
                  ALLOC
  6 .stack        00000800  80006430  80006430  00006b00  2**4
                  ALLOC
  7 .debug_line   000062ce  00000000  00000000  00006b00  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00006f00  00000000  00000000  0000cdce  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00001396  00000000  00000000  00013cce  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000590  00000000  00000000  00015068  2**3
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00001f90  00000000  00000000  000155f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001ea3  00000000  00000000  00017588  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000004c0  00000000  00000000  0001942b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_macro  000040d4  00000000  00000000  000198eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0000dd2e  00000000  00000000  0001d9bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .comment      00000011  00000000  00000000  0002b6ed  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

80000000 <_start>:
#endif

  .section      .text.entry
  .globl _start
_start:
  j handle_reset
80000000:	00c0006f          	j	8000000c <handle_reset>

80000004 <nmi_vector>:

nmi_vector:
  j nmi_vector
80000004:	0000006f          	j	80000004 <nmi_vector>

80000008 <trap_vector>:

trap_vector:
  j trap_entry
80000008:	0340006f          	j	8000003c <trap_entry>

8000000c <handle_reset>:

handle_reset:
  la t0, trap_entry
8000000c:	00000297          	auipc	t0,0x0
80000010:	03028293          	addi	t0,t0,48 # 8000003c <trap_entry>
  csrw mtvec, t0
80000014:	30529073          	csrw	mtvec,t0
  csrwi mstatus, 0
80000018:	30005073          	csrwi	mstatus,0
  csrwi mideleg, 0
8000001c:	30305073          	csrwi	mideleg,0
  csrwi medeleg, 0
80000020:	30205073          	csrwi	medeleg,0
  csrwi mie, 0
80000024:	30405073          	csrwi	mie,0

  # initialize global pointer
  la gp, _gp
80000028:	00006197          	auipc	gp,0x6
8000002c:	e1818193          	addi	gp,gp,-488 # 80005e40 <_gp>

  # initialize stack pointer
  la sp, __stack_top
80000030:	00007117          	auipc	sp,0x7
80000034:	c0010113          	addi	sp,sp,-1024 # 80006c30 <__stack_top>

  # perform the rest of initialization in C
  j _init
80000038:	1e00006f          	j	80000218 <_init>

8000003c <trap_entry>:


trap_entry:
  addi sp, sp, -32*REGBYTES
8000003c:	f8010113          	addi	sp,sp,-128

  SREG x1, 0 * REGBYTES(sp)
80000040:	00112023          	sw	ra,0(sp)
  SREG x2, 1 * REGBYTES(sp)
80000044:	00212223          	sw	sp,4(sp)
  SREG x3, 2 * REGBYTES(sp)
80000048:	00312423          	sw	gp,8(sp)
  SREG x4, 3 * REGBYTES(sp)
8000004c:	00412623          	sw	tp,12(sp)
  SREG x5, 4 * REGBYTES(sp)
80000050:	00512823          	sw	t0,16(sp)
  SREG x6, 5 * REGBYTES(sp)
80000054:	00612a23          	sw	t1,20(sp)
  SREG x7, 6 * REGBYTES(sp)
80000058:	00712c23          	sw	t2,24(sp)
  SREG x8, 7 * REGBYTES(sp)
8000005c:	00812e23          	sw	s0,28(sp)
  SREG x9, 8 * REGBYTES(sp)
80000060:	02912023          	sw	s1,32(sp)
  SREG x10, 9 * REGBYTES(sp)
80000064:	02a12223          	sw	a0,36(sp)
  SREG x11, 10 * REGBYTES(sp)
80000068:	02b12423          	sw	a1,40(sp)
  SREG x12, 11 * REGBYTES(sp)
8000006c:	02c12623          	sw	a2,44(sp)
  SREG x13, 12 * REGBYTES(sp)
80000070:	02d12823          	sw	a3,48(sp)
  SREG x14, 13 * REGBYTES(sp)
80000074:	02e12a23          	sw	a4,52(sp)
  SREG x15, 14 * REGBYTES(sp)
80000078:	02f12c23          	sw	a5,56(sp)
  SREG x16, 15 * REGBYTES(sp)
8000007c:	03012e23          	sw	a6,60(sp)
  SREG x17, 16 * REGBYTES(sp)
80000080:	05112023          	sw	a7,64(sp)
  SREG x18, 17 * REGBYTES(sp)
80000084:	05212223          	sw	s2,68(sp)
  SREG x19, 18 * REGBYTES(sp)
80000088:	05312423          	sw	s3,72(sp)
  SREG x20, 19 * REGBYTES(sp)
8000008c:	05412623          	sw	s4,76(sp)
  SREG x21, 20 * REGBYTES(sp)
80000090:	05512823          	sw	s5,80(sp)
  SREG x22, 21 * REGBYTES(sp)
80000094:	05612a23          	sw	s6,84(sp)
  SREG x23, 22 * REGBYTES(sp)
80000098:	05712c23          	sw	s7,88(sp)
  SREG x24, 23 * REGBYTES(sp)
8000009c:	05812e23          	sw	s8,92(sp)
  SREG x25, 24 * REGBYTES(sp)
800000a0:	07912023          	sw	s9,96(sp)
  SREG x26, 25 * REGBYTES(sp)
800000a4:	07a12223          	sw	s10,100(sp)
  SREG x27, 26 * REGBYTES(sp)
800000a8:	07b12423          	sw	s11,104(sp)
  SREG x28, 27 * REGBYTES(sp)
800000ac:	07c12623          	sw	t3,108(sp)
  SREG x29, 28 * REGBYTES(sp)
800000b0:	07d12823          	sw	t4,112(sp)
  SREG x30, 29 * REGBYTES(sp)
800000b4:	07e12a23          	sw	t5,116(sp)
  SREG x31, 30 * REGBYTES(sp)
800000b8:	07f12c23          	sw	t6,120(sp)


  csrr t0, mepc
800000bc:	341022f3          	csrr	t0,mepc
  SREG t0, 31 * REGBYTES(sp)
800000c0:	06512e23          	sw	t0,124(sp)

  csrr a0, mcause
800000c4:	34202573          	csrr	a0,mcause
  csrr a1, mepc
800000c8:	341025f3          	csrr	a1,mepc
  mv a2, sp
800000cc:	00010613          	mv	a2,sp
  jal handle_trap
800000d0:	484000ef          	jal	ra,80000554 <handle_trap>
  csrw mepc, a0
800000d4:	34151073          	csrw	mepc,a0

  # Remain in M-mode after mret
  li t0, MSTATUS_MPP
800000d8:	000022b7          	lui	t0,0x2
800000dc:	80028293          	addi	t0,t0,-2048 # 1800 <HEAP_SIZE+0x1000>
  csrs mstatus, t0
800000e0:	3002a073          	csrs	mstatus,t0

  LREG x1, 0 * REGBYTES(sp)
800000e4:	00012083          	lw	ra,0(sp)
  LREG x2, 1 * REGBYTES(sp)
800000e8:	00412103          	lw	sp,4(sp)
  LREG x3, 2 * REGBYTES(sp)
800000ec:	00812183          	lw	gp,8(sp)
  LREG x4, 3 * REGBYTES(sp)
800000f0:	00c12203          	lw	tp,12(sp)
  LREG x5, 4 * REGBYTES(sp)
800000f4:	01012283          	lw	t0,16(sp)
  LREG x6, 5 * REGBYTES(sp)
800000f8:	01412303          	lw	t1,20(sp)
  LREG x7, 6 * REGBYTES(sp)
800000fc:	01812383          	lw	t2,24(sp)
  LREG x8, 7 * REGBYTES(sp)
80000100:	01c12403          	lw	s0,28(sp)
  LREG x9, 8 * REGBYTES(sp)
80000104:	02012483          	lw	s1,32(sp)
  LREG x10, 9 * REGBYTES(sp)
80000108:	02412503          	lw	a0,36(sp)
  LREG x11, 10 * REGBYTES(sp)
8000010c:	02812583          	lw	a1,40(sp)
  LREG x12, 11 * REGBYTES(sp)
80000110:	02c12603          	lw	a2,44(sp)
  LREG x13, 12 * REGBYTES(sp)
80000114:	03012683          	lw	a3,48(sp)
  LREG x14, 13 * REGBYTES(sp)
80000118:	03412703          	lw	a4,52(sp)
  LREG x15, 14 * REGBYTES(sp)
8000011c:	03812783          	lw	a5,56(sp)
  LREG x16, 15 * REGBYTES(sp)
80000120:	03c12803          	lw	a6,60(sp)
  LREG x17, 16 * REGBYTES(sp)
80000124:	04012883          	lw	a7,64(sp)
  LREG x18, 17 * REGBYTES(sp)
80000128:	04412903          	lw	s2,68(sp)
  LREG x19, 18 * REGBYTES(sp)
8000012c:	04812983          	lw	s3,72(sp)
  LREG x20, 19 * REGBYTES(sp)
80000130:	04c12a03          	lw	s4,76(sp)
  LREG x21, 20 * REGBYTES(sp)
80000134:	05012a83          	lw	s5,80(sp)
  LREG x22, 21 * REGBYTES(sp)
80000138:	05412b03          	lw	s6,84(sp)
  LREG x23, 22 * REGBYTES(sp)
8000013c:	05812b83          	lw	s7,88(sp)
  LREG x24, 23 * REGBYTES(sp)
80000140:	05c12c03          	lw	s8,92(sp)
  LREG x25, 24 * REGBYTES(sp)
80000144:	06012c83          	lw	s9,96(sp)
  LREG x26, 25 * REGBYTES(sp)
80000148:	06412d03          	lw	s10,100(sp)
  LREG x27, 26 * REGBYTES(sp)
8000014c:	06812d83          	lw	s11,104(sp)
  LREG x28, 27 * REGBYTES(sp)
80000150:	06c12e03          	lw	t3,108(sp)
  LREG x29, 28 * REGBYTES(sp)
80000154:	07012e83          	lw	t4,112(sp)
  LREG x30, 29 * REGBYTES(sp)
80000158:	07412f03          	lw	t5,116(sp)
  LREG x31, 30 * REGBYTES(sp)
8000015c:	07812f83          	lw	t6,120(sp)

  addi sp, sp, 32*REGBYTES
80000160:	08010113          	addi	sp,sp,128
  mret
80000164:	30200073          	mret

80000168 <copy_section>:
extern uint32_t     __bss_start;
extern uint32_t     __bss_end;


static void copy_section(uint32_t * p_load, uint32_t * p_vma, uint32_t * p_vma_end)
{
80000168:	fe010113          	addi	sp,sp,-32
8000016c:	00812e23          	sw	s0,28(sp)
80000170:	02010413          	addi	s0,sp,32
80000174:	fea42623          	sw	a0,-20(s0)
80000178:	feb42423          	sw	a1,-24(s0)
8000017c:	fec42223          	sw	a2,-28(s0)
    while(p_vma <= p_vma_end)
80000180:	02c0006f          	j	800001ac <copy_section+0x44>
    {
        *p_vma = *p_load;
80000184:	fec42783          	lw	a5,-20(s0)
80000188:	0007a703          	lw	a4,0(a5)
8000018c:	fe842783          	lw	a5,-24(s0)
80000190:	00e7a023          	sw	a4,0(a5)
        ++p_load;
80000194:	fec42783          	lw	a5,-20(s0)
80000198:	00478793          	addi	a5,a5,4
8000019c:	fef42623          	sw	a5,-20(s0)
        ++p_vma;
800001a0:	fe842783          	lw	a5,-24(s0)
800001a4:	00478793          	addi	a5,a5,4
800001a8:	fef42423          	sw	a5,-24(s0)
    while(p_vma <= p_vma_end)
800001ac:	fe842703          	lw	a4,-24(s0)
800001b0:	fe442783          	lw	a5,-28(s0)
800001b4:	fce7f8e3          	bleu	a4,a5,80000184 <copy_section+0x1c>
    }
}
800001b8:	00000013          	nop
800001bc:	01c12403          	lw	s0,28(sp)
800001c0:	02010113          	addi	sp,sp,32
800001c4:	00008067          	ret

800001c8 <zero_section>:

static void zero_section(uint32_t * start, uint32_t * end)
{
800001c8:	fd010113          	addi	sp,sp,-48
800001cc:	02812623          	sw	s0,44(sp)
800001d0:	03010413          	addi	s0,sp,48
800001d4:	fca42e23          	sw	a0,-36(s0)
800001d8:	fcb42c23          	sw	a1,-40(s0)
    uint32_t * p_zero = start;
800001dc:	fdc42783          	lw	a5,-36(s0)
800001e0:	fef42623          	sw	a5,-20(s0)
    
    while(p_zero <= end)
800001e4:	0180006f          	j	800001fc <zero_section+0x34>
    {
        *p_zero = 0;
800001e8:	fec42783          	lw	a5,-20(s0)
800001ec:	0007a023          	sw	zero,0(a5)
        ++p_zero;
800001f0:	fec42783          	lw	a5,-20(s0)
800001f4:	00478793          	addi	a5,a5,4
800001f8:	fef42623          	sw	a5,-20(s0)
    while(p_zero <= end)
800001fc:	fec42703          	lw	a4,-20(s0)
80000200:	fd842783          	lw	a5,-40(s0)
80000204:	fee7f2e3          	bleu	a4,a5,800001e8 <zero_section+0x20>
    }
}
80000208:	00000013          	nop
8000020c:	02c12403          	lw	s0,44(sp)
80000210:	03010113          	addi	sp,sp,48
80000214:	00008067          	ret

80000218 <_init>:

void _init(void)
{
80000218:	fe010113          	addi	sp,sp,-32
8000021c:	00112e23          	sw	ra,28(sp)
80000220:	00812c23          	sw	s0,24(sp)
80000224:	02010413          	addi	s0,sp,32
    extern int main(int, char**);
    const char *argv0 = "hello";
80000228:	800057b7          	lui	a5,0x80005
8000022c:	61078793          	addi	a5,a5,1552 # 80005610 <__stack_top+0xffffe9e0>
80000230:	fef42623          	sw	a5,-20(s0)
    char *argv[] = {(char *)argv0, NULL, NULL};
80000234:	fec42783          	lw	a5,-20(s0)
80000238:	fef42023          	sw	a5,-32(s0)
8000023c:	fe042223          	sw	zero,-28(s0)
80000240:	fe042423          	sw	zero,-24(s0)

    copy_section(&__sdata_load, &__sdata_start, &__sdata_end);
80000244:	800057b7          	lui	a5,0x80005
80000248:	65078613          	addi	a2,a5,1616 # 80005650 <__stack_top+0xffffea20>
8000024c:	800057b7          	lui	a5,0x80005
80000250:	64078593          	addi	a1,a5,1600 # 80005640 <__stack_top+0xffffea10>
80000254:	800057b7          	lui	a5,0x80005
80000258:	64078513          	addi	a0,a5,1600 # 80005640 <__stack_top+0xffffea10>
8000025c:	f0dff0ef          	jal	ra,80000168 <copy_section>
    copy_section(&__data_load, &__data_start, &__data_end);
80000260:	800067b7          	lui	a5,0x80006
80000264:	b0078613          	addi	a2,a5,-1280 # 80005b00 <__stack_top+0xffffeed0>
80000268:	800057b7          	lui	a5,0x80005
8000026c:	65078593          	addi	a1,a5,1616 # 80005650 <__stack_top+0xffffea20>
80000270:	800057b7          	lui	a5,0x80005
80000274:	65078513          	addi	a0,a5,1616 # 80005650 <__stack_top+0xffffea20>
80000278:	ef1ff0ef          	jal	ra,80000168 <copy_section>
    zero_section(&__sbss_start, &__sbss_end);
8000027c:	800067b7          	lui	a5,0x80006
80000280:	b1078593          	addi	a1,a5,-1264 # 80005b10 <__stack_top+0xffffeee0>
80000284:	800067b7          	lui	a5,0x80006
80000288:	b0078513          	addi	a0,a5,-1280 # 80005b00 <__stack_top+0xffffeed0>
8000028c:	f3dff0ef          	jal	ra,800001c8 <zero_section>
    zero_section(&__bss_start, &__bss_end);
80000290:	800067b7          	lui	a5,0x80006
80000294:	c3078593          	addi	a1,a5,-976 # 80005c30 <__stack_top+0xfffff000>
80000298:	800067b7          	lui	a5,0x80006
8000029c:	b4078513          	addi	a0,a5,-1216 # 80005b40 <__stack_top+0xffffef10>
800002a0:	f29ff0ef          	jal	ra,800001c8 <zero_section>
    
    exit(main(1, argv));
800002a4:	fe040793          	addi	a5,s0,-32
800002a8:	00078593          	mv	a1,a5
800002ac:	00100513          	li	a0,1
800002b0:	6e5040ef          	jal	ra,80005194 <main>
800002b4:	00050793          	mv	a5,a0
800002b8:	00078513          	mv	a0,a5
800002bc:	128050ef          	jal	ra,800053e4 <exit>

800002c0 <PLIC_DisableIRQ>:

        ret_val = SUCCESS;
    }
    
    return ret_val;
}
800002c0:	fd010113          	addi	sp,sp,-48
800002c4:	02812623          	sw	s0,44(sp)
800002c8:	03010413          	addi	s0,sp,48
800002cc:	fca42e23          	sw	a0,-36(s0)
800002d0:	f14027f3          	csrr	a5,mhartid
800002d4:	fef42623          	sw	a5,-20(s0)
800002d8:	fec42783          	lw	a5,-20(s0)
800002dc:	fef42423          	sw	a5,-24(s0)
800002e0:	40000737          	lui	a4,0x40000
800002e4:	fdc42783          	lw	a5,-36(s0)
800002e8:	0057d793          	srli	a5,a5,0x5
800002ec:	fe842683          	lw	a3,-24(s0)
800002f0:	00569693          	slli	a3,a3,0x5
800002f4:	00f686b3          	add	a3,a3,a5
800002f8:	000017b7          	lui	a5,0x1
800002fc:	80078793          	addi	a5,a5,-2048 # 800 <HEAP_SIZE>
80000300:	00f687b3          	add	a5,a3,a5
80000304:	00279793          	slli	a5,a5,0x2
80000308:	00f707b3          	add	a5,a4,a5
8000030c:	0007a783          	lw	a5,0(a5)
80000310:	fef42223          	sw	a5,-28(s0)
80000314:	fdc42783          	lw	a5,-36(s0)
80000318:	01f7f793          	andi	a5,a5,31
8000031c:	00100713          	li	a4,1
80000320:	00f717b3          	sll	a5,a4,a5
80000324:	fff7c793          	not	a5,a5
80000328:	fe442703          	lw	a4,-28(s0)
8000032c:	00f777b3          	and	a5,a4,a5
80000330:	fef42223          	sw	a5,-28(s0)
80000334:	40000737          	lui	a4,0x40000
80000338:	fdc42783          	lw	a5,-36(s0)
8000033c:	0057d793          	srli	a5,a5,0x5
80000340:	fe842683          	lw	a3,-24(s0)
80000344:	00569693          	slli	a3,a3,0x5
80000348:	00f686b3          	add	a3,a3,a5
8000034c:	000017b7          	lui	a5,0x1
80000350:	80078793          	addi	a5,a5,-2048 # 800 <HEAP_SIZE>
80000354:	00f687b3          	add	a5,a3,a5
80000358:	00279793          	slli	a5,a5,0x2
8000035c:	00f707b3          	add	a5,a4,a5
80000360:	fe442703          	lw	a4,-28(s0)
80000364:	00e7a023          	sw	a4,0(a5)
80000368:	00000013          	nop
8000036c:	02c12403          	lw	s0,44(sp)
80000370:	03010113          	addi	sp,sp,48
80000374:	00008067          	ret

80000378 <PLIC_ClaimIRQ>:
80000378:	fe010113          	addi	sp,sp,-32
8000037c:	00812e23          	sw	s0,28(sp)
80000380:	02010413          	addi	s0,sp,32
80000384:	f14027f3          	csrr	a5,mhartid
80000388:	fef42623          	sw	a5,-20(s0)
8000038c:	fec42783          	lw	a5,-20(s0)
80000390:	fef42423          	sw	a5,-24(s0)
80000394:	40000737          	lui	a4,0x40000
80000398:	fe842783          	lw	a5,-24(s0)
8000039c:	20078793          	addi	a5,a5,512
800003a0:	00c79793          	slli	a5,a5,0xc
800003a4:	00f707b3          	add	a5,a4,a5
800003a8:	0047a783          	lw	a5,4(a5)
800003ac:	00078513          	mv	a0,a5
800003b0:	01c12403          	lw	s0,28(sp)
800003b4:	02010113          	addi	sp,sp,32
800003b8:	00008067          	ret

800003bc <PLIC_CompleteIRQ>:
800003bc:	fd010113          	addi	sp,sp,-48
800003c0:	02812623          	sw	s0,44(sp)
800003c4:	03010413          	addi	s0,sp,48
800003c8:	fca42e23          	sw	a0,-36(s0)
800003cc:	f14027f3          	csrr	a5,mhartid
800003d0:	fef42623          	sw	a5,-20(s0)
800003d4:	fec42783          	lw	a5,-20(s0)
800003d8:	fef42423          	sw	a5,-24(s0)
800003dc:	40000737          	lui	a4,0x40000
800003e0:	fe842783          	lw	a5,-24(s0)
800003e4:	20078793          	addi	a5,a5,512
800003e8:	00c79793          	slli	a5,a5,0xc
800003ec:	00f707b3          	add	a5,a4,a5
800003f0:	fdc42703          	lw	a4,-36(s0)
800003f4:	00e7a223          	sw	a4,4(a5)
800003f8:	00000013          	nop
800003fc:	02c12403          	lw	s0,44(sp)
80000400:	03010113          	addi	sp,sp,48
80000404:	00008067          	ret

80000408 <handle_m_timer_interrupt>:

/*------------------------------------------------------------------------------
 * RISC-V interrupt handler for machine timer interrupts.
 */
void handle_m_timer_interrupt()
{
80000408:	fe010113          	addi	sp,sp,-32
8000040c:	00112e23          	sw	ra,28(sp)
80000410:	00812c23          	sw	s0,24(sp)
80000414:	02010413          	addi	s0,sp,32
    clear_csr(mie, MIP_MTIP);
80000418:	08000793          	li	a5,128
8000041c:	3047b7f3          	csrrc	a5,mie,a5
80000420:	fef42623          	sw	a5,-20(s0)

    SysTick_Handler();
80000424:	71d040ef          	jal	ra,80005340 <SysTick_Handler>

    PRCI->MTIMECMP[read_csr(mhartid)] = PRCI->MTIME + g_systick_increment;
80000428:	44000737          	lui	a4,0x44000
8000042c:	0000c7b7          	lui	a5,0xc
80000430:	00f707b3          	add	a5,a4,a5
80000434:	ffc7a803          	lw	a6,-4(a5) # bffc <HEAP_SIZE+0xb7fc>
80000438:	ff87a783          	lw	a5,-8(a5)
8000043c:	80006737          	lui	a4,0x80006
80000440:	b0072583          	lw	a1,-1280(a4) # 80005b00 <__stack_top+0xffffeed0>
80000444:	b0472603          	lw	a2,-1276(a4)
80000448:	44000537          	lui	a0,0x44000
8000044c:	f1402773          	csrr	a4,mhartid
80000450:	fee42423          	sw	a4,-24(s0)
80000454:	fe842883          	lw	a7,-24(s0)
80000458:	00b786b3          	add	a3,a5,a1
8000045c:	00068313          	mv	t1,a3
80000460:	00f33333          	sltu	t1,t1,a5
80000464:	00c80733          	add	a4,a6,a2
80000468:	00e307b3          	add	a5,t1,a4
8000046c:	00078713          	mv	a4,a5
80000470:	00068793          	mv	a5,a3
80000474:	00070813          	mv	a6,a4
80000478:	00001737          	lui	a4,0x1
8000047c:	80070713          	addi	a4,a4,-2048 # 800 <HEAP_SIZE>
80000480:	00e88733          	add	a4,a7,a4
80000484:	00371713          	slli	a4,a4,0x3
80000488:	00e50733          	add	a4,a0,a4
8000048c:	00f72023          	sw	a5,0(a4)
80000490:	01072223          	sw	a6,4(a4)

    set_csr(mie, MIP_MTIP);
80000494:	08000793          	li	a5,128
80000498:	3047a7f3          	csrrs	a5,mie,a5
8000049c:	fef42223          	sw	a5,-28(s0)
}
800004a0:	00000013          	nop
800004a4:	01c12083          	lw	ra,28(sp)
800004a8:	01812403          	lw	s0,24(sp)
800004ac:	02010113          	addi	sp,sp,32
800004b0:	00008067          	ret

800004b4 <handle_m_ext_interrupt>:

/*------------------------------------------------------------------------------
 * 
 */
void handle_m_ext_interrupt()
{
800004b4:	fe010113          	addi	sp,sp,-32
800004b8:	00112e23          	sw	ra,28(sp)
800004bc:	00812c23          	sw	s0,24(sp)
800004c0:	02010413          	addi	s0,sp,32
    uint32_t int_num  = PLIC_ClaimIRQ();
800004c4:	eb5ff0ef          	jal	ra,80000378 <PLIC_ClaimIRQ>
800004c8:	fea42623          	sw	a0,-20(s0)
    uint8_t disable = EXT_IRQ_KEEP_ENABLED;
800004cc:	fe0405a3          	sb	zero,-21(s0)

    disable = ext_irq_handler_table[int_num]();
800004d0:	800057b7          	lui	a5,0x80005
800004d4:	fec42703          	lw	a4,-20(s0)
800004d8:	00271713          	slli	a4,a4,0x2
800004dc:	65078793          	addi	a5,a5,1616 # 80005650 <__stack_top+0xffffea20>
800004e0:	00f707b3          	add	a5,a4,a5
800004e4:	0007a783          	lw	a5,0(a5)
800004e8:	000780e7          	jalr	a5
800004ec:	00050793          	mv	a5,a0
800004f0:	fef405a3          	sb	a5,-21(s0)

    PLIC_CompleteIRQ(int_num);
800004f4:	fec42503          	lw	a0,-20(s0)
800004f8:	ec5ff0ef          	jal	ra,800003bc <PLIC_CompleteIRQ>

    if(EXT_IRQ_DISABLE == disable)
800004fc:	feb44703          	lbu	a4,-21(s0)
80000500:	00100793          	li	a5,1
80000504:	00f71663          	bne	a4,a5,80000510 <handle_m_ext_interrupt+0x5c>
    {
    	PLIC_DisableIRQ(int_num);
80000508:	fec42503          	lw	a0,-20(s0)
8000050c:	db5ff0ef          	jal	ra,800002c0 <PLIC_DisableIRQ>
    }
}
80000510:	00000013          	nop
80000514:	01c12083          	lw	ra,28(sp)
80000518:	01812403          	lw	s0,24(sp)
8000051c:	02010113          	addi	sp,sp,32
80000520:	00008067          	ret

80000524 <handle_m_soft_interrupt>:

void handle_m_soft_interrupt()
{
80000524:	ff010113          	addi	sp,sp,-16
80000528:	00112623          	sw	ra,12(sp)
8000052c:	00812423          	sw	s0,8(sp)
80000530:	01010413          	addi	s0,sp,16
    Software_IRQHandler();
80000534:	0ec000ef          	jal	ra,80000620 <Software_IRQHandler>

    /*Clear software interrupt*/
    PRCI->MSIP[0] = 0x00;
80000538:	440007b7          	lui	a5,0x44000
8000053c:	0007a023          	sw	zero,0(a5) # 44000000 <RAM_SIZE+0x43ff0000>
}
80000540:	00000013          	nop
80000544:	00c12083          	lw	ra,12(sp)
80000548:	00812403          	lw	s0,8(sp)
8000054c:	01010113          	addi	sp,sp,16
80000550:	00008067          	ret

80000554 <handle_trap>:
/*------------------------------------------------------------------------------
 * Trap/Interrupt handler
 */
uintptr_t handle_trap(uintptr_t mcause, uintptr_t epc)
{
80000554:	fe010113          	addi	sp,sp,-32
80000558:	00112e23          	sw	ra,28(sp)
8000055c:	00812c23          	sw	s0,24(sp)
80000560:	02010413          	addi	s0,sp,32
80000564:	fea42623          	sw	a0,-20(s0)
80000568:	feb42423          	sw	a1,-24(s0)
    if ((mcause & MCAUSE_INT) && ((mcause & MCAUSE_CAUSE)  == IRQ_M_EXT))
8000056c:	fec42783          	lw	a5,-20(s0)
80000570:	0207d263          	bgez	a5,80000594 <handle_trap+0x40>
80000574:	fec42703          	lw	a4,-20(s0)
80000578:	800007b7          	lui	a5,0x80000
8000057c:	fff7c793          	not	a5,a5
80000580:	00f77733          	and	a4,a4,a5
80000584:	00b00793          	li	a5,11
80000588:	00f71663          	bne	a4,a5,80000594 <handle_trap+0x40>
    {
        handle_m_ext_interrupt();
8000058c:	f29ff0ef          	jal	ra,800004b4 <handle_m_ext_interrupt>
80000590:	0780006f          	j	80000608 <handle_trap+0xb4>
    }
    else if ((mcause & MCAUSE_INT) && ((mcause & MCAUSE_CAUSE)  == IRQ_M_TIMER))
80000594:	fec42783          	lw	a5,-20(s0)
80000598:	0207d263          	bgez	a5,800005bc <handle_trap+0x68>
8000059c:	fec42703          	lw	a4,-20(s0)
800005a0:	800007b7          	lui	a5,0x80000
800005a4:	fff7c793          	not	a5,a5
800005a8:	00f77733          	and	a4,a4,a5
800005ac:	00700793          	li	a5,7
800005b0:	00f71663          	bne	a4,a5,800005bc <handle_trap+0x68>
    {
        handle_m_timer_interrupt();
800005b4:	e55ff0ef          	jal	ra,80000408 <handle_m_timer_interrupt>
800005b8:	0500006f          	j	80000608 <handle_trap+0xb4>
    }
    else if ((mcause & MCAUSE_INT) && ((mcause & MCAUSE_CAUSE)  == IRQ_M_SOFT))
800005bc:	fec42783          	lw	a5,-20(s0)
800005c0:	0207d263          	bgez	a5,800005e4 <handle_trap+0x90>
800005c4:	fec42703          	lw	a4,-20(s0)
800005c8:	800007b7          	lui	a5,0x80000
800005cc:	fff7c793          	not	a5,a5
800005d0:	00f77733          	and	a4,a4,a5
800005d4:	00300793          	li	a5,3
800005d8:	00f71663          	bne	a4,a5,800005e4 <handle_trap+0x90>
    {
        handle_m_soft_interrupt();
800005dc:	f49ff0ef          	jal	ra,80000524 <handle_m_soft_interrupt>
800005e0:	0280006f          	j	80000608 <handle_trap+0xb4>
    }
    else
    {
        write(1, "trap\n", 5);
800005e4:	00500613          	li	a2,5
800005e8:	800057b7          	lui	a5,0x80005
800005ec:	61878593          	addi	a1,a5,1560 # 80005618 <__stack_top+0xffffe9e8>
800005f0:	00100513          	li	a0,1
800005f4:	488000ef          	jal	ra,80000a7c <write>
        _exit(1 + mcause);
800005f8:	fec42783          	lw	a5,-20(s0)
800005fc:	00178793          	addi	a5,a5,1
80000600:	00078513          	mv	a0,a5
80000604:	434000ef          	jal	ra,80000a38 <_exit>
    }
    return epc;
80000608:	fe842783          	lw	a5,-24(s0)
}
8000060c:	00078513          	mv	a0,a5
80000610:	01c12083          	lw	ra,28(sp)
80000614:	01812403          	lw	s0,24(sp)
80000618:	02010113          	addi	sp,sp,32
8000061c:	00008067          	ret

80000620 <Software_IRQHandler>:
}

__attribute__((weak)) void SysTick_Handler(void)
{
    ;
}
80000620:	ff010113          	addi	sp,sp,-16
80000624:	00112623          	sw	ra,12(sp)
80000628:	00812423          	sw	s0,8(sp)
8000062c:	01010413          	addi	s0,sp,16
80000630:	00a00513          	li	a0,10
80000634:	404000ef          	jal	ra,80000a38 <_exit>

80000638 <Invalid_IRQHandler>:

__attribute__((weak))  uint8_t Invalid_IRQHandler(void)
{
80000638:	ff010113          	addi	sp,sp,-16
8000063c:	00812623          	sw	s0,12(sp)
80000640:	01010413          	addi	s0,sp,16
    return(0);
80000644:	00000793          	li	a5,0
}
80000648:	00078513          	mv	a0,a5
8000064c:	00c12403          	lw	s0,12(sp)
80000650:	01010113          	addi	sp,sp,16
80000654:	00008067          	ret

80000658 <External_1_IRQHandler>:

__attribute__((weak))  uint8_t External_1_IRQHandler(void)
{
80000658:	ff010113          	addi	sp,sp,-16
8000065c:	00812623          	sw	s0,12(sp)
80000660:	01010413          	addi	s0,sp,16
    return(0);
80000664:	00000793          	li	a5,0
}
80000668:	00078513          	mv	a0,a5
8000066c:	00c12403          	lw	s0,12(sp)
80000670:	01010113          	addi	sp,sp,16
80000674:	00008067          	ret

80000678 <External_2_IRQHandler>:

__attribute__((weak))  uint8_t External_2_IRQHandler(void)
{
80000678:	ff010113          	addi	sp,sp,-16
8000067c:	00812623          	sw	s0,12(sp)
80000680:	01010413          	addi	s0,sp,16
    return(0);
80000684:	00000793          	li	a5,0
}
80000688:	00078513          	mv	a0,a5
8000068c:	00c12403          	lw	s0,12(sp)
80000690:	01010113          	addi	sp,sp,16
80000694:	00008067          	ret

80000698 <External_3_IRQHandler>:

__attribute__((weak))  uint8_t External_3_IRQHandler(void)
{
80000698:	ff010113          	addi	sp,sp,-16
8000069c:	00812623          	sw	s0,12(sp)
800006a0:	01010413          	addi	s0,sp,16
    return(0);
800006a4:	00000793          	li	a5,0
}
800006a8:	00078513          	mv	a0,a5
800006ac:	00c12403          	lw	s0,12(sp)
800006b0:	01010113          	addi	sp,sp,16
800006b4:	00008067          	ret

800006b8 <External_4_IRQHandler>:

__attribute__((weak))  uint8_t External_4_IRQHandler(void)
{
800006b8:	ff010113          	addi	sp,sp,-16
800006bc:	00812623          	sw	s0,12(sp)
800006c0:	01010413          	addi	s0,sp,16
    return(0);
800006c4:	00000793          	li	a5,0
}
800006c8:	00078513          	mv	a0,a5
800006cc:	00c12403          	lw	s0,12(sp)
800006d0:	01010113          	addi	sp,sp,16
800006d4:	00008067          	ret

800006d8 <External_5_IRQHandler>:

__attribute__((weak))  uint8_t External_5_IRQHandler(void)
{
800006d8:	ff010113          	addi	sp,sp,-16
800006dc:	00812623          	sw	s0,12(sp)
800006e0:	01010413          	addi	s0,sp,16
    return(0);
800006e4:	00000793          	li	a5,0
}
800006e8:	00078513          	mv	a0,a5
800006ec:	00c12403          	lw	s0,12(sp)
800006f0:	01010113          	addi	sp,sp,16
800006f4:	00008067          	ret

800006f8 <External_6_IRQHandler>:

__attribute__((weak))  uint8_t External_6_IRQHandler(void)
{
800006f8:	ff010113          	addi	sp,sp,-16
800006fc:	00812623          	sw	s0,12(sp)
80000700:	01010413          	addi	s0,sp,16
    return(0);
80000704:	00000793          	li	a5,0
}
80000708:	00078513          	mv	a0,a5
8000070c:	00c12403          	lw	s0,12(sp)
80000710:	01010113          	addi	sp,sp,16
80000714:	00008067          	ret

80000718 <External_7_IRQHandler>:

__attribute__((weak))  uint8_t External_7_IRQHandler(void)
{
80000718:	ff010113          	addi	sp,sp,-16
8000071c:	00812623          	sw	s0,12(sp)
80000720:	01010413          	addi	s0,sp,16
    return(0);
80000724:	00000793          	li	a5,0
}
80000728:	00078513          	mv	a0,a5
8000072c:	00c12403          	lw	s0,12(sp)
80000730:	01010113          	addi	sp,sp,16
80000734:	00008067          	ret

80000738 <External_8_IRQHandler>:

__attribute__((weak))  uint8_t External_8_IRQHandler(void)
{
80000738:	ff010113          	addi	sp,sp,-16
8000073c:	00812623          	sw	s0,12(sp)
80000740:	01010413          	addi	s0,sp,16
    return(0);
80000744:	00000793          	li	a5,0
}
80000748:	00078513          	mv	a0,a5
8000074c:	00c12403          	lw	s0,12(sp)
80000750:	01010113          	addi	sp,sp,16
80000754:	00008067          	ret

80000758 <External_9_IRQHandler>:

__attribute__((weak))  uint8_t External_9_IRQHandler(void)
{
80000758:	ff010113          	addi	sp,sp,-16
8000075c:	00812623          	sw	s0,12(sp)
80000760:	01010413          	addi	s0,sp,16
    return(0);
80000764:	00000793          	li	a5,0
}
80000768:	00078513          	mv	a0,a5
8000076c:	00c12403          	lw	s0,12(sp)
80000770:	01010113          	addi	sp,sp,16
80000774:	00008067          	ret

80000778 <External_10_IRQHandler>:

__attribute__((weak))  uint8_t External_10_IRQHandler(void)
{
80000778:	ff010113          	addi	sp,sp,-16
8000077c:	00812623          	sw	s0,12(sp)
80000780:	01010413          	addi	s0,sp,16
    return(0);
80000784:	00000793          	li	a5,0
}
80000788:	00078513          	mv	a0,a5
8000078c:	00c12403          	lw	s0,12(sp)
80000790:	01010113          	addi	sp,sp,16
80000794:	00008067          	ret

80000798 <External_11_IRQHandler>:

__attribute__((weak))  uint8_t External_11_IRQHandler(void)
{
80000798:	ff010113          	addi	sp,sp,-16
8000079c:	00812623          	sw	s0,12(sp)
800007a0:	01010413          	addi	s0,sp,16
    return(0);
800007a4:	00000793          	li	a5,0
}
800007a8:	00078513          	mv	a0,a5
800007ac:	00c12403          	lw	s0,12(sp)
800007b0:	01010113          	addi	sp,sp,16
800007b4:	00008067          	ret

800007b8 <External_12_IRQHandler>:

__attribute__((weak))  uint8_t External_12_IRQHandler(void)
{
800007b8:	ff010113          	addi	sp,sp,-16
800007bc:	00812623          	sw	s0,12(sp)
800007c0:	01010413          	addi	s0,sp,16
    return(0);
800007c4:	00000793          	li	a5,0
}
800007c8:	00078513          	mv	a0,a5
800007cc:	00c12403          	lw	s0,12(sp)
800007d0:	01010113          	addi	sp,sp,16
800007d4:	00008067          	ret

800007d8 <External_13_IRQHandler>:

__attribute__((weak))  uint8_t External_13_IRQHandler(void)
{
800007d8:	ff010113          	addi	sp,sp,-16
800007dc:	00812623          	sw	s0,12(sp)
800007e0:	01010413          	addi	s0,sp,16
    return(0);
800007e4:	00000793          	li	a5,0
}
800007e8:	00078513          	mv	a0,a5
800007ec:	00c12403          	lw	s0,12(sp)
800007f0:	01010113          	addi	sp,sp,16
800007f4:	00008067          	ret

800007f8 <External_14_IRQHandler>:

__attribute__((weak))  uint8_t External_14_IRQHandler(void)
{
800007f8:	ff010113          	addi	sp,sp,-16
800007fc:	00812623          	sw	s0,12(sp)
80000800:	01010413          	addi	s0,sp,16
    return(0);
80000804:	00000793          	li	a5,0
}
80000808:	00078513          	mv	a0,a5
8000080c:	00c12403          	lw	s0,12(sp)
80000810:	01010113          	addi	sp,sp,16
80000814:	00008067          	ret

80000818 <External_15_IRQHandler>:

__attribute__((weak))  uint8_t External_15_IRQHandler(void)
{
80000818:	ff010113          	addi	sp,sp,-16
8000081c:	00812623          	sw	s0,12(sp)
80000820:	01010413          	addi	s0,sp,16
    return(0);
80000824:	00000793          	li	a5,0
}
80000828:	00078513          	mv	a0,a5
8000082c:	00c12403          	lw	s0,12(sp)
80000830:	01010113          	addi	sp,sp,16
80000834:	00008067          	ret

80000838 <External_16_IRQHandler>:

__attribute__((weak))  uint8_t External_16_IRQHandler(void)
{
80000838:	ff010113          	addi	sp,sp,-16
8000083c:	00812623          	sw	s0,12(sp)
80000840:	01010413          	addi	s0,sp,16
    return(0);
80000844:	00000793          	li	a5,0
}
80000848:	00078513          	mv	a0,a5
8000084c:	00c12403          	lw	s0,12(sp)
80000850:	01010113          	addi	sp,sp,16
80000854:	00008067          	ret

80000858 <External_17_IRQHandler>:

__attribute__((weak))  uint8_t External_17_IRQHandler(void)
{
80000858:	ff010113          	addi	sp,sp,-16
8000085c:	00812623          	sw	s0,12(sp)
80000860:	01010413          	addi	s0,sp,16
    return(0);
80000864:	00000793          	li	a5,0
}
80000868:	00078513          	mv	a0,a5
8000086c:	00c12403          	lw	s0,12(sp)
80000870:	01010113          	addi	sp,sp,16
80000874:	00008067          	ret

80000878 <External_18_IRQHandler>:

__attribute__((weak))  uint8_t External_18_IRQHandler(void)
{
80000878:	ff010113          	addi	sp,sp,-16
8000087c:	00812623          	sw	s0,12(sp)
80000880:	01010413          	addi	s0,sp,16
    return(0);
80000884:	00000793          	li	a5,0
}
80000888:	00078513          	mv	a0,a5
8000088c:	00c12403          	lw	s0,12(sp)
80000890:	01010113          	addi	sp,sp,16
80000894:	00008067          	ret

80000898 <External_19_IRQHandler>:

__attribute__((weak))  uint8_t External_19_IRQHandler(void)
{
80000898:	ff010113          	addi	sp,sp,-16
8000089c:	00812623          	sw	s0,12(sp)
800008a0:	01010413          	addi	s0,sp,16
    return(0);
800008a4:	00000793          	li	a5,0
}
800008a8:	00078513          	mv	a0,a5
800008ac:	00c12403          	lw	s0,12(sp)
800008b0:	01010113          	addi	sp,sp,16
800008b4:	00008067          	ret

800008b8 <External_20_IRQHandler>:

__attribute__((weak))  uint8_t External_20_IRQHandler(void)
{
800008b8:	ff010113          	addi	sp,sp,-16
800008bc:	00812623          	sw	s0,12(sp)
800008c0:	01010413          	addi	s0,sp,16
    return(0);
800008c4:	00000793          	li	a5,0
}
800008c8:	00078513          	mv	a0,a5
800008cc:	00c12403          	lw	s0,12(sp)
800008d0:	01010113          	addi	sp,sp,16
800008d4:	00008067          	ret

800008d8 <External_21_IRQHandler>:

__attribute__((weak))  uint8_t External_21_IRQHandler(void)
{
800008d8:	ff010113          	addi	sp,sp,-16
800008dc:	00812623          	sw	s0,12(sp)
800008e0:	01010413          	addi	s0,sp,16
    return(0);
800008e4:	00000793          	li	a5,0
}
800008e8:	00078513          	mv	a0,a5
800008ec:	00c12403          	lw	s0,12(sp)
800008f0:	01010113          	addi	sp,sp,16
800008f4:	00008067          	ret

800008f8 <External_22_IRQHandler>:

__attribute__((weak))  uint8_t External_22_IRQHandler(void)
{
800008f8:	ff010113          	addi	sp,sp,-16
800008fc:	00812623          	sw	s0,12(sp)
80000900:	01010413          	addi	s0,sp,16
    return(0);
80000904:	00000793          	li	a5,0
}
80000908:	00078513          	mv	a0,a5
8000090c:	00c12403          	lw	s0,12(sp)
80000910:	01010113          	addi	sp,sp,16
80000914:	00008067          	ret

80000918 <External_23_IRQHandler>:

__attribute__((weak))  uint8_t External_23_IRQHandler(void)
{
80000918:	ff010113          	addi	sp,sp,-16
8000091c:	00812623          	sw	s0,12(sp)
80000920:	01010413          	addi	s0,sp,16
    return(0);
80000924:	00000793          	li	a5,0
}
80000928:	00078513          	mv	a0,a5
8000092c:	00c12403          	lw	s0,12(sp)
80000930:	01010113          	addi	sp,sp,16
80000934:	00008067          	ret

80000938 <External_24_IRQHandler>:

__attribute__((weak))  uint8_t External_24_IRQHandler(void)
{
80000938:	ff010113          	addi	sp,sp,-16
8000093c:	00812623          	sw	s0,12(sp)
80000940:	01010413          	addi	s0,sp,16
    return(0);
80000944:	00000793          	li	a5,0
}
80000948:	00078513          	mv	a0,a5
8000094c:	00c12403          	lw	s0,12(sp)
80000950:	01010113          	addi	sp,sp,16
80000954:	00008067          	ret

80000958 <External_25_IRQHandler>:

__attribute__((weak))  uint8_t External_25_IRQHandler(void)
{
80000958:	ff010113          	addi	sp,sp,-16
8000095c:	00812623          	sw	s0,12(sp)
80000960:	01010413          	addi	s0,sp,16
    return(0);
80000964:	00000793          	li	a5,0
}
80000968:	00078513          	mv	a0,a5
8000096c:	00c12403          	lw	s0,12(sp)
80000970:	01010113          	addi	sp,sp,16
80000974:	00008067          	ret

80000978 <External_26_IRQHandler>:

__attribute__((weak))  uint8_t External_26_IRQHandler(void)
{
80000978:	ff010113          	addi	sp,sp,-16
8000097c:	00812623          	sw	s0,12(sp)
80000980:	01010413          	addi	s0,sp,16
    return(0);
80000984:	00000793          	li	a5,0
}
80000988:	00078513          	mv	a0,a5
8000098c:	00c12403          	lw	s0,12(sp)
80000990:	01010113          	addi	sp,sp,16
80000994:	00008067          	ret

80000998 <External_27_IRQHandler>:

__attribute__((weak))  uint8_t External_27_IRQHandler(void)
{
80000998:	ff010113          	addi	sp,sp,-16
8000099c:	00812623          	sw	s0,12(sp)
800009a0:	01010413          	addi	s0,sp,16
    return(0);
800009a4:	00000793          	li	a5,0
}
800009a8:	00078513          	mv	a0,a5
800009ac:	00c12403          	lw	s0,12(sp)
800009b0:	01010113          	addi	sp,sp,16
800009b4:	00008067          	ret

800009b8 <External_28_IRQHandler>:

__attribute__((weak))  uint8_t External_28_IRQHandler(void)
{
800009b8:	ff010113          	addi	sp,sp,-16
800009bc:	00812623          	sw	s0,12(sp)
800009c0:	01010413          	addi	s0,sp,16
    return(0);
800009c4:	00000793          	li	a5,0
}
800009c8:	00078513          	mv	a0,a5
800009cc:	00c12403          	lw	s0,12(sp)
800009d0:	01010113          	addi	sp,sp,16
800009d4:	00008067          	ret

800009d8 <External_29_IRQHandler>:

__attribute__((weak))  uint8_t External_29_IRQHandler(void)
{
800009d8:	ff010113          	addi	sp,sp,-16
800009dc:	00812623          	sw	s0,12(sp)
800009e0:	01010413          	addi	s0,sp,16
    return(0);
800009e4:	00000793          	li	a5,0
}
800009e8:	00078513          	mv	a0,a5
800009ec:	00c12403          	lw	s0,12(sp)
800009f0:	01010113          	addi	sp,sp,16
800009f4:	00008067          	ret

800009f8 <External_30_IRQHandler>:

__attribute__((weak))  uint8_t External_30_IRQHandler(void)
{
800009f8:	ff010113          	addi	sp,sp,-16
800009fc:	00812623          	sw	s0,12(sp)
80000a00:	01010413          	addi	s0,sp,16
    return(0);
80000a04:	00000793          	li	a5,0
}
80000a08:	00078513          	mv	a0,a5
80000a0c:	00c12403          	lw	s0,12(sp)
80000a10:	01010113          	addi	sp,sp,16
80000a14:	00008067          	ret

80000a18 <External_31_IRQHandler>:

__attribute__((weak))  uint8_t External_31_IRQHandler(void)
{
80000a18:	ff010113          	addi	sp,sp,-16
80000a1c:	00812623          	sw	s0,12(sp)
80000a20:	01010413          	addi	s0,sp,16
    return(0);
80000a24:	00000793          	li	a5,0
}
80000a28:	00078513          	mv	a0,a5
80000a2c:	00c12403          	lw	s0,12(sp)
80000a30:	01010113          	addi	sp,sp,16
80000a34:	00008067          	ret

80000a38 <_exit>:
}

int wait(int* status)
{
    return stub(ECHILD);
}
80000a38:	fe010113          	addi	sp,sp,-32
80000a3c:	00812e23          	sw	s0,28(sp)
80000a40:	02010413          	addi	s0,sp,32
80000a44:	fea42623          	sw	a0,-20(s0)
80000a48:	0000006f          	j	80000a48 <_exit+0x10>

80000a4c <stub>:
80000a4c:	fe010113          	addi	sp,sp,-32
80000a50:	00812e23          	sw	s0,28(sp)
80000a54:	02010413          	addi	s0,sp,32
80000a58:	fea42623          	sw	a0,-20(s0)
80000a5c:	800067b7          	lui	a5,0x80006
80000a60:	fec42703          	lw	a4,-20(s0)
80000a64:	b4e7a023          	sw	a4,-1216(a5) # 80005b40 <__stack_top+0xffffef10>
80000a68:	fff00793          	li	a5,-1
80000a6c:	00078513          	mv	a0,a5
80000a70:	01c12403          	lw	s0,28(sp)
80000a74:	02010113          	addi	sp,sp,32
80000a78:	00008067          	ret

80000a7c <write>:

ssize_t write(int fd, const void* ptr, size_t len)
{
80000a7c:	fe010113          	addi	sp,sp,-32
80000a80:	00112e23          	sw	ra,28(sp)
80000a84:	00812c23          	sw	s0,24(sp)
80000a88:	02010413          	addi	s0,sp,32
80000a8c:	fea42623          	sw	a0,-20(s0)
80000a90:	feb42423          	sw	a1,-24(s0)
80000a94:	fec42223          	sw	a2,-28(s0)
    }
    return len;
  }
#endif

  return stub(EBADF);
80000a98:	00900513          	li	a0,9
80000a9c:	fb1ff0ef          	jal	ra,80000a4c <stub>
80000aa0:	00050793          	mv	a5,a0
}
80000aa4:	00078513          	mv	a0,a5
80000aa8:	01c12083          	lw	ra,28(sp)
80000aac:	01812403          	lw	s0,24(sp)
80000ab0:	02010113          	addi	sp,sp,32
80000ab4:	00008067          	ret

80000ab8 <HW_set_32bit_reg>:
)
{
    volatile uint16_t * foo = (uint16_t * ) reg_addr;
    uint16_t value = ((*foo) & mask) >> shift;
    return (value);
}
80000ab8:	fd010113          	addi	sp,sp,-48
80000abc:	02812623          	sw	s0,44(sp)
80000ac0:	03010413          	addi	s0,sp,48
80000ac4:	fca42e23          	sw	a0,-36(s0)
80000ac8:	fcb42c23          	sw	a1,-40(s0)
80000acc:	fdc42783          	lw	a5,-36(s0)
80000ad0:	fef42623          	sw	a5,-20(s0)
80000ad4:	fec42783          	lw	a5,-20(s0)
80000ad8:	fd842703          	lw	a4,-40(s0)
80000adc:	00e7a023          	sw	a4,0(a5)
80000ae0:	00000013          	nop
80000ae4:	02c12403          	lw	s0,44(sp)
80000ae8:	03010113          	addi	sp,sp,48
80000aec:	00008067          	ret

80000af0 <HW_get_32bit_reg>:
80000af0:	fd010113          	addi	sp,sp,-48
80000af4:	02812623          	sw	s0,44(sp)
80000af8:	03010413          	addi	s0,sp,48
80000afc:	fca42e23          	sw	a0,-36(s0)
80000b00:	fdc42783          	lw	a5,-36(s0)
80000b04:	fef42623          	sw	a5,-20(s0)
80000b08:	fec42783          	lw	a5,-20(s0)
80000b0c:	0007a783          	lw	a5,0(a5)
80000b10:	00078513          	mv	a0,a5
80000b14:	02c12403          	lw	s0,44(sp)
80000b18:	03010113          	addi	sp,sp,48
80000b1c:	00008067          	ret

80000b20 <HW_set_16bit_reg>:
80000b20:	fd010113          	addi	sp,sp,-48
80000b24:	02812623          	sw	s0,44(sp)
80000b28:	03010413          	addi	s0,sp,48
80000b2c:	fca42e23          	sw	a0,-36(s0)
80000b30:	fcb42c23          	sw	a1,-40(s0)
80000b34:	fdc42783          	lw	a5,-36(s0)
80000b38:	fef42623          	sw	a5,-20(s0)
80000b3c:	fd842783          	lw	a5,-40(s0)
80000b40:	01079713          	slli	a4,a5,0x10
80000b44:	01075713          	srli	a4,a4,0x10
80000b48:	fec42783          	lw	a5,-20(s0)
80000b4c:	00e79023          	sh	a4,0(a5)
80000b50:	00000013          	nop
80000b54:	02c12403          	lw	s0,44(sp)
80000b58:	03010113          	addi	sp,sp,48
80000b5c:	00008067          	ret

80000b60 <HW_get_16bit_reg>:
80000b60:	fd010113          	addi	sp,sp,-48
80000b64:	02812623          	sw	s0,44(sp)
80000b68:	03010413          	addi	s0,sp,48
80000b6c:	fca42e23          	sw	a0,-36(s0)
80000b70:	fdc42783          	lw	a5,-36(s0)
80000b74:	fef42623          	sw	a5,-20(s0)
80000b78:	fec42783          	lw	a5,-20(s0)
80000b7c:	0007d783          	lhu	a5,0(a5)
80000b80:	01079793          	slli	a5,a5,0x10
80000b84:	0107d793          	srli	a5,a5,0x10
80000b88:	00078513          	mv	a0,a5
80000b8c:	02c12403          	lw	s0,44(sp)
80000b90:	03010113          	addi	sp,sp,48
80000b94:	00008067          	ret

80000b98 <HW_set_8bit_reg>:
HW_set_8bit_reg
(
    addr_t reg_addr,
    uint_fast8_t value
)
{
80000b98:	fd010113          	addi	sp,sp,-48
80000b9c:	02812623          	sw	s0,44(sp)
80000ba0:	03010413          	addi	s0,sp,48
80000ba4:	fca42e23          	sw	a0,-36(s0)
80000ba8:	fcb42c23          	sw	a1,-40(s0)
    volatile uint8_t * foo = (uint8_t*) reg_addr;
80000bac:	fdc42783          	lw	a5,-36(s0)
80000bb0:	fef42623          	sw	a5,-20(s0)
    *foo = value;
80000bb4:	fd842783          	lw	a5,-40(s0)
80000bb8:	0ff7f713          	andi	a4,a5,255
80000bbc:	fec42783          	lw	a5,-20(s0)
80000bc0:	00e78023          	sb	a4,0(a5)
}
80000bc4:	00000013          	nop
80000bc8:	02c12403          	lw	s0,44(sp)
80000bcc:	03010113          	addi	sp,sp,48
80000bd0:	00008067          	ret

80000bd4 <HW_get_8bit_reg>:
uint8_t
HW_get_8bit_reg
(
    addr_t reg_addr
)
{
80000bd4:	fd010113          	addi	sp,sp,-48
80000bd8:	02812623          	sw	s0,44(sp)
80000bdc:	03010413          	addi	s0,sp,48
80000be0:	fca42e23          	sw	a0,-36(s0)
    volatile uint8_t * foo = (uint8_t*) reg_addr;
80000be4:	fdc42783          	lw	a5,-36(s0)
80000be8:	fef42623          	sw	a5,-20(s0)
    return *foo;
80000bec:	fec42783          	lw	a5,-20(s0)
80000bf0:	0007c783          	lbu	a5,0(a5)
80000bf4:	0ff7f793          	andi	a5,a5,255
}
80000bf8:	00078513          	mv	a0,a5
80000bfc:	02c12403          	lw	s0,44(sp)
80000c00:	03010113          	addi	sp,sp,48
80000c04:	00008067          	ret

80000c08 <HW_set_8bit_reg_field>:
    addr_t reg_addr,
    int_fast8_t shift,
    uint_fast8_t mask,
    uint_fast8_t value
)
{
80000c08:	fd010113          	addi	sp,sp,-48
80000c0c:	02812623          	sw	s0,44(sp)
80000c10:	03010413          	addi	s0,sp,48
80000c14:	fca42e23          	sw	a0,-36(s0)
80000c18:	fcb42c23          	sw	a1,-40(s0)
80000c1c:	fcc42a23          	sw	a2,-44(s0)
80000c20:	fcd42823          	sw	a3,-48(s0)
    volatile uint8_t * foo = (uint8_t *) reg_addr;
80000c24:	fdc42783          	lw	a5,-36(s0)
80000c28:	fef42623          	sw	a5,-20(s0)
    uint8_t old_value = *foo;
80000c2c:	fec42783          	lw	a5,-20(s0)
80000c30:	0007c783          	lbu	a5,0(a5)
80000c34:	fef405a3          	sb	a5,-21(s0)
    uint8_t new_value = (value << shift);
80000c38:	fd042703          	lw	a4,-48(s0)
80000c3c:	fd842783          	lw	a5,-40(s0)
80000c40:	00f717b3          	sll	a5,a4,a5
80000c44:	fef40523          	sb	a5,-22(s0)
    *foo = (new_value & mask) | (old_value & ~mask);
80000c48:	fd442783          	lw	a5,-44(s0)
80000c4c:	0ff7f713          	andi	a4,a5,255
80000c50:	fea44783          	lbu	a5,-22(s0)
80000c54:	00f777b3          	and	a5,a4,a5
80000c58:	0ff7f713          	andi	a4,a5,255
80000c5c:	fd442783          	lw	a5,-44(s0)
80000c60:	0ff7f793          	andi	a5,a5,255
80000c64:	fff7c793          	not	a5,a5
80000c68:	0ff7f693          	andi	a3,a5,255
80000c6c:	feb44783          	lbu	a5,-21(s0)
80000c70:	00f6f7b3          	and	a5,a3,a5
80000c74:	0ff7f793          	andi	a5,a5,255
80000c78:	00f767b3          	or	a5,a4,a5
80000c7c:	0ff7f713          	andi	a4,a5,255
80000c80:	fec42783          	lw	a5,-20(s0)
80000c84:	00e78023          	sb	a4,0(a5)
}
80000c88:	00000013          	nop
80000c8c:	02c12403          	lw	s0,44(sp)
80000c90:	03010113          	addi	sp,sp,48
80000c94:	00008067          	ret

80000c98 <HW_get_8bit_reg_field>:
(
    addr_t reg_addr,
    int_fast8_t shift,
    uint_fast8_t mask
)
{
80000c98:	fd010113          	addi	sp,sp,-48
80000c9c:	02812623          	sw	s0,44(sp)
80000ca0:	03010413          	addi	s0,sp,48
80000ca4:	fca42e23          	sw	a0,-36(s0)
80000ca8:	fcb42c23          	sw	a1,-40(s0)
80000cac:	fcc42a23          	sw	a2,-44(s0)
    volatile uint8_t * foo = (uint8_t * ) reg_addr;
80000cb0:	fdc42783          	lw	a5,-36(s0)
80000cb4:	fef42623          	sw	a5,-20(s0)
    uint8_t value = ((*foo) & mask) >> shift;
80000cb8:	fec42783          	lw	a5,-20(s0)
80000cbc:	0007c783          	lbu	a5,0(a5)
80000cc0:	0ff7f793          	andi	a5,a5,255
80000cc4:	00078713          	mv	a4,a5
80000cc8:	fd442783          	lw	a5,-44(s0)
80000ccc:	00f77733          	and	a4,a4,a5
80000cd0:	fd842783          	lw	a5,-40(s0)
80000cd4:	00f757b3          	srl	a5,a4,a5
80000cd8:	fef405a3          	sb	a5,-21(s0)
    return (value);
80000cdc:	feb44783          	lbu	a5,-21(s0)
}
80000ce0:	00078513          	mv	a0,a5
80000ce4:	02c12403          	lw	s0,44(sp)
80000ce8:	03010113          	addi	sp,sp,48
80000cec:	00008067          	ret

80000cf0 <SPI_init>:
    }
    else /* Slave transfer mode not set up so discard anything in RX FIFO */
    {
        HAL_set_8bit_reg( this_spi->base_addr, CMD, CMD_RXFIFORST_MASK );
    }
}
80000cf0:	fd010113          	addi	sp,sp,-48
80000cf4:	02112623          	sw	ra,44(sp)
80000cf8:	02812423          	sw	s0,40(sp)
80000cfc:	03010413          	addi	s0,sp,48
80000d00:	fca42e23          	sw	a0,-36(s0)
80000d04:	fcb42c23          	sw	a1,-40(s0)
80000d08:	00060793          	mv	a5,a2
80000d0c:	fcf41b23          	sh	a5,-42(s0)
80000d10:	fdc42783          	lw	a5,-36(s0)
80000d14:	0e078463          	beqz	a5,80000dfc <SPI_init+0x10c>
80000d18:	fd842783          	lw	a5,-40(s0)
80000d1c:	0e078063          	beqz	a5,80000dfc <SPI_init+0x10c>
80000d20:	04c00613          	li	a2,76
80000d24:	00000593          	li	a1,0
80000d28:	fdc42503          	lw	a0,-36(s0)
80000d2c:	6ec040ef          	jal	ra,80005418 <memset>
80000d30:	fdc42783          	lw	a5,-36(s0)
80000d34:	fd842703          	lw	a4,-40(s0)
80000d38:	00e7a023          	sw	a4,0(a5)
80000d3c:	fd645703          	lhu	a4,-42(s0)
80000d40:	02000793          	li	a5,32
80000d44:	00e7ee63          	bltu	a5,a4,80000d60 <SPI_init+0x70>
80000d48:	fd645783          	lhu	a5,-42(s0)
80000d4c:	00078a63          	beqz	a5,80000d60 <SPI_init+0x70>
80000d50:	fdc42783          	lw	a5,-36(s0)
80000d54:	fd645703          	lhu	a4,-42(s0)
80000d58:	04e79223          	sh	a4,68(a5)
80000d5c:	0100006f          	j	80000d6c <SPI_init+0x7c>
80000d60:	fdc42783          	lw	a5,-36(s0)
80000d64:	00100713          	li	a4,1
80000d68:	04e79223          	sh	a4,68(a5)
80000d6c:	fdc42783          	lw	a5,-36(s0)
80000d70:	0007a783          	lw	a5,0(a5)
80000d74:	00000693          	li	a3,0
80000d78:	00100613          	li	a2,1
80000d7c:	00000593          	li	a1,0
80000d80:	00078513          	mv	a0,a5
80000d84:	e85ff0ef          	jal	ra,80000c08 <HW_set_8bit_reg_field>
80000d88:	fdc42783          	lw	a5,-36(s0)
80000d8c:	0007a783          	lw	a5,0(a5)
80000d90:	02478793          	addi	a5,a5,36
80000d94:	00000593          	li	a1,0
80000d98:	00078513          	mv	a0,a5
80000d9c:	dfdff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80000da0:	fdc42783          	lw	a5,-36(s0)
80000da4:	0007a783          	lw	a5,0(a5)
80000da8:	01c78793          	addi	a5,a5,28
80000dac:	00300593          	li	a1,3
80000db0:	00078513          	mv	a0,a5
80000db4:	de5ff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80000db8:	fdc42783          	lw	a5,-36(s0)
80000dbc:	0007a783          	lw	a5,0(a5)
80000dc0:	00478793          	addi	a5,a5,4
80000dc4:	0ff00593          	li	a1,255
80000dc8:	00078513          	mv	a0,a5
80000dcc:	dcdff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80000dd0:	fdc42783          	lw	a5,-36(s0)
80000dd4:	0007a783          	lw	a5,0(a5)
80000dd8:	01878793          	addi	a5,a5,24
80000ddc:	00000593          	li	a1,0
80000de0:	00078513          	mv	a0,a5
80000de4:	db5ff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80000de8:	fdc42783          	lw	a5,-36(s0)
80000dec:	0007a783          	lw	a5,0(a5)
80000df0:	00300593          	li	a1,3
80000df4:	00078513          	mv	a0,a5
80000df8:	da1ff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80000dfc:	fdc42783          	lw	a5,-36(s0)
80000e00:	0007a783          	lw	a5,0(a5)
80000e04:	02478793          	addi	a5,a5,36
80000e08:	00100593          	li	a1,1
80000e0c:	00078513          	mv	a0,a5
80000e10:	d89ff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80000e14:	fdc42783          	lw	a5,-36(s0)
80000e18:	0007a783          	lw	a5,0(a5)
80000e1c:	02478793          	addi	a5,a5,36
80000e20:	00078513          	mv	a0,a5
80000e24:	db1ff0ef          	jal	ra,80000bd4 <HW_get_8bit_reg>
80000e28:	00050793          	mv	a5,a0
80000e2c:	fef407a3          	sb	a5,-17(s0)
80000e30:	fdc42783          	lw	a5,-36(s0)
80000e34:	0007a783          	lw	a5,0(a5)
80000e38:	02078793          	addi	a5,a5,32
80000e3c:	00078513          	mv	a0,a5
80000e40:	d95ff0ef          	jal	ra,80000bd4 <HW_get_8bit_reg>
80000e44:	00050793          	mv	a5,a0
80000e48:	fef407a3          	sb	a5,-17(s0)
80000e4c:	00000013          	nop
80000e50:	02c12083          	lw	ra,44(sp)
80000e54:	02812403          	lw	s0,40(sp)
80000e58:	03010113          	addi	sp,sp,48
80000e5c:	00008067          	ret

80000e60 <SPI_configure_master_mode>:
80000e60:	fe010113          	addi	sp,sp,-32
80000e64:	00112e23          	sw	ra,28(sp)
80000e68:	00812c23          	sw	s0,24(sp)
80000e6c:	02010413          	addi	s0,sp,32
80000e70:	fea42623          	sw	a0,-20(s0)
80000e74:	fec42783          	lw	a5,-20(s0)
80000e78:	08078263          	beqz	a5,80000efc <SPI_configure_master_mode+0x9c>
80000e7c:	fec42783          	lw	a5,-20(s0)
80000e80:	0007a783          	lw	a5,0(a5)
80000e84:	00000693          	li	a3,0
80000e88:	00100613          	li	a2,1
80000e8c:	00000593          	li	a1,0
80000e90:	00078513          	mv	a0,a5
80000e94:	d75ff0ef          	jal	ra,80000c08 <HW_set_8bit_reg_field>
80000e98:	fec42783          	lw	a5,-20(s0)
80000e9c:	0407a423          	sw	zero,72(a5)
80000ea0:	fec42783          	lw	a5,-20(s0)
80000ea4:	0007a783          	lw	a5,0(a5)
80000ea8:	01c78793          	addi	a5,a5,28
80000eac:	00300593          	li	a1,3
80000eb0:	00078513          	mv	a0,a5
80000eb4:	ce5ff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80000eb8:	fec42783          	lw	a5,-20(s0)
80000ebc:	0007a783          	lw	a5,0(a5)
80000ec0:	00478793          	addi	a5,a5,4
80000ec4:	0ff00593          	li	a1,255
80000ec8:	00078513          	mv	a0,a5
80000ecc:	ccdff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80000ed0:	fec42783          	lw	a5,-20(s0)
80000ed4:	0007a783          	lw	a5,0(a5)
80000ed8:	01878793          	addi	a5,a5,24
80000edc:	00000593          	li	a1,0
80000ee0:	00078513          	mv	a0,a5
80000ee4:	cb5ff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80000ee8:	fec42783          	lw	a5,-20(s0)
80000eec:	0007a783          	lw	a5,0(a5)
80000ef0:	00300593          	li	a1,3
80000ef4:	00078513          	mv	a0,a5
80000ef8:	ca1ff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80000efc:	00000013          	nop
80000f00:	01c12083          	lw	ra,28(sp)
80000f04:	01812403          	lw	s0,24(sp)
80000f08:	02010113          	addi	sp,sp,32
80000f0c:	00008067          	ret

80000f10 <SPI_set_slave_select>:
80000f10:	fd010113          	addi	sp,sp,-48
80000f14:	02112623          	sw	ra,44(sp)
80000f18:	02812423          	sw	s0,40(sp)
80000f1c:	03010413          	addi	s0,sp,48
80000f20:	fca42e23          	sw	a0,-36(s0)
80000f24:	fcb42c23          	sw	a1,-40(s0)
80000f28:	fe042623          	sw	zero,-20(s0)
80000f2c:	fdc42783          	lw	a5,-36(s0)
80000f30:	0a078663          	beqz	a5,80000fdc <SPI_set_slave_select+0xcc>
80000f34:	fd842703          	lw	a4,-40(s0)
80000f38:	00700793          	li	a5,7
80000f3c:	0ae7e063          	bltu	a5,a4,80000fdc <SPI_set_slave_select+0xcc>
80000f40:	fdc42783          	lw	a5,-36(s0)
80000f44:	0007a783          	lw	a5,0(a5)
80000f48:	00200613          	li	a2,2
80000f4c:	00100593          	li	a1,1
80000f50:	00078513          	mv	a0,a5
80000f54:	d45ff0ef          	jal	ra,80000c98 <HW_get_8bit_reg_field>
80000f58:	00050793          	mv	a5,a0
80000f5c:	08078063          	beqz	a5,80000fdc <SPI_set_slave_select+0xcc>
80000f60:	fdc42783          	lw	a5,-36(s0)
80000f64:	0007a783          	lw	a5,0(a5)
80000f68:	02078793          	addi	a5,a5,32
80000f6c:	01000613          	li	a2,16
80000f70:	00400593          	li	a1,4
80000f74:	00078513          	mv	a0,a5
80000f78:	d21ff0ef          	jal	ra,80000c98 <HW_get_8bit_reg_field>
80000f7c:	00050793          	mv	a5,a0
80000f80:	00078713          	mv	a4,a5
80000f84:	00100793          	li	a5,1
80000f88:	00f71663          	bne	a4,a5,80000f94 <SPI_set_slave_select+0x84>
80000f8c:	fdc42503          	lw	a0,-36(s0)
80000f90:	21c000ef          	jal	ra,800011ac <recover_from_rx_overflow>
80000f94:	fdc42783          	lw	a5,-36(s0)
80000f98:	0007a783          	lw	a5,0(a5)
80000f9c:	02478793          	addi	a5,a5,36
80000fa0:	00078513          	mv	a0,a5
80000fa4:	c31ff0ef          	jal	ra,80000bd4 <HW_get_8bit_reg>
80000fa8:	00050793          	mv	a5,a0
80000fac:	00078693          	mv	a3,a5
80000fb0:	00100713          	li	a4,1
80000fb4:	fd842783          	lw	a5,-40(s0)
80000fb8:	00f717b3          	sll	a5,a4,a5
80000fbc:	00f6e7b3          	or	a5,a3,a5
80000fc0:	fef42623          	sw	a5,-20(s0)
80000fc4:	fdc42783          	lw	a5,-36(s0)
80000fc8:	0007a783          	lw	a5,0(a5)
80000fcc:	02478793          	addi	a5,a5,36
80000fd0:	fec42583          	lw	a1,-20(s0)
80000fd4:	00078513          	mv	a0,a5
80000fd8:	bc1ff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80000fdc:	00000013          	nop
80000fe0:	02c12083          	lw	ra,44(sp)
80000fe4:	02812403          	lw	s0,40(sp)
80000fe8:	03010113          	addi	sp,sp,48
80000fec:	00008067          	ret

80000ff0 <SPI_clear_slave_select>:
80000ff0:	fd010113          	addi	sp,sp,-48
80000ff4:	02112623          	sw	ra,44(sp)
80000ff8:	02812423          	sw	s0,40(sp)
80000ffc:	03010413          	addi	s0,sp,48
80001000:	fca42e23          	sw	a0,-36(s0)
80001004:	fcb42c23          	sw	a1,-40(s0)
80001008:	fe042623          	sw	zero,-20(s0)
8000100c:	fdc42783          	lw	a5,-36(s0)
80001010:	0a078863          	beqz	a5,800010c0 <SPI_clear_slave_select+0xd0>
80001014:	fd842703          	lw	a4,-40(s0)
80001018:	00700793          	li	a5,7
8000101c:	0ae7e263          	bltu	a5,a4,800010c0 <SPI_clear_slave_select+0xd0>
80001020:	fdc42783          	lw	a5,-36(s0)
80001024:	0007a783          	lw	a5,0(a5)
80001028:	00200613          	li	a2,2
8000102c:	00100593          	li	a1,1
80001030:	00078513          	mv	a0,a5
80001034:	c65ff0ef          	jal	ra,80000c98 <HW_get_8bit_reg_field>
80001038:	00050793          	mv	a5,a0
8000103c:	08078263          	beqz	a5,800010c0 <SPI_clear_slave_select+0xd0>
80001040:	fdc42783          	lw	a5,-36(s0)
80001044:	0007a783          	lw	a5,0(a5)
80001048:	02078793          	addi	a5,a5,32
8000104c:	01000613          	li	a2,16
80001050:	00400593          	li	a1,4
80001054:	00078513          	mv	a0,a5
80001058:	c41ff0ef          	jal	ra,80000c98 <HW_get_8bit_reg_field>
8000105c:	00050793          	mv	a5,a0
80001060:	00078713          	mv	a4,a5
80001064:	00100793          	li	a5,1
80001068:	00f71663          	bne	a4,a5,80001074 <SPI_clear_slave_select+0x84>
8000106c:	fdc42503          	lw	a0,-36(s0)
80001070:	13c000ef          	jal	ra,800011ac <recover_from_rx_overflow>
80001074:	fdc42783          	lw	a5,-36(s0)
80001078:	0007a783          	lw	a5,0(a5)
8000107c:	02478793          	addi	a5,a5,36
80001080:	00078513          	mv	a0,a5
80001084:	b51ff0ef          	jal	ra,80000bd4 <HW_get_8bit_reg>
80001088:	00050793          	mv	a5,a0
8000108c:	00078693          	mv	a3,a5
80001090:	00100713          	li	a4,1
80001094:	fd842783          	lw	a5,-40(s0)
80001098:	00f717b3          	sll	a5,a4,a5
8000109c:	fff7c793          	not	a5,a5
800010a0:	00f6f7b3          	and	a5,a3,a5
800010a4:	fef42623          	sw	a5,-20(s0)
800010a8:	fdc42783          	lw	a5,-36(s0)
800010ac:	0007a783          	lw	a5,0(a5)
800010b0:	02478793          	addi	a5,a5,36
800010b4:	fec42583          	lw	a1,-20(s0)
800010b8:	00078513          	mv	a0,a5
800010bc:	addff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
800010c0:	00000013          	nop
800010c4:	02c12083          	lw	ra,44(sp)
800010c8:	02812403          	lw	s0,40(sp)
800010cc:	03010113          	addi	sp,sp,48
800010d0:	00008067          	ret

800010d4 <SPI_transfer_frame>:
800010d4:	fd010113          	addi	sp,sp,-48
800010d8:	02112623          	sw	ra,44(sp)
800010dc:	02812423          	sw	s0,40(sp)
800010e0:	03010413          	addi	s0,sp,48
800010e4:	fca42e23          	sw	a0,-36(s0)
800010e8:	fcb42c23          	sw	a1,-40(s0)
800010ec:	fe042623          	sw	zero,-20(s0)
800010f0:	fdc42783          	lw	a5,-36(s0)
800010f4:	0a078063          	beqz	a5,80001194 <SPI_transfer_frame+0xc0>
800010f8:	fdc42783          	lw	a5,-36(s0)
800010fc:	0007a783          	lw	a5,0(a5)
80001100:	00200613          	li	a2,2
80001104:	00100593          	li	a1,1
80001108:	00078513          	mv	a0,a5
8000110c:	b8dff0ef          	jal	ra,80000c98 <HW_get_8bit_reg_field>
80001110:	00050793          	mv	a5,a0
80001114:	08078063          	beqz	a5,80001194 <SPI_transfer_frame+0xc0>
80001118:	fdc42783          	lw	a5,-36(s0)
8000111c:	0007a783          	lw	a5,0(a5)
80001120:	01c78793          	addi	a5,a5,28
80001124:	00300593          	li	a1,3
80001128:	00078513          	mv	a0,a5
8000112c:	a6dff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80001130:	fdc42783          	lw	a5,-36(s0)
80001134:	0007a783          	lw	a5,0(a5)
80001138:	02878793          	addi	a5,a5,40
8000113c:	fd842583          	lw	a1,-40(s0)
80001140:	00078513          	mv	a0,a5
80001144:	975ff0ef          	jal	ra,80000ab8 <HW_set_32bit_reg>
80001148:	00000013          	nop
8000114c:	fdc42783          	lw	a5,-36(s0)
80001150:	0007a783          	lw	a5,0(a5)
80001154:	02078793          	addi	a5,a5,32
80001158:	00200613          	li	a2,2
8000115c:	00100593          	li	a1,1
80001160:	00078513          	mv	a0,a5
80001164:	b35ff0ef          	jal	ra,80000c98 <HW_get_8bit_reg_field>
80001168:	00050793          	mv	a5,a0
8000116c:	00078713          	mv	a4,a5
80001170:	00100793          	li	a5,1
80001174:	fcf71ce3          	bne	a4,a5,8000114c <SPI_transfer_frame+0x78>
80001178:	fdc42783          	lw	a5,-36(s0)
8000117c:	0007a783          	lw	a5,0(a5)
80001180:	00878793          	addi	a5,a5,8
80001184:	00078513          	mv	a0,a5
80001188:	969ff0ef          	jal	ra,80000af0 <HW_get_32bit_reg>
8000118c:	00050793          	mv	a5,a0
80001190:	fef42623          	sw	a5,-20(s0)
80001194:	fec42783          	lw	a5,-20(s0)
80001198:	00078513          	mv	a0,a5
8000119c:	02c12083          	lw	ra,44(sp)
800011a0:	02812403          	lw	s0,40(sp)
800011a4:	03010113          	addi	sp,sp,48
800011a8:	00008067          	ret

800011ac <recover_from_rx_overflow>:
 */
static void recover_from_rx_overflow
(
    const spi_instance_t * this_spi
)
{
800011ac:	fe010113          	addi	sp,sp,-32
800011b0:	00112e23          	sw	ra,28(sp)
800011b4:	00812c23          	sw	s0,24(sp)
800011b8:	02010413          	addi	s0,sp,32
800011bc:	fea42623          	sw	a0,-20(s0)
    /* Disable CoreSPI */
    HAL_set_8bit_reg_field( this_spi->base_addr, CTRL1_ENABLE, DISABLE );
800011c0:	fec42783          	lw	a5,-20(s0)
800011c4:	0007a783          	lw	a5,0(a5)
800011c8:	00000693          	li	a3,0
800011cc:	00100613          	li	a2,1
800011d0:	00000593          	li	a1,0
800011d4:	00078513          	mv	a0,a5
800011d8:	a31ff0ef          	jal	ra,80000c08 <HW_set_8bit_reg_field>

    /* Reset TX and RX FIFOs */
    HAL_set_8bit_reg( this_spi->base_addr, CMD, CMD_TXFIFORST_MASK | CMD_RXFIFORST_MASK );
800011dc:	fec42783          	lw	a5,-20(s0)
800011e0:	0007a783          	lw	a5,0(a5)
800011e4:	01c78793          	addi	a5,a5,28
800011e8:	00300593          	li	a1,3
800011ec:	00078513          	mv	a0,a5
800011f0:	9a9ff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>

    /* Clear all interrupts */
    HAL_set_8bit_reg( this_spi->base_addr, INTCLR, SPI_ALL_INTS );
800011f4:	fec42783          	lw	a5,-20(s0)
800011f8:	0007a783          	lw	a5,0(a5)
800011fc:	00478793          	addi	a5,a5,4
80001200:	0ff00593          	li	a1,255
80001204:	00078513          	mv	a0,a5
80001208:	991ff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>

    /* Enable CoreSPI */
    HAL_set_8bit_reg_field( this_spi->base_addr, CTRL1_ENABLE, ENABLE );
8000120c:	fec42783          	lw	a5,-20(s0)
80001210:	0007a783          	lw	a5,0(a5)
80001214:	00100693          	li	a3,1
80001218:	00100613          	li	a2,1
8000121c:	00000593          	li	a1,0
80001220:	00078513          	mv	a0,a5
80001224:	9e5ff0ef          	jal	ra,80000c08 <HW_set_8bit_reg_field>
}
80001228:	00000013          	nop
8000122c:	01c12083          	lw	ra,28(sp)
80001230:	01812403          	lw	s0,24(sp)
80001234:	02010113          	addi	sp,sp,32
80001238:	00008067          	ret

8000123c <GPIO_init>:
            HAL_ASSERT(0);
            break;
    }
    
    return gpio_in;
}
8000123c:	fd010113          	addi	sp,sp,-48
80001240:	02112623          	sw	ra,44(sp)
80001244:	02812423          	sw	s0,40(sp)
80001248:	03010413          	addi	s0,sp,48
8000124c:	fca42e23          	sw	a0,-36(s0)
80001250:	fcb42c23          	sw	a1,-40(s0)
80001254:	fcc42a23          	sw	a2,-44(s0)
80001258:	fe0407a3          	sb	zero,-17(s0)
8000125c:	fd842783          	lw	a5,-40(s0)
80001260:	fef42423          	sw	a5,-24(s0)
80001264:	fdc42783          	lw	a5,-36(s0)
80001268:	fd842703          	lw	a4,-40(s0)
8000126c:	00e7a023          	sw	a4,0(a5)
80001270:	fdc42783          	lw	a5,-36(s0)
80001274:	fd442703          	lw	a4,-44(s0)
80001278:	00e7a223          	sw	a4,4(a5)
8000127c:	fe0407a3          	sb	zero,-17(s0)
80001280:	fd842783          	lw	a5,-40(s0)
80001284:	fef42423          	sw	a5,-24(s0)
80001288:	0280006f          	j	800012b0 <GPIO_init+0x74>
8000128c:	00000593          	li	a1,0
80001290:	fe842503          	lw	a0,-24(s0)
80001294:	905ff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80001298:	fe842783          	lw	a5,-24(s0)
8000129c:	00478793          	addi	a5,a5,4
800012a0:	fef42423          	sw	a5,-24(s0)
800012a4:	fef44783          	lbu	a5,-17(s0)
800012a8:	00178793          	addi	a5,a5,1
800012ac:	fef407a3          	sb	a5,-17(s0)
800012b0:	fef44703          	lbu	a4,-17(s0)
800012b4:	01f00793          	li	a5,31
800012b8:	fce7fae3          	bleu	a4,a5,8000128c <GPIO_init+0x50>
800012bc:	fdc42783          	lw	a5,-36(s0)
800012c0:	0047a783          	lw	a5,4(a5)
800012c4:	00100713          	li	a4,1
800012c8:	02e78a63          	beq	a5,a4,800012fc <GPIO_init+0xc0>
800012cc:	00100713          	li	a4,1
800012d0:	06e7e463          	bltu	a5,a4,80001338 <GPIO_init+0xfc>
800012d4:	00200713          	li	a4,2
800012d8:	00e78463          	beq	a5,a4,800012e0 <GPIO_init+0xa4>
800012dc:	0c00006f          	j	8000139c <GPIO_init+0x160>
800012e0:	fdc42783          	lw	a5,-36(s0)
800012e4:	0007a783          	lw	a5,0(a5)
800012e8:	08078793          	addi	a5,a5,128
800012ec:	fff00593          	li	a1,-1
800012f0:	00078513          	mv	a0,a5
800012f4:	fc4ff0ef          	jal	ra,80000ab8 <HW_set_32bit_reg>
800012f8:	0a40006f          	j	8000139c <GPIO_init+0x160>
800012fc:	fdc42783          	lw	a5,-36(s0)
80001300:	0007a783          	lw	a5,0(a5)
80001304:	08078713          	addi	a4,a5,128
80001308:	000107b7          	lui	a5,0x10
8000130c:	fff78593          	addi	a1,a5,-1 # ffff <HEAP_SIZE+0xf7ff>
80001310:	00070513          	mv	a0,a4
80001314:	80dff0ef          	jal	ra,80000b20 <HW_set_16bit_reg>
80001318:	fdc42783          	lw	a5,-36(s0)
8000131c:	0007a783          	lw	a5,0(a5)
80001320:	08478713          	addi	a4,a5,132
80001324:	000107b7          	lui	a5,0x10
80001328:	fff78593          	addi	a1,a5,-1 # ffff <HEAP_SIZE+0xf7ff>
8000132c:	00070513          	mv	a0,a4
80001330:	ff0ff0ef          	jal	ra,80000b20 <HW_set_16bit_reg>
80001334:	0680006f          	j	8000139c <GPIO_init+0x160>
80001338:	fdc42783          	lw	a5,-36(s0)
8000133c:	0007a783          	lw	a5,0(a5)
80001340:	08078793          	addi	a5,a5,128
80001344:	0ff00593          	li	a1,255
80001348:	00078513          	mv	a0,a5
8000134c:	84dff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80001350:	fdc42783          	lw	a5,-36(s0)
80001354:	0007a783          	lw	a5,0(a5)
80001358:	08478793          	addi	a5,a5,132
8000135c:	0ff00593          	li	a1,255
80001360:	00078513          	mv	a0,a5
80001364:	835ff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80001368:	fdc42783          	lw	a5,-36(s0)
8000136c:	0007a783          	lw	a5,0(a5)
80001370:	08878793          	addi	a5,a5,136
80001374:	0ff00593          	li	a1,255
80001378:	00078513          	mv	a0,a5
8000137c:	81dff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80001380:	fdc42783          	lw	a5,-36(s0)
80001384:	0007a783          	lw	a5,0(a5)
80001388:	08c78793          	addi	a5,a5,140
8000138c:	0ff00593          	li	a1,255
80001390:	00078513          	mv	a0,a5
80001394:	805ff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80001398:	00000013          	nop
8000139c:	00000013          	nop
800013a0:	02c12083          	lw	ra,44(sp)
800013a4:	02812403          	lw	s0,40(sp)
800013a8:	03010113          	addi	sp,sp,48
800013ac:	00008067          	ret

800013b0 <GPIO_config>:
800013b0:	fd010113          	addi	sp,sp,-48
800013b4:	02112623          	sw	ra,44(sp)
800013b8:	02812423          	sw	s0,40(sp)
800013bc:	03010413          	addi	s0,sp,48
800013c0:	fca42e23          	sw	a0,-36(s0)
800013c4:	fcb42c23          	sw	a1,-40(s0)
800013c8:	fcc42a23          	sw	a2,-44(s0)
800013cc:	fd842703          	lw	a4,-40(s0)
800013d0:	01f00793          	li	a5,31
800013d4:	02e7e863          	bltu	a5,a4,80001404 <GPIO_config+0x54>
800013d8:	fdc42783          	lw	a5,-36(s0)
800013dc:	0007a783          	lw	a5,0(a5)
800013e0:	fef42623          	sw	a5,-20(s0)
800013e4:	fd842783          	lw	a5,-40(s0)
800013e8:	00279793          	slli	a5,a5,0x2
800013ec:	fec42703          	lw	a4,-20(s0)
800013f0:	00f707b3          	add	a5,a4,a5
800013f4:	fef42623          	sw	a5,-20(s0)
800013f8:	fd442583          	lw	a1,-44(s0)
800013fc:	fec42503          	lw	a0,-20(s0)
80001400:	eb8ff0ef          	jal	ra,80000ab8 <HW_set_32bit_reg>
80001404:	00000013          	nop
80001408:	02c12083          	lw	ra,44(sp)
8000140c:	02812403          	lw	s0,40(sp)
80001410:	03010113          	addi	sp,sp,48
80001414:	00008067          	ret

80001418 <GPIO_set_outputs>:
80001418:	fe010113          	addi	sp,sp,-32
8000141c:	00112e23          	sw	ra,28(sp)
80001420:	00812c23          	sw	s0,24(sp)
80001424:	02010413          	addi	s0,sp,32
80001428:	fea42623          	sw	a0,-20(s0)
8000142c:	feb42423          	sw	a1,-24(s0)
80001430:	fec42783          	lw	a5,-20(s0)
80001434:	0047a783          	lw	a5,4(a5)
80001438:	00100713          	li	a4,1
8000143c:	02e78a63          	beq	a5,a4,80001470 <GPIO_set_outputs+0x58>
80001440:	00100713          	li	a4,1
80001444:	06e7ee63          	bltu	a5,a4,800014c0 <GPIO_set_outputs+0xa8>
80001448:	00200713          	li	a4,2
8000144c:	00e78463          	beq	a5,a4,80001454 <GPIO_set_outputs+0x3c>
80001450:	1000006f          	j	80001550 <GPIO_set_outputs+0x138>
80001454:	fec42783          	lw	a5,-20(s0)
80001458:	0007a783          	lw	a5,0(a5)
8000145c:	0a078793          	addi	a5,a5,160
80001460:	fe842583          	lw	a1,-24(s0)
80001464:	00078513          	mv	a0,a5
80001468:	e50ff0ef          	jal	ra,80000ab8 <HW_set_32bit_reg>
8000146c:	0e40006f          	j	80001550 <GPIO_set_outputs+0x138>
80001470:	fec42783          	lw	a5,-20(s0)
80001474:	0007a783          	lw	a5,0(a5)
80001478:	0a078793          	addi	a5,a5,160
8000147c:	fe842703          	lw	a4,-24(s0)
80001480:	01071713          	slli	a4,a4,0x10
80001484:	01075713          	srli	a4,a4,0x10
80001488:	00070593          	mv	a1,a4
8000148c:	00078513          	mv	a0,a5
80001490:	e90ff0ef          	jal	ra,80000b20 <HW_set_16bit_reg>
80001494:	fec42783          	lw	a5,-20(s0)
80001498:	0007a783          	lw	a5,0(a5)
8000149c:	0a478713          	addi	a4,a5,164
800014a0:	fe842783          	lw	a5,-24(s0)
800014a4:	0107d793          	srli	a5,a5,0x10
800014a8:	01079793          	slli	a5,a5,0x10
800014ac:	0107d793          	srli	a5,a5,0x10
800014b0:	00078593          	mv	a1,a5
800014b4:	00070513          	mv	a0,a4
800014b8:	e68ff0ef          	jal	ra,80000b20 <HW_set_16bit_reg>
800014bc:	0940006f          	j	80001550 <GPIO_set_outputs+0x138>
800014c0:	fec42783          	lw	a5,-20(s0)
800014c4:	0007a783          	lw	a5,0(a5)
800014c8:	0a078793          	addi	a5,a5,160
800014cc:	fe842703          	lw	a4,-24(s0)
800014d0:	0ff77713          	andi	a4,a4,255
800014d4:	00070593          	mv	a1,a4
800014d8:	00078513          	mv	a0,a5
800014dc:	ebcff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
800014e0:	fec42783          	lw	a5,-20(s0)
800014e4:	0007a783          	lw	a5,0(a5)
800014e8:	0a478713          	addi	a4,a5,164
800014ec:	fe842783          	lw	a5,-24(s0)
800014f0:	0087d793          	srli	a5,a5,0x8
800014f4:	0ff7f793          	andi	a5,a5,255
800014f8:	00078593          	mv	a1,a5
800014fc:	00070513          	mv	a0,a4
80001500:	e98ff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80001504:	fec42783          	lw	a5,-20(s0)
80001508:	0007a783          	lw	a5,0(a5)
8000150c:	0a878713          	addi	a4,a5,168
80001510:	fe842783          	lw	a5,-24(s0)
80001514:	0107d793          	srli	a5,a5,0x10
80001518:	0ff7f793          	andi	a5,a5,255
8000151c:	00078593          	mv	a1,a5
80001520:	00070513          	mv	a0,a4
80001524:	e74ff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
80001528:	fec42783          	lw	a5,-20(s0)
8000152c:	0007a783          	lw	a5,0(a5)
80001530:	0ac78713          	addi	a4,a5,172
80001534:	fe842783          	lw	a5,-24(s0)
80001538:	0187d793          	srli	a5,a5,0x18
8000153c:	0ff7f793          	andi	a5,a5,255
80001540:	00078593          	mv	a1,a5
80001544:	00070513          	mv	a0,a4
80001548:	e50ff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
8000154c:	00000013          	nop
80001550:	00000013          	nop
80001554:	01c12083          	lw	ra,28(sp)
80001558:	01812403          	lw	s0,24(sp)
8000155c:	02010113          	addi	sp,sp,32
80001560:	00008067          	ret

80001564 <GPIO_get_outputs>:
 */
uint32_t GPIO_get_outputs
(
    gpio_instance_t *   this_gpio
)
{
80001564:	fd010113          	addi	sp,sp,-48
80001568:	02112623          	sw	ra,44(sp)
8000156c:	02812423          	sw	s0,40(sp)
80001570:	03010413          	addi	s0,sp,48
80001574:	fca42e23          	sw	a0,-36(s0)
    uint32_t gpio_out = 0;
80001578:	fe042623          	sw	zero,-20(s0)
    
    switch( this_gpio->apb_bus_width )
8000157c:	fdc42783          	lw	a5,-36(s0)
80001580:	0047a783          	lw	a5,4(a5)
80001584:	00100713          	li	a4,1
80001588:	02e78a63          	beq	a5,a4,800015bc <GPIO_get_outputs+0x58>
8000158c:	00100713          	li	a4,1
80001590:	08e7e263          	bltu	a5,a4,80001614 <GPIO_get_outputs+0xb0>
80001594:	00200713          	li	a4,2
80001598:	00e78463          	beq	a5,a4,800015a0 <GPIO_get_outputs+0x3c>
            gpio_out |= (HAL_get_16bit_reg( this_gpio->base_addr, GPIO_OUT3 ) << 24);
            break;
            
        default:
            HAL_ASSERT(0);
            break;
8000159c:	1280006f          	j	800016c4 <GPIO_get_outputs+0x160>
            gpio_out = HAL_get_32bit_reg( this_gpio->base_addr, GPIO_OUT );
800015a0:	fdc42783          	lw	a5,-36(s0)
800015a4:	0007a783          	lw	a5,0(a5)
800015a8:	0a078793          	addi	a5,a5,160
800015ac:	00078513          	mv	a0,a5
800015b0:	d40ff0ef          	jal	ra,80000af0 <HW_get_32bit_reg>
800015b4:	fea42623          	sw	a0,-20(s0)
            break;
800015b8:	10c0006f          	j	800016c4 <GPIO_get_outputs+0x160>
            gpio_out |= HAL_get_16bit_reg( this_gpio->base_addr, GPIO_OUT0 );
800015bc:	fdc42783          	lw	a5,-36(s0)
800015c0:	0007a783          	lw	a5,0(a5)
800015c4:	0a078793          	addi	a5,a5,160
800015c8:	00078513          	mv	a0,a5
800015cc:	d94ff0ef          	jal	ra,80000b60 <HW_get_16bit_reg>
800015d0:	00050793          	mv	a5,a0
800015d4:	00078713          	mv	a4,a5
800015d8:	fec42783          	lw	a5,-20(s0)
800015dc:	00e7e7b3          	or	a5,a5,a4
800015e0:	fef42623          	sw	a5,-20(s0)
            gpio_out |= (HAL_get_16bit_reg( this_gpio->base_addr, GPIO_OUT1 ) << 16);
800015e4:	fdc42783          	lw	a5,-36(s0)
800015e8:	0007a783          	lw	a5,0(a5)
800015ec:	0a478793          	addi	a5,a5,164
800015f0:	00078513          	mv	a0,a5
800015f4:	d6cff0ef          	jal	ra,80000b60 <HW_get_16bit_reg>
800015f8:	00050793          	mv	a5,a0
800015fc:	01079793          	slli	a5,a5,0x10
80001600:	00078713          	mv	a4,a5
80001604:	fec42783          	lw	a5,-20(s0)
80001608:	00e7e7b3          	or	a5,a5,a4
8000160c:	fef42623          	sw	a5,-20(s0)
            break;
80001610:	0b40006f          	j	800016c4 <GPIO_get_outputs+0x160>
            gpio_out |= HAL_get_16bit_reg( this_gpio->base_addr, GPIO_OUT0 );
80001614:	fdc42783          	lw	a5,-36(s0)
80001618:	0007a783          	lw	a5,0(a5)
8000161c:	0a078793          	addi	a5,a5,160
80001620:	00078513          	mv	a0,a5
80001624:	d3cff0ef          	jal	ra,80000b60 <HW_get_16bit_reg>
80001628:	00050793          	mv	a5,a0
8000162c:	00078713          	mv	a4,a5
80001630:	fec42783          	lw	a5,-20(s0)
80001634:	00e7e7b3          	or	a5,a5,a4
80001638:	fef42623          	sw	a5,-20(s0)
            gpio_out |= (HAL_get_16bit_reg( this_gpio->base_addr, GPIO_OUT1 ) << 8);
8000163c:	fdc42783          	lw	a5,-36(s0)
80001640:	0007a783          	lw	a5,0(a5)
80001644:	0a478793          	addi	a5,a5,164
80001648:	00078513          	mv	a0,a5
8000164c:	d14ff0ef          	jal	ra,80000b60 <HW_get_16bit_reg>
80001650:	00050793          	mv	a5,a0
80001654:	00879793          	slli	a5,a5,0x8
80001658:	00078713          	mv	a4,a5
8000165c:	fec42783          	lw	a5,-20(s0)
80001660:	00e7e7b3          	or	a5,a5,a4
80001664:	fef42623          	sw	a5,-20(s0)
            gpio_out |= (HAL_get_16bit_reg( this_gpio->base_addr, GPIO_OUT2 ) << 16);
80001668:	fdc42783          	lw	a5,-36(s0)
8000166c:	0007a783          	lw	a5,0(a5)
80001670:	0a878793          	addi	a5,a5,168
80001674:	00078513          	mv	a0,a5
80001678:	ce8ff0ef          	jal	ra,80000b60 <HW_get_16bit_reg>
8000167c:	00050793          	mv	a5,a0
80001680:	01079793          	slli	a5,a5,0x10
80001684:	00078713          	mv	a4,a5
80001688:	fec42783          	lw	a5,-20(s0)
8000168c:	00e7e7b3          	or	a5,a5,a4
80001690:	fef42623          	sw	a5,-20(s0)
            gpio_out |= (HAL_get_16bit_reg( this_gpio->base_addr, GPIO_OUT3 ) << 24);
80001694:	fdc42783          	lw	a5,-36(s0)
80001698:	0007a783          	lw	a5,0(a5)
8000169c:	0ac78793          	addi	a5,a5,172
800016a0:	00078513          	mv	a0,a5
800016a4:	cbcff0ef          	jal	ra,80000b60 <HW_get_16bit_reg>
800016a8:	00050793          	mv	a5,a0
800016ac:	01879793          	slli	a5,a5,0x18
800016b0:	00078713          	mv	a4,a5
800016b4:	fec42783          	lw	a5,-20(s0)
800016b8:	00e7e7b3          	or	a5,a5,a4
800016bc:	fef42623          	sw	a5,-20(s0)
            break;
800016c0:	00000013          	nop
    }
    
    return gpio_out;
800016c4:	fec42783          	lw	a5,-20(s0)
}
800016c8:	00078513          	mv	a0,a5
800016cc:	02c12083          	lw	ra,44(sp)
800016d0:	02812403          	lw	s0,40(sp)
800016d4:	03010113          	addi	sp,sp,48
800016d8:	00008067          	ret

800016dc <GPIO_set_output>:
(
    gpio_instance_t *   this_gpio,
    gpio_id_t           port_id,
    uint8_t             value
)
{
800016dc:	fd010113          	addi	sp,sp,-48
800016e0:	02112623          	sw	ra,44(sp)
800016e4:	02812423          	sw	s0,40(sp)
800016e8:	03010413          	addi	s0,sp,48
800016ec:	fca42e23          	sw	a0,-36(s0)
800016f0:	fcb42c23          	sw	a1,-40(s0)
800016f4:	00060793          	mv	a5,a2
800016f8:	fcf40ba3          	sb	a5,-41(s0)
    HAL_ASSERT( port_id < NB_OF_GPIO );
    
            
    switch( this_gpio->apb_bus_width )
800016fc:	fdc42783          	lw	a5,-36(s0)
80001700:	0047a783          	lw	a5,4(a5)
80001704:	00100713          	li	a4,1
80001708:	08e78a63          	beq	a5,a4,8000179c <GPIO_set_output+0xc0>
8000170c:	00100713          	li	a4,1
80001710:	14e7e063          	bltu	a5,a4,80001850 <GPIO_set_output+0x174>
80001714:	00200713          	li	a4,2
80001718:	00e78463          	beq	a5,a4,80001720 <GPIO_set_output+0x44>
            }
            break;
            
        default:
            HAL_ASSERT(0);
            break;
8000171c:	1e80006f          	j	80001904 <GPIO_set_output+0x228>
                outputs_state = HAL_get_32bit_reg( this_gpio->base_addr, GPIO_OUT );
80001720:	fdc42783          	lw	a5,-36(s0)
80001724:	0007a783          	lw	a5,0(a5)
80001728:	0a078793          	addi	a5,a5,160
8000172c:	00078513          	mv	a0,a5
80001730:	bc0ff0ef          	jal	ra,80000af0 <HW_get_32bit_reg>
80001734:	fea42623          	sw	a0,-20(s0)
                if ( 0 == value )
80001738:	fd744783          	lbu	a5,-41(s0)
8000173c:	02079463          	bnez	a5,80001764 <GPIO_set_output+0x88>
                    outputs_state &= ~(1 << port_id);
80001740:	00100713          	li	a4,1
80001744:	fd842783          	lw	a5,-40(s0)
80001748:	00f717b3          	sll	a5,a4,a5
8000174c:	fff7c793          	not	a5,a5
80001750:	00078713          	mv	a4,a5
80001754:	fec42783          	lw	a5,-20(s0)
80001758:	00e7f7b3          	and	a5,a5,a4
8000175c:	fef42623          	sw	a5,-20(s0)
80001760:	0200006f          	j	80001780 <GPIO_set_output+0xa4>
                    outputs_state |= 1 << port_id;
80001764:	00100713          	li	a4,1
80001768:	fd842783          	lw	a5,-40(s0)
8000176c:	00f717b3          	sll	a5,a4,a5
80001770:	00078713          	mv	a4,a5
80001774:	fec42783          	lw	a5,-20(s0)
80001778:	00e7e7b3          	or	a5,a5,a4
8000177c:	fef42623          	sw	a5,-20(s0)
                HAL_set_32bit_reg( this_gpio->base_addr, GPIO_OUT, outputs_state );
80001780:	fdc42783          	lw	a5,-36(s0)
80001784:	0007a783          	lw	a5,0(a5)
80001788:	0a078793          	addi	a5,a5,160
8000178c:	fec42583          	lw	a1,-20(s0)
80001790:	00078513          	mv	a0,a5
80001794:	b24ff0ef          	jal	ra,80000ab8 <HW_set_32bit_reg>
            break;
80001798:	16c0006f          	j	80001904 <GPIO_set_output+0x228>
                uint32_t gpio_out_reg_addr = this_gpio->base_addr + GPIO_OUT_REG_OFFSET + ((port_id >> 4) * 4);
8000179c:	fdc42783          	lw	a5,-36(s0)
800017a0:	0007a703          	lw	a4,0(a5)
800017a4:	fd842783          	lw	a5,-40(s0)
800017a8:	0047d793          	srli	a5,a5,0x4
800017ac:	00279793          	slli	a5,a5,0x2
800017b0:	00f707b3          	add	a5,a4,a5
800017b4:	0a078793          	addi	a5,a5,160
800017b8:	fef42223          	sw	a5,-28(s0)
                outputs_state = HW_get_16bit_reg( gpio_out_reg_addr );
800017bc:	fe442503          	lw	a0,-28(s0)
800017c0:	ba0ff0ef          	jal	ra,80000b60 <HW_get_16bit_reg>
800017c4:	00050793          	mv	a5,a0
800017c8:	fef41523          	sh	a5,-22(s0)
                if ( 0 == value )
800017cc:	fd744783          	lbu	a5,-41(s0)
800017d0:	04079063          	bnez	a5,80001810 <GPIO_set_output+0x134>
                    outputs_state &= ~(1 << (port_id & 0x0F));
800017d4:	fd842783          	lw	a5,-40(s0)
800017d8:	00f7f793          	andi	a5,a5,15
800017dc:	00100713          	li	a4,1
800017e0:	00f717b3          	sll	a5,a4,a5
800017e4:	01079793          	slli	a5,a5,0x10
800017e8:	4107d793          	srai	a5,a5,0x10
800017ec:	fff7c793          	not	a5,a5
800017f0:	01079713          	slli	a4,a5,0x10
800017f4:	41075713          	srai	a4,a4,0x10
800017f8:	fea41783          	lh	a5,-22(s0)
800017fc:	00f777b3          	and	a5,a4,a5
80001800:	01079793          	slli	a5,a5,0x10
80001804:	4107d793          	srai	a5,a5,0x10
80001808:	fef41523          	sh	a5,-22(s0)
8000180c:	0300006f          	j	8000183c <GPIO_set_output+0x160>
                    outputs_state |= 1 << (port_id & 0x0F);
80001810:	fd842783          	lw	a5,-40(s0)
80001814:	00f7f793          	andi	a5,a5,15
80001818:	00100713          	li	a4,1
8000181c:	00f717b3          	sll	a5,a4,a5
80001820:	01079713          	slli	a4,a5,0x10
80001824:	41075713          	srai	a4,a4,0x10
80001828:	fea41783          	lh	a5,-22(s0)
8000182c:	00f767b3          	or	a5,a4,a5
80001830:	01079793          	slli	a5,a5,0x10
80001834:	4107d793          	srai	a5,a5,0x10
80001838:	fef41523          	sh	a5,-22(s0)
                HW_set_16bit_reg( gpio_out_reg_addr, outputs_state );
8000183c:	fea45783          	lhu	a5,-22(s0)
80001840:	00078593          	mv	a1,a5
80001844:	fe442503          	lw	a0,-28(s0)
80001848:	ad8ff0ef          	jal	ra,80000b20 <HW_set_16bit_reg>
            break;
8000184c:	0b80006f          	j	80001904 <GPIO_set_output+0x228>
                uint32_t gpio_out_reg_addr = this_gpio->base_addr + GPIO_OUT_REG_OFFSET + ((port_id >> 3) * 4);
80001850:	fdc42783          	lw	a5,-36(s0)
80001854:	0007a703          	lw	a4,0(a5)
80001858:	fd842783          	lw	a5,-40(s0)
8000185c:	0037d793          	srli	a5,a5,0x3
80001860:	00279793          	slli	a5,a5,0x2
80001864:	00f707b3          	add	a5,a4,a5
80001868:	0a078793          	addi	a5,a5,160
8000186c:	fef42023          	sw	a5,-32(s0)
                outputs_state = HW_get_8bit_reg( gpio_out_reg_addr );
80001870:	fe042503          	lw	a0,-32(s0)
80001874:	b60ff0ef          	jal	ra,80000bd4 <HW_get_8bit_reg>
80001878:	00050793          	mv	a5,a0
8000187c:	fef404a3          	sb	a5,-23(s0)
                if ( 0 == value )
80001880:	fd744783          	lbu	a5,-41(s0)
80001884:	04079063          	bnez	a5,800018c4 <GPIO_set_output+0x1e8>
                    outputs_state &= ~(1 << (port_id & 0x07));
80001888:	fd842783          	lw	a5,-40(s0)
8000188c:	0077f793          	andi	a5,a5,7
80001890:	00100713          	li	a4,1
80001894:	00f717b3          	sll	a5,a4,a5
80001898:	01879793          	slli	a5,a5,0x18
8000189c:	4187d793          	srai	a5,a5,0x18
800018a0:	fff7c793          	not	a5,a5
800018a4:	01879713          	slli	a4,a5,0x18
800018a8:	41875713          	srai	a4,a4,0x18
800018ac:	fe940783          	lb	a5,-23(s0)
800018b0:	00f777b3          	and	a5,a4,a5
800018b4:	01879793          	slli	a5,a5,0x18
800018b8:	4187d793          	srai	a5,a5,0x18
800018bc:	fef404a3          	sb	a5,-23(s0)
800018c0:	0300006f          	j	800018f0 <GPIO_set_output+0x214>
                    outputs_state |= 1 << (port_id & 0x07);
800018c4:	fd842783          	lw	a5,-40(s0)
800018c8:	0077f793          	andi	a5,a5,7
800018cc:	00100713          	li	a4,1
800018d0:	00f717b3          	sll	a5,a4,a5
800018d4:	01879713          	slli	a4,a5,0x18
800018d8:	41875713          	srai	a4,a4,0x18
800018dc:	fe940783          	lb	a5,-23(s0)
800018e0:	00f767b3          	or	a5,a4,a5
800018e4:	01879793          	slli	a5,a5,0x18
800018e8:	4187d793          	srai	a5,a5,0x18
800018ec:	fef404a3          	sb	a5,-23(s0)
                HW_set_8bit_reg( gpio_out_reg_addr, outputs_state );
800018f0:	fe944783          	lbu	a5,-23(s0)
800018f4:	00078593          	mv	a1,a5
800018f8:	fe042503          	lw	a0,-32(s0)
800018fc:	a9cff0ef          	jal	ra,80000b98 <HW_set_8bit_reg>
            break;
80001900:	00000013          	nop
    }
}
80001904:	00000013          	nop
80001908:	02c12083          	lw	ra,44(sp)
8000190c:	02812403          	lw	s0,40(sp)
80001910:	03010113          	addi	sp,sp,48
80001914:	00008067          	ret

80001918 <draw_board>:

	if (winner == 0 && counter >=9)
	{
		drawGame(this_spi,this_gpio);
	}
}
80001918:	fd010113          	addi	sp,sp,-48
8000191c:	02112623          	sw	ra,44(sp)
80001920:	02812423          	sw	s0,40(sp)
80001924:	03010413          	addi	s0,sp,48
80001928:	fca42e23          	sw	a0,-36(s0)
8000192c:	fcb42c23          	sw	a1,-40(s0)
80001930:	fe0407a3          	sb	zero,-17(s0)
80001934:	0340006f          	j	80001968 <draw_board+0x50>
80001938:	fef44783          	lbu	a5,-17(s0)
8000193c:	01079593          	slli	a1,a5,0x10
80001940:	4105d593          	srai	a1,a1,0x10
80001944:	fd842783          	lw	a5,-40(s0)
80001948:	fff00713          	li	a4,-1
8000194c:	14000693          	li	a3,320
80001950:	00000613          	li	a2,0
80001954:	fdc42503          	lw	a0,-36(s0)
80001958:	619020ef          	jal	ra,80004770 <TFT_fastVLine>
8000195c:	fef44783          	lbu	a5,-17(s0)
80001960:	00178793          	addi	a5,a5,1
80001964:	fef407a3          	sb	a5,-17(s0)
80001968:	fef44703          	lbu	a4,-17(s0)
8000196c:	0ef00793          	li	a5,239
80001970:	fce7f4e3          	bleu	a4,a5,80001938 <draw_board+0x20>
80001974:	fd842783          	lw	a5,-40(s0)
80001978:	00000713          	li	a4,0
8000197c:	0f000693          	li	a3,240
80001980:	00000613          	li	a2,0
80001984:	05000593          	li	a1,80
80001988:	fdc42503          	lw	a0,-36(s0)
8000198c:	5e5020ef          	jal	ra,80004770 <TFT_fastVLine>
80001990:	fd842783          	lw	a5,-40(s0)
80001994:	00000713          	li	a4,0
80001998:	0f000693          	li	a3,240
8000199c:	00000613          	li	a2,0
800019a0:	0a000593          	li	a1,160
800019a4:	fdc42503          	lw	a0,-36(s0)
800019a8:	5c9020ef          	jal	ra,80004770 <TFT_fastVLine>
800019ac:	fd842783          	lw	a5,-40(s0)
800019b0:	00000713          	li	a4,0
800019b4:	0f000693          	li	a3,240
800019b8:	05000613          	li	a2,80
800019bc:	00000593          	li	a1,0
800019c0:	fdc42503          	lw	a0,-36(s0)
800019c4:	6ed020ef          	jal	ra,800048b0 <TFT_fastHLine>
800019c8:	fd842783          	lw	a5,-40(s0)
800019cc:	00000713          	li	a4,0
800019d0:	0f000693          	li	a3,240
800019d4:	0a000613          	li	a2,160
800019d8:	00000593          	li	a1,0
800019dc:	fdc42503          	lw	a0,-36(s0)
800019e0:	6d1020ef          	jal	ra,800048b0 <TFT_fastHLine>
800019e4:	00000013          	nop
800019e8:	02c12083          	lw	ra,44(sp)
800019ec:	02812403          	lw	s0,40(sp)
800019f0:	03010113          	addi	sp,sp,48
800019f4:	00008067          	ret

800019f8 <singlePlayerMode>:
800019f8:	fc010113          	addi	sp,sp,-64
800019fc:	02112e23          	sw	ra,60(sp)
80001a00:	02812c23          	sw	s0,56(sp)
80001a04:	04010413          	addi	s0,sp,64
80001a08:	fca42623          	sw	a0,-52(s0)
80001a0c:	fcb42423          	sw	a1,-56(s0)
80001a10:	fc842583          	lw	a1,-56(s0)
80001a14:	fcc42503          	lw	a0,-52(s0)
80001a18:	f01ff0ef          	jal	ra,80001918 <draw_board>
80001a1c:	00100793          	li	a5,1
80001a20:	fef403a3          	sb	a5,-25(s0)
80001a24:	fe0407a3          	sb	zero,-17(s0)
80001a28:	fe042423          	sw	zero,-24(s0)
80001a2c:	800057b7          	lui	a5,0x80005
80001a30:	6207a703          	lw	a4,1568(a5) # 80005620 <__stack_top+0xffffe9f0>
80001a34:	fce42e23          	sw	a4,-36(s0)
80001a38:	62078713          	addi	a4,a5,1568
80001a3c:	00472703          	lw	a4,4(a4)
80001a40:	fee42023          	sw	a4,-32(s0)
80001a44:	62078793          	addi	a5,a5,1568
80001a48:	0087c783          	lbu	a5,8(a5)
80001a4c:	fef40223          	sb	a5,-28(s0)
80001a50:	12c0006f          	j	80001b7c <singlePlayerMode+0x184>
80001a54:	fe842783          	lw	a5,-24(s0)
80001a58:	0ff7f793          	andi	a5,a5,255
80001a5c:	0017f793          	andi	a5,a5,1
80001a60:	0ff7f793          	andi	a5,a5,255
80001a64:	00178793          	addi	a5,a5,1
80001a68:	fef403a3          	sb	a5,-25(s0)
80001a6c:	fe744703          	lbu	a4,-25(s0)
80001a70:	00100793          	li	a5,1
80001a74:	06f71463          	bne	a4,a5,80001adc <singlePlayerMode+0xe4>
80001a78:	fe744703          	lbu	a4,-25(s0)
80001a7c:	fdc40793          	addi	a5,s0,-36
80001a80:	00070693          	mv	a3,a4
80001a84:	00078613          	mv	a2,a5
80001a88:	fc842583          	lw	a1,-56(s0)
80001a8c:	fcc42503          	lw	a0,-52(s0)
80001a90:	114000ef          	jal	ra,80001ba4 <singlePlayerX>
80001a94:	00050793          	mv	a5,a0
80001a98:	ff040713          	addi	a4,s0,-16
80001a9c:	00f707b3          	add	a5,a4,a5
80001aa0:	05800713          	li	a4,88
80001aa4:	fee78623          	sb	a4,-20(a5)
80001aa8:	fe744703          	lbu	a4,-25(s0)
80001aac:	fdc40793          	addi	a5,s0,-36
80001ab0:	fc842683          	lw	a3,-56(s0)
80001ab4:	00070613          	mv	a2,a4
80001ab8:	00078593          	mv	a1,a5
80001abc:	fcc42503          	lw	a0,-52(s0)
80001ac0:	300010ef          	jal	ra,80002dc0 <check_winner>
80001ac4:	00050793          	mv	a5,a0
80001ac8:	fef407a3          	sb	a5,-17(s0)
80001acc:	fe842783          	lw	a5,-24(s0)
80001ad0:	00178793          	addi	a5,a5,1
80001ad4:	fef42423          	sw	a5,-24(s0)
80001ad8:	0840006f          	j	80001b5c <singlePlayerMode+0x164>
80001adc:	fc042c23          	sw	zero,-40(s0)
80001ae0:	0100006f          	j	80001af0 <singlePlayerMode+0xf8>
80001ae4:	fd842783          	lw	a5,-40(s0)
80001ae8:	00178793          	addi	a5,a5,1
80001aec:	fcf42c23          	sw	a5,-40(s0)
80001af0:	fd842703          	lw	a4,-40(s0)
80001af4:	00e00793          	li	a5,14
80001af8:	fee7f6e3          	bleu	a4,a5,80001ae4 <singlePlayerMode+0xec>
80001afc:	fe744703          	lbu	a4,-25(s0)
80001b00:	fdc40793          	addi	a5,s0,-36
80001b04:	00070693          	mv	a3,a4
80001b08:	00078613          	mv	a2,a5
80001b0c:	fc842583          	lw	a1,-56(s0)
80001b10:	fcc42503          	lw	a0,-52(s0)
80001b14:	0f1000ef          	jal	ra,80002404 <singlePlayerAI>
80001b18:	00050793          	mv	a5,a0
80001b1c:	ff040713          	addi	a4,s0,-16
80001b20:	00f707b3          	add	a5,a4,a5
80001b24:	04f00713          	li	a4,79
80001b28:	fee78623          	sb	a4,-20(a5)
80001b2c:	fe744703          	lbu	a4,-25(s0)
80001b30:	fdc40793          	addi	a5,s0,-36
80001b34:	fc842683          	lw	a3,-56(s0)
80001b38:	00070613          	mv	a2,a4
80001b3c:	00078593          	mv	a1,a5
80001b40:	fcc42503          	lw	a0,-52(s0)
80001b44:	27c010ef          	jal	ra,80002dc0 <check_winner>
80001b48:	00050793          	mv	a5,a0
80001b4c:	fef407a3          	sb	a5,-17(s0)
80001b50:	fe842783          	lw	a5,-24(s0)
80001b54:	00178793          	addi	a5,a5,1
80001b58:	fef42423          	sw	a5,-24(s0)
80001b5c:	fef44783          	lbu	a5,-17(s0)
80001b60:	00079e63          	bnez	a5,80001b7c <singlePlayerMode+0x184>
80001b64:	fe842703          	lw	a4,-24(s0)
80001b68:	00800793          	li	a5,8
80001b6c:	00e7f863          	bleu	a4,a5,80001b7c <singlePlayerMode+0x184>
80001b70:	fc842583          	lw	a1,-56(s0)
80001b74:	fcc42503          	lw	a0,-52(s0)
80001b78:	1c0010ef          	jal	ra,80002d38 <drawGame>
80001b7c:	fe842703          	lw	a4,-24(s0)
80001b80:	00800793          	li	a5,8
80001b84:	00e7e663          	bltu	a5,a4,80001b90 <singlePlayerMode+0x198>
80001b88:	fef44783          	lbu	a5,-17(s0)
80001b8c:	ec0784e3          	beqz	a5,80001a54 <singlePlayerMode+0x5c>
80001b90:	00000013          	nop
80001b94:	03c12083          	lw	ra,60(sp)
80001b98:	03812403          	lw	s0,56(sp)
80001b9c:	04010113          	addi	sp,sp,64
80001ba0:	00008067          	ret

80001ba4 <singlePlayerX>:
80001ba4:	fc010113          	addi	sp,sp,-64
80001ba8:	02112e23          	sw	ra,60(sp)
80001bac:	02812c23          	sw	s0,56(sp)
80001bb0:	04010413          	addi	s0,sp,64
80001bb4:	fca42623          	sw	a0,-52(s0)
80001bb8:	fcb42423          	sw	a1,-56(s0)
80001bbc:	fcc42223          	sw	a2,-60(s0)
80001bc0:	00068793          	mv	a5,a3
80001bc4:	fcf401a3          	sb	a5,-61(s0)
80001bc8:	fe0407a3          	sb	zero,-17(s0)
80001bcc:	0090006f          	j	800023d4 <singlePlayerX+0x830>
80001bd0:	04000613          	li	a2,64
80001bd4:	fc842583          	lw	a1,-56(s0)
80001bd8:	fcc42503          	lw	a0,-52(s0)
80001bdc:	7c5010ef          	jal	ra,80003ba0 <TS_readRegister8>
80001be0:	00050793          	mv	a5,a0
80001be4:	01879793          	slli	a5,a5,0x18
80001be8:	4187d793          	srai	a5,a5,0x18
80001bec:	7e07d463          	bgez	a5,800023d4 <singlePlayerX+0x830>
80001bf0:	fd940713          	addi	a4,s0,-39
80001bf4:	fda40693          	addi	a3,s0,-38
80001bf8:	fdc40793          	addi	a5,s0,-36
80001bfc:	00078613          	mv	a2,a5
80001c00:	fc842583          	lw	a1,-56(s0)
80001c04:	fcc42503          	lw	a0,-52(s0)
80001c08:	0c8020ef          	jal	ra,80003cd0 <TS_readData>
80001c0c:	fdc45503          	lhu	a0,-36(s0)
80001c10:	0f000713          	li	a4,240
80001c14:	00000693          	li	a3,0
80001c18:	000017b7          	lui	a5,0x1
80001c1c:	ed878613          	addi	a2,a5,-296 # ed8 <HEAP_SIZE+0x6d8>
80001c20:	09600593          	li	a1,150
80001c24:	09c010ef          	jal	ra,80002cc0 <map>
80001c28:	00050793          	mv	a5,a0
80001c2c:	01079793          	slli	a5,a5,0x10
80001c30:	0107d793          	srli	a5,a5,0x10
80001c34:	fcf41e23          	sh	a5,-36(s0)
80001c38:	fda45503          	lhu	a0,-38(s0)
80001c3c:	14000713          	li	a4,320
80001c40:	00000693          	li	a3,0
80001c44:	000017b7          	lui	a5,0x1
80001c48:	fa078613          	addi	a2,a5,-96 # fa0 <HEAP_SIZE+0x7a0>
80001c4c:	08200593          	li	a1,130
80001c50:	070010ef          	jal	ra,80002cc0 <map>
80001c54:	00050793          	mv	a5,a0
80001c58:	01079793          	slli	a5,a5,0x10
80001c5c:	0107d793          	srli	a5,a5,0x10
80001c60:	fcf41d23          	sh	a5,-38(s0)
80001c64:	fdc45703          	lhu	a4,-36(s0)
80001c68:	04f00793          	li	a5,79
80001c6c:	0ae7ec63          	bltu	a5,a4,80001d24 <singlePlayerX+0x180>
80001c70:	fda45703          	lhu	a4,-38(s0)
80001c74:	04f00793          	li	a5,79
80001c78:	0ae7e663          	bltu	a5,a4,80001d24 <singlePlayerX+0x180>
80001c7c:	fc442783          	lw	a5,-60(s0)
80001c80:	0007c703          	lbu	a4,0(a5)
80001c84:	02000793          	li	a5,32
80001c88:	08f71e63          	bne	a4,a5,80001d24 <singlePlayerX+0x180>
80001c8c:	01400793          	li	a5,20
80001c90:	fef41623          	sh	a5,-20(s0)
80001c94:	01400793          	li	a5,20
80001c98:	fef41523          	sh	a5,-22(s0)
80001c9c:	03c00793          	li	a5,60
80001ca0:	fef41423          	sh	a5,-24(s0)
80001ca4:	03c00793          	li	a5,60
80001ca8:	fef41323          	sh	a5,-26(s0)
80001cac:	03c00793          	li	a5,60
80001cb0:	fef41223          	sh	a5,-28(s0)
80001cb4:	01400793          	li	a5,20
80001cb8:	fef41123          	sh	a5,-30(s0)
80001cbc:	01400793          	li	a5,20
80001cc0:	fef41023          	sh	a5,-32(s0)
80001cc4:	03c00793          	li	a5,60
80001cc8:	fcf41f23          	sh	a5,-34(s0)
80001ccc:	fec41583          	lh	a1,-20(s0)
80001cd0:	fea41603          	lh	a2,-22(s0)
80001cd4:	fe841683          	lh	a3,-24(s0)
80001cd8:	fe641703          	lh	a4,-26(s0)
80001cdc:	fc842803          	lw	a6,-56(s0)
80001ce0:	000107b7          	lui	a5,0x10
80001ce4:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80001ce8:	fcc42503          	lw	a0,-52(s0)
80001cec:	268030ef          	jal	ra,80004f54 <TFT_drawLine>
80001cf0:	fe441583          	lh	a1,-28(s0)
80001cf4:	fe241603          	lh	a2,-30(s0)
80001cf8:	fe041683          	lh	a3,-32(s0)
80001cfc:	fde41703          	lh	a4,-34(s0)
80001d00:	fc842803          	lw	a6,-56(s0)
80001d04:	000107b7          	lui	a5,0x10
80001d08:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80001d0c:	fcc42503          	lw	a0,-52(s0)
80001d10:	244030ef          	jal	ra,80004f54 <TFT_drawLine>
80001d14:	00100793          	li	a5,1
80001d18:	fef407a3          	sb	a5,-17(s0)
80001d1c:	00000793          	li	a5,0
80001d20:	6d00006f          	j	800023f0 <singlePlayerX+0x84c>
80001d24:	fdc45703          	lhu	a4,-36(s0)
80001d28:	09f00793          	li	a5,159
80001d2c:	0ce7e463          	bltu	a5,a4,80001df4 <singlePlayerX+0x250>
80001d30:	fdc45703          	lhu	a4,-36(s0)
80001d34:	05000793          	li	a5,80
80001d38:	0ae7fe63          	bleu	a4,a5,80001df4 <singlePlayerX+0x250>
80001d3c:	fda45703          	lhu	a4,-38(s0)
80001d40:	04f00793          	li	a5,79
80001d44:	0ae7e863          	bltu	a5,a4,80001df4 <singlePlayerX+0x250>
80001d48:	fc442783          	lw	a5,-60(s0)
80001d4c:	00178793          	addi	a5,a5,1
80001d50:	0007c703          	lbu	a4,0(a5)
80001d54:	02000793          	li	a5,32
80001d58:	08f71e63          	bne	a4,a5,80001df4 <singlePlayerX+0x250>
80001d5c:	06400793          	li	a5,100
80001d60:	fef41623          	sh	a5,-20(s0)
80001d64:	01400793          	li	a5,20
80001d68:	fef41523          	sh	a5,-22(s0)
80001d6c:	08c00793          	li	a5,140
80001d70:	fef41423          	sh	a5,-24(s0)
80001d74:	03c00793          	li	a5,60
80001d78:	fef41323          	sh	a5,-26(s0)
80001d7c:	08c00793          	li	a5,140
80001d80:	fef41223          	sh	a5,-28(s0)
80001d84:	01400793          	li	a5,20
80001d88:	fef41123          	sh	a5,-30(s0)
80001d8c:	06400793          	li	a5,100
80001d90:	fef41023          	sh	a5,-32(s0)
80001d94:	03c00793          	li	a5,60
80001d98:	fcf41f23          	sh	a5,-34(s0)
80001d9c:	fec41583          	lh	a1,-20(s0)
80001da0:	fea41603          	lh	a2,-22(s0)
80001da4:	fe841683          	lh	a3,-24(s0)
80001da8:	fe641703          	lh	a4,-26(s0)
80001dac:	fc842803          	lw	a6,-56(s0)
80001db0:	000107b7          	lui	a5,0x10
80001db4:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80001db8:	fcc42503          	lw	a0,-52(s0)
80001dbc:	198030ef          	jal	ra,80004f54 <TFT_drawLine>
80001dc0:	fe441583          	lh	a1,-28(s0)
80001dc4:	fe241603          	lh	a2,-30(s0)
80001dc8:	fe041683          	lh	a3,-32(s0)
80001dcc:	fde41703          	lh	a4,-34(s0)
80001dd0:	fc842803          	lw	a6,-56(s0)
80001dd4:	000107b7          	lui	a5,0x10
80001dd8:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80001ddc:	fcc42503          	lw	a0,-52(s0)
80001de0:	174030ef          	jal	ra,80004f54 <TFT_drawLine>
80001de4:	00100793          	li	a5,1
80001de8:	fef407a3          	sb	a5,-17(s0)
80001dec:	00100793          	li	a5,1
80001df0:	6000006f          	j	800023f0 <singlePlayerX+0x84c>
80001df4:	fdc45703          	lhu	a4,-36(s0)
80001df8:	0ef00793          	li	a5,239
80001dfc:	0ce7e463          	bltu	a5,a4,80001ec4 <singlePlayerX+0x320>
80001e00:	fdc45703          	lhu	a4,-36(s0)
80001e04:	0a000793          	li	a5,160
80001e08:	0ae7fe63          	bleu	a4,a5,80001ec4 <singlePlayerX+0x320>
80001e0c:	fda45703          	lhu	a4,-38(s0)
80001e10:	04f00793          	li	a5,79
80001e14:	0ae7e863          	bltu	a5,a4,80001ec4 <singlePlayerX+0x320>
80001e18:	fc442783          	lw	a5,-60(s0)
80001e1c:	00278793          	addi	a5,a5,2
80001e20:	0007c703          	lbu	a4,0(a5)
80001e24:	02000793          	li	a5,32
80001e28:	08f71e63          	bne	a4,a5,80001ec4 <singlePlayerX+0x320>
80001e2c:	0b400793          	li	a5,180
80001e30:	fef41623          	sh	a5,-20(s0)
80001e34:	01400793          	li	a5,20
80001e38:	fef41523          	sh	a5,-22(s0)
80001e3c:	0dc00793          	li	a5,220
80001e40:	fef41423          	sh	a5,-24(s0)
80001e44:	03c00793          	li	a5,60
80001e48:	fef41323          	sh	a5,-26(s0)
80001e4c:	0dc00793          	li	a5,220
80001e50:	fef41223          	sh	a5,-28(s0)
80001e54:	01400793          	li	a5,20
80001e58:	fef41123          	sh	a5,-30(s0)
80001e5c:	0b400793          	li	a5,180
80001e60:	fef41023          	sh	a5,-32(s0)
80001e64:	03c00793          	li	a5,60
80001e68:	fcf41f23          	sh	a5,-34(s0)
80001e6c:	fec41583          	lh	a1,-20(s0)
80001e70:	fea41603          	lh	a2,-22(s0)
80001e74:	fe841683          	lh	a3,-24(s0)
80001e78:	fe641703          	lh	a4,-26(s0)
80001e7c:	fc842803          	lw	a6,-56(s0)
80001e80:	000107b7          	lui	a5,0x10
80001e84:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80001e88:	fcc42503          	lw	a0,-52(s0)
80001e8c:	0c8030ef          	jal	ra,80004f54 <TFT_drawLine>
80001e90:	fe441583          	lh	a1,-28(s0)
80001e94:	fe241603          	lh	a2,-30(s0)
80001e98:	fe041683          	lh	a3,-32(s0)
80001e9c:	fde41703          	lh	a4,-34(s0)
80001ea0:	fc842803          	lw	a6,-56(s0)
80001ea4:	000107b7          	lui	a5,0x10
80001ea8:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80001eac:	fcc42503          	lw	a0,-52(s0)
80001eb0:	0a4030ef          	jal	ra,80004f54 <TFT_drawLine>
80001eb4:	00100793          	li	a5,1
80001eb8:	fef407a3          	sb	a5,-17(s0)
80001ebc:	00200793          	li	a5,2
80001ec0:	5300006f          	j	800023f0 <singlePlayerX+0x84c>
80001ec4:	fdc45703          	lhu	a4,-36(s0)
80001ec8:	04f00793          	li	a5,79
80001ecc:	0ce7e463          	bltu	a5,a4,80001f94 <singlePlayerX+0x3f0>
80001ed0:	fda45703          	lhu	a4,-38(s0)
80001ed4:	05000793          	li	a5,80
80001ed8:	0ae7fe63          	bleu	a4,a5,80001f94 <singlePlayerX+0x3f0>
80001edc:	fda45703          	lhu	a4,-38(s0)
80001ee0:	09f00793          	li	a5,159
80001ee4:	0ae7e863          	bltu	a5,a4,80001f94 <singlePlayerX+0x3f0>
80001ee8:	fc442783          	lw	a5,-60(s0)
80001eec:	00378793          	addi	a5,a5,3
80001ef0:	0007c703          	lbu	a4,0(a5)
80001ef4:	02000793          	li	a5,32
80001ef8:	08f71e63          	bne	a4,a5,80001f94 <singlePlayerX+0x3f0>
80001efc:	01400793          	li	a5,20
80001f00:	fef41623          	sh	a5,-20(s0)
80001f04:	06400793          	li	a5,100
80001f08:	fef41523          	sh	a5,-22(s0)
80001f0c:	03c00793          	li	a5,60
80001f10:	fef41423          	sh	a5,-24(s0)
80001f14:	08c00793          	li	a5,140
80001f18:	fef41323          	sh	a5,-26(s0)
80001f1c:	03c00793          	li	a5,60
80001f20:	fef41223          	sh	a5,-28(s0)
80001f24:	06400793          	li	a5,100
80001f28:	fef41123          	sh	a5,-30(s0)
80001f2c:	01400793          	li	a5,20
80001f30:	fef41023          	sh	a5,-32(s0)
80001f34:	08c00793          	li	a5,140
80001f38:	fcf41f23          	sh	a5,-34(s0)
80001f3c:	fec41583          	lh	a1,-20(s0)
80001f40:	fea41603          	lh	a2,-22(s0)
80001f44:	fe841683          	lh	a3,-24(s0)
80001f48:	fe641703          	lh	a4,-26(s0)
80001f4c:	fc842803          	lw	a6,-56(s0)
80001f50:	000107b7          	lui	a5,0x10
80001f54:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80001f58:	fcc42503          	lw	a0,-52(s0)
80001f5c:	7f9020ef          	jal	ra,80004f54 <TFT_drawLine>
80001f60:	fe441583          	lh	a1,-28(s0)
80001f64:	fe241603          	lh	a2,-30(s0)
80001f68:	fe041683          	lh	a3,-32(s0)
80001f6c:	fde41703          	lh	a4,-34(s0)
80001f70:	fc842803          	lw	a6,-56(s0)
80001f74:	000107b7          	lui	a5,0x10
80001f78:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80001f7c:	fcc42503          	lw	a0,-52(s0)
80001f80:	7d5020ef          	jal	ra,80004f54 <TFT_drawLine>
80001f84:	00100793          	li	a5,1
80001f88:	fef407a3          	sb	a5,-17(s0)
80001f8c:	00300793          	li	a5,3
80001f90:	4600006f          	j	800023f0 <singlePlayerX+0x84c>
80001f94:	fdc45703          	lhu	a4,-36(s0)
80001f98:	09f00793          	li	a5,159
80001f9c:	0ce7ea63          	bltu	a5,a4,80002070 <singlePlayerX+0x4cc>
80001fa0:	fdc45703          	lhu	a4,-36(s0)
80001fa4:	05000793          	li	a5,80
80001fa8:	0ce7f463          	bleu	a4,a5,80002070 <singlePlayerX+0x4cc>
80001fac:	fda45703          	lhu	a4,-38(s0)
80001fb0:	09f00793          	li	a5,159
80001fb4:	0ae7ee63          	bltu	a5,a4,80002070 <singlePlayerX+0x4cc>
80001fb8:	fda45703          	lhu	a4,-38(s0)
80001fbc:	05000793          	li	a5,80
80001fc0:	0ae7f863          	bleu	a4,a5,80002070 <singlePlayerX+0x4cc>
80001fc4:	fc442783          	lw	a5,-60(s0)
80001fc8:	00478793          	addi	a5,a5,4
80001fcc:	0007c703          	lbu	a4,0(a5)
80001fd0:	02000793          	li	a5,32
80001fd4:	08f71e63          	bne	a4,a5,80002070 <singlePlayerX+0x4cc>
80001fd8:	06400793          	li	a5,100
80001fdc:	fef41623          	sh	a5,-20(s0)
80001fe0:	06400793          	li	a5,100
80001fe4:	fef41523          	sh	a5,-22(s0)
80001fe8:	08c00793          	li	a5,140
80001fec:	fef41423          	sh	a5,-24(s0)
80001ff0:	08c00793          	li	a5,140
80001ff4:	fef41323          	sh	a5,-26(s0)
80001ff8:	08c00793          	li	a5,140
80001ffc:	fef41223          	sh	a5,-28(s0)
80002000:	06400793          	li	a5,100
80002004:	fef41123          	sh	a5,-30(s0)
80002008:	06400793          	li	a5,100
8000200c:	fef41023          	sh	a5,-32(s0)
80002010:	08c00793          	li	a5,140
80002014:	fcf41f23          	sh	a5,-34(s0)
80002018:	fec41583          	lh	a1,-20(s0)
8000201c:	fea41603          	lh	a2,-22(s0)
80002020:	fe841683          	lh	a3,-24(s0)
80002024:	fe641703          	lh	a4,-26(s0)
80002028:	fc842803          	lw	a6,-56(s0)
8000202c:	000107b7          	lui	a5,0x10
80002030:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80002034:	fcc42503          	lw	a0,-52(s0)
80002038:	71d020ef          	jal	ra,80004f54 <TFT_drawLine>
8000203c:	fe441583          	lh	a1,-28(s0)
80002040:	fe241603          	lh	a2,-30(s0)
80002044:	fe041683          	lh	a3,-32(s0)
80002048:	fde41703          	lh	a4,-34(s0)
8000204c:	fc842803          	lw	a6,-56(s0)
80002050:	000107b7          	lui	a5,0x10
80002054:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80002058:	fcc42503          	lw	a0,-52(s0)
8000205c:	6f9020ef          	jal	ra,80004f54 <TFT_drawLine>
80002060:	00100793          	li	a5,1
80002064:	fef407a3          	sb	a5,-17(s0)
80002068:	00400793          	li	a5,4
8000206c:	3840006f          	j	800023f0 <singlePlayerX+0x84c>
80002070:	fdc45703          	lhu	a4,-36(s0)
80002074:	0ef00793          	li	a5,239
80002078:	0ce7ea63          	bltu	a5,a4,8000214c <singlePlayerX+0x5a8>
8000207c:	fdc45703          	lhu	a4,-36(s0)
80002080:	0a000793          	li	a5,160
80002084:	0ce7f463          	bleu	a4,a5,8000214c <singlePlayerX+0x5a8>
80002088:	fda45703          	lhu	a4,-38(s0)
8000208c:	05000793          	li	a5,80
80002090:	0ae7fe63          	bleu	a4,a5,8000214c <singlePlayerX+0x5a8>
80002094:	fda45703          	lhu	a4,-38(s0)
80002098:	09f00793          	li	a5,159
8000209c:	0ae7e863          	bltu	a5,a4,8000214c <singlePlayerX+0x5a8>
800020a0:	fc442783          	lw	a5,-60(s0)
800020a4:	00578793          	addi	a5,a5,5
800020a8:	0007c703          	lbu	a4,0(a5)
800020ac:	02000793          	li	a5,32
800020b0:	08f71e63          	bne	a4,a5,8000214c <singlePlayerX+0x5a8>
800020b4:	0b400793          	li	a5,180
800020b8:	fef41623          	sh	a5,-20(s0)
800020bc:	06400793          	li	a5,100
800020c0:	fef41523          	sh	a5,-22(s0)
800020c4:	0dc00793          	li	a5,220
800020c8:	fef41423          	sh	a5,-24(s0)
800020cc:	08c00793          	li	a5,140
800020d0:	fef41323          	sh	a5,-26(s0)
800020d4:	0dc00793          	li	a5,220
800020d8:	fef41223          	sh	a5,-28(s0)
800020dc:	06400793          	li	a5,100
800020e0:	fef41123          	sh	a5,-30(s0)
800020e4:	0b400793          	li	a5,180
800020e8:	fef41023          	sh	a5,-32(s0)
800020ec:	08c00793          	li	a5,140
800020f0:	fcf41f23          	sh	a5,-34(s0)
800020f4:	fec41583          	lh	a1,-20(s0)
800020f8:	fea41603          	lh	a2,-22(s0)
800020fc:	fe841683          	lh	a3,-24(s0)
80002100:	fe641703          	lh	a4,-26(s0)
80002104:	fc842803          	lw	a6,-56(s0)
80002108:	000107b7          	lui	a5,0x10
8000210c:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80002110:	fcc42503          	lw	a0,-52(s0)
80002114:	641020ef          	jal	ra,80004f54 <TFT_drawLine>
80002118:	fe441583          	lh	a1,-28(s0)
8000211c:	fe241603          	lh	a2,-30(s0)
80002120:	fe041683          	lh	a3,-32(s0)
80002124:	fde41703          	lh	a4,-34(s0)
80002128:	fc842803          	lw	a6,-56(s0)
8000212c:	000107b7          	lui	a5,0x10
80002130:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80002134:	fcc42503          	lw	a0,-52(s0)
80002138:	61d020ef          	jal	ra,80004f54 <TFT_drawLine>
8000213c:	00100793          	li	a5,1
80002140:	fef407a3          	sb	a5,-17(s0)
80002144:	00500793          	li	a5,5
80002148:	2a80006f          	j	800023f0 <singlePlayerX+0x84c>
8000214c:	fdc45703          	lhu	a4,-36(s0)
80002150:	04f00793          	li	a5,79
80002154:	0ce7e463          	bltu	a5,a4,8000221c <singlePlayerX+0x678>
80002158:	fda45703          	lhu	a4,-38(s0)
8000215c:	0ef00793          	li	a5,239
80002160:	0ae7ee63          	bltu	a5,a4,8000221c <singlePlayerX+0x678>
80002164:	fda45703          	lhu	a4,-38(s0)
80002168:	0a000793          	li	a5,160
8000216c:	0ae7f863          	bleu	a4,a5,8000221c <singlePlayerX+0x678>
80002170:	fc442783          	lw	a5,-60(s0)
80002174:	00678793          	addi	a5,a5,6
80002178:	0007c703          	lbu	a4,0(a5)
8000217c:	02000793          	li	a5,32
80002180:	08f71e63          	bne	a4,a5,8000221c <singlePlayerX+0x678>
80002184:	01400793          	li	a5,20
80002188:	fef41623          	sh	a5,-20(s0)
8000218c:	0b400793          	li	a5,180
80002190:	fef41523          	sh	a5,-22(s0)
80002194:	03c00793          	li	a5,60
80002198:	fef41423          	sh	a5,-24(s0)
8000219c:	0dc00793          	li	a5,220
800021a0:	fef41323          	sh	a5,-26(s0)
800021a4:	03c00793          	li	a5,60
800021a8:	fef41223          	sh	a5,-28(s0)
800021ac:	0b400793          	li	a5,180
800021b0:	fef41123          	sh	a5,-30(s0)
800021b4:	01400793          	li	a5,20
800021b8:	fef41023          	sh	a5,-32(s0)
800021bc:	0dc00793          	li	a5,220
800021c0:	fcf41f23          	sh	a5,-34(s0)
800021c4:	fec41583          	lh	a1,-20(s0)
800021c8:	fea41603          	lh	a2,-22(s0)
800021cc:	fe841683          	lh	a3,-24(s0)
800021d0:	fe641703          	lh	a4,-26(s0)
800021d4:	fc842803          	lw	a6,-56(s0)
800021d8:	000107b7          	lui	a5,0x10
800021dc:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
800021e0:	fcc42503          	lw	a0,-52(s0)
800021e4:	571020ef          	jal	ra,80004f54 <TFT_drawLine>
800021e8:	fe441583          	lh	a1,-28(s0)
800021ec:	fe241603          	lh	a2,-30(s0)
800021f0:	fe041683          	lh	a3,-32(s0)
800021f4:	fde41703          	lh	a4,-34(s0)
800021f8:	fc842803          	lw	a6,-56(s0)
800021fc:	000107b7          	lui	a5,0x10
80002200:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80002204:	fcc42503          	lw	a0,-52(s0)
80002208:	54d020ef          	jal	ra,80004f54 <TFT_drawLine>
8000220c:	00100793          	li	a5,1
80002210:	fef407a3          	sb	a5,-17(s0)
80002214:	00600793          	li	a5,6
80002218:	1d80006f          	j	800023f0 <singlePlayerX+0x84c>
8000221c:	fdc45703          	lhu	a4,-36(s0)
80002220:	09f00793          	li	a5,159
80002224:	0ce7ea63          	bltu	a5,a4,800022f8 <singlePlayerX+0x754>
80002228:	fdc45703          	lhu	a4,-36(s0)
8000222c:	05000793          	li	a5,80
80002230:	0ce7f463          	bleu	a4,a5,800022f8 <singlePlayerX+0x754>
80002234:	fda45703          	lhu	a4,-38(s0)
80002238:	0ef00793          	li	a5,239
8000223c:	0ae7ee63          	bltu	a5,a4,800022f8 <singlePlayerX+0x754>
80002240:	fda45703          	lhu	a4,-38(s0)
80002244:	0a000793          	li	a5,160
80002248:	0ae7f863          	bleu	a4,a5,800022f8 <singlePlayerX+0x754>
8000224c:	fc442783          	lw	a5,-60(s0)
80002250:	00778793          	addi	a5,a5,7
80002254:	0007c703          	lbu	a4,0(a5)
80002258:	02000793          	li	a5,32
8000225c:	08f71e63          	bne	a4,a5,800022f8 <singlePlayerX+0x754>
80002260:	06400793          	li	a5,100
80002264:	fef41623          	sh	a5,-20(s0)
80002268:	0b400793          	li	a5,180
8000226c:	fef41523          	sh	a5,-22(s0)
80002270:	08c00793          	li	a5,140
80002274:	fef41423          	sh	a5,-24(s0)
80002278:	0dc00793          	li	a5,220
8000227c:	fef41323          	sh	a5,-26(s0)
80002280:	08c00793          	li	a5,140
80002284:	fef41223          	sh	a5,-28(s0)
80002288:	0b400793          	li	a5,180
8000228c:	fef41123          	sh	a5,-30(s0)
80002290:	06400793          	li	a5,100
80002294:	fef41023          	sh	a5,-32(s0)
80002298:	0dc00793          	li	a5,220
8000229c:	fcf41f23          	sh	a5,-34(s0)
800022a0:	fec41583          	lh	a1,-20(s0)
800022a4:	fea41603          	lh	a2,-22(s0)
800022a8:	fe841683          	lh	a3,-24(s0)
800022ac:	fe641703          	lh	a4,-26(s0)
800022b0:	fc842803          	lw	a6,-56(s0)
800022b4:	000107b7          	lui	a5,0x10
800022b8:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
800022bc:	fcc42503          	lw	a0,-52(s0)
800022c0:	495020ef          	jal	ra,80004f54 <TFT_drawLine>
800022c4:	fe441583          	lh	a1,-28(s0)
800022c8:	fe241603          	lh	a2,-30(s0)
800022cc:	fe041683          	lh	a3,-32(s0)
800022d0:	fde41703          	lh	a4,-34(s0)
800022d4:	fc842803          	lw	a6,-56(s0)
800022d8:	000107b7          	lui	a5,0x10
800022dc:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
800022e0:	fcc42503          	lw	a0,-52(s0)
800022e4:	471020ef          	jal	ra,80004f54 <TFT_drawLine>
800022e8:	00100793          	li	a5,1
800022ec:	fef407a3          	sb	a5,-17(s0)
800022f0:	00700793          	li	a5,7
800022f4:	0fc0006f          	j	800023f0 <singlePlayerX+0x84c>
800022f8:	fdc45703          	lhu	a4,-36(s0)
800022fc:	0ef00793          	li	a5,239
80002300:	0ce7ea63          	bltu	a5,a4,800023d4 <singlePlayerX+0x830>
80002304:	fdc45703          	lhu	a4,-36(s0)
80002308:	0a000793          	li	a5,160
8000230c:	0ce7f463          	bleu	a4,a5,800023d4 <singlePlayerX+0x830>
80002310:	fda45703          	lhu	a4,-38(s0)
80002314:	0a000793          	li	a5,160
80002318:	0ae7fe63          	bleu	a4,a5,800023d4 <singlePlayerX+0x830>
8000231c:	fda45703          	lhu	a4,-38(s0)
80002320:	0ef00793          	li	a5,239
80002324:	0ae7e863          	bltu	a5,a4,800023d4 <singlePlayerX+0x830>
80002328:	fc442783          	lw	a5,-60(s0)
8000232c:	00878793          	addi	a5,a5,8
80002330:	0007c703          	lbu	a4,0(a5)
80002334:	02000793          	li	a5,32
80002338:	08f71e63          	bne	a4,a5,800023d4 <singlePlayerX+0x830>
8000233c:	0b400793          	li	a5,180
80002340:	fef41623          	sh	a5,-20(s0)
80002344:	0b400793          	li	a5,180
80002348:	fef41523          	sh	a5,-22(s0)
8000234c:	0dc00793          	li	a5,220
80002350:	fef41423          	sh	a5,-24(s0)
80002354:	0dc00793          	li	a5,220
80002358:	fef41323          	sh	a5,-26(s0)
8000235c:	0dc00793          	li	a5,220
80002360:	fef41223          	sh	a5,-28(s0)
80002364:	0b400793          	li	a5,180
80002368:	fef41123          	sh	a5,-30(s0)
8000236c:	0b400793          	li	a5,180
80002370:	fef41023          	sh	a5,-32(s0)
80002374:	0dc00793          	li	a5,220
80002378:	fcf41f23          	sh	a5,-34(s0)
8000237c:	fec41583          	lh	a1,-20(s0)
80002380:	fea41603          	lh	a2,-22(s0)
80002384:	fe841683          	lh	a3,-24(s0)
80002388:	fe641703          	lh	a4,-26(s0)
8000238c:	fc842803          	lw	a6,-56(s0)
80002390:	000107b7          	lui	a5,0x10
80002394:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80002398:	fcc42503          	lw	a0,-52(s0)
8000239c:	3b9020ef          	jal	ra,80004f54 <TFT_drawLine>
800023a0:	fe441583          	lh	a1,-28(s0)
800023a4:	fe241603          	lh	a2,-30(s0)
800023a8:	fe041683          	lh	a3,-32(s0)
800023ac:	fde41703          	lh	a4,-34(s0)
800023b0:	fc842803          	lw	a6,-56(s0)
800023b4:	000107b7          	lui	a5,0x10
800023b8:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
800023bc:	fcc42503          	lw	a0,-52(s0)
800023c0:	395020ef          	jal	ra,80004f54 <TFT_drawLine>
800023c4:	00100793          	li	a5,1
800023c8:	fef407a3          	sb	a5,-17(s0)
800023cc:	00800793          	li	a5,8
800023d0:	0200006f          	j	800023f0 <singlePlayerX+0x84c>
800023d4:	fef44783          	lbu	a5,-17(s0)
800023d8:	00079863          	bnez	a5,800023e8 <singlePlayerX+0x844>
800023dc:	fc344703          	lbu	a4,-61(s0)
800023e0:	00100793          	li	a5,1
800023e4:	fef70663          	beq	a4,a5,80001bd0 <singlePlayerX+0x2c>
800023e8:	fe0407a3          	sb	zero,-17(s0)
800023ec:	0ff00793          	li	a5,255
800023f0:	00078513          	mv	a0,a5
800023f4:	03c12083          	lw	ra,60(sp)
800023f8:	03812403          	lw	s0,56(sp)
800023fc:	04010113          	addi	sp,sp,64
80002400:	00008067          	ret

80002404 <singlePlayerAI>:
80002404:	fc010113          	addi	sp,sp,-64
80002408:	02112e23          	sw	ra,60(sp)
8000240c:	02812c23          	sw	s0,56(sp)
80002410:	04010413          	addi	s0,sp,64
80002414:	fca42623          	sw	a0,-52(s0)
80002418:	fcb42423          	sw	a1,-56(s0)
8000241c:	fcc42223          	sw	a2,-60(s0)
80002420:	00068793          	mv	a5,a3
80002424:	fcf401a3          	sb	a5,-61(s0)
80002428:	fe0407a3          	sb	zero,-17(s0)
8000242c:	2ac0006f          	j	800026d8 <singlePlayerAI+0x2d4>
80002430:	fe042423          	sw	zero,-24(s0)
80002434:	0300006f          	j	80002464 <singlePlayerAI+0x60>
80002438:	fe842783          	lw	a5,-24(s0)
8000243c:	fc442703          	lw	a4,-60(s0)
80002440:	00f707b3          	add	a5,a4,a5
80002444:	0007c703          	lbu	a4,0(a5)
80002448:	fe842783          	lw	a5,-24(s0)
8000244c:	ff040693          	addi	a3,s0,-16
80002450:	00f687b3          	add	a5,a3,a5
80002454:	fee78423          	sb	a4,-24(a5)
80002458:	fe842783          	lw	a5,-24(s0)
8000245c:	00178793          	addi	a5,a5,1
80002460:	fef42423          	sw	a5,-24(s0)
80002464:	fe842703          	lw	a4,-24(s0)
80002468:	00800793          	li	a5,8
8000246c:	fce7d6e3          	ble	a4,a5,80002438 <singlePlayerAI+0x34>
80002470:	fef44783          	lbu	a5,-17(s0)
80002474:	ff040713          	addi	a4,s0,-16
80002478:	00f707b3          	add	a5,a4,a5
8000247c:	fe87c703          	lbu	a4,-24(a5)
80002480:	02000793          	li	a5,32
80002484:	00f71c63          	bne	a4,a5,8000249c <singlePlayerAI+0x98>
80002488:	fef44783          	lbu	a5,-17(s0)
8000248c:	ff040713          	addi	a4,s0,-16
80002490:	00f707b3          	add	a5,a4,a5
80002494:	04f00713          	li	a4,79
80002498:	fee78423          	sb	a4,-24(a5)
8000249c:	fc344703          	lbu	a4,-61(s0)
800024a0:	fd840793          	addi	a5,s0,-40
800024a4:	00070593          	mv	a1,a4
800024a8:	00078513          	mv	a0,a5
800024ac:	098010ef          	jal	ra,80003544 <AIcheck_winner>
800024b0:	00050793          	mv	a5,a0
800024b4:	00078713          	mv	a4,a5
800024b8:	00100793          	li	a5,1
800024bc:	20f71863          	bne	a4,a5,800026cc <singlePlayerAI+0x2c8>
800024c0:	fef44783          	lbu	a5,-17(s0)
800024c4:	02079a63          	bnez	a5,800024f8 <singlePlayerAI+0xf4>
800024c8:	02800793          	li	a5,40
800024cc:	fef41223          	sh	a5,-28(s0)
800024d0:	02800793          	li	a5,40
800024d4:	fef41123          	sh	a5,-30(s0)
800024d8:	fe441583          	lh	a1,-28(s0)
800024dc:	fe241603          	lh	a2,-30(s0)
800024e0:	fc842783          	lw	a5,-56(s0)
800024e4:	01f00713          	li	a4,31
800024e8:	01e00693          	li	a3,30
800024ec:	fcc42503          	lw	a0,-52(s0)
800024f0:	5f8020ef          	jal	ra,80004ae8 <TFT_drawCircle>
800024f4:	03c0006f          	j	80002530 <singlePlayerAI+0x12c>
800024f8:	fef44703          	lbu	a4,-17(s0)
800024fc:	00100793          	li	a5,1
80002500:	02f71863          	bne	a4,a5,80002530 <singlePlayerAI+0x12c>
80002504:	07800793          	li	a5,120
80002508:	fef41223          	sh	a5,-28(s0)
8000250c:	02800793          	li	a5,40
80002510:	fef41123          	sh	a5,-30(s0)
80002514:	fe441583          	lh	a1,-28(s0)
80002518:	fe241603          	lh	a2,-30(s0)
8000251c:	fc842783          	lw	a5,-56(s0)
80002520:	01f00713          	li	a4,31
80002524:	01e00693          	li	a3,30
80002528:	fcc42503          	lw	a0,-52(s0)
8000252c:	5bc020ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002530:	fef44703          	lbu	a4,-17(s0)
80002534:	00200793          	li	a5,2
80002538:	02f71a63          	bne	a4,a5,8000256c <singlePlayerAI+0x168>
8000253c:	0c800793          	li	a5,200
80002540:	fef41223          	sh	a5,-28(s0)
80002544:	02800793          	li	a5,40
80002548:	fef41123          	sh	a5,-30(s0)
8000254c:	fe441583          	lh	a1,-28(s0)
80002550:	fe241603          	lh	a2,-30(s0)
80002554:	fc842783          	lw	a5,-56(s0)
80002558:	01f00713          	li	a4,31
8000255c:	01e00693          	li	a3,30
80002560:	fcc42503          	lw	a0,-52(s0)
80002564:	584020ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002568:	03c0006f          	j	800025a4 <singlePlayerAI+0x1a0>
8000256c:	fef44703          	lbu	a4,-17(s0)
80002570:	00300793          	li	a5,3
80002574:	02f71863          	bne	a4,a5,800025a4 <singlePlayerAI+0x1a0>
80002578:	02800793          	li	a5,40
8000257c:	fef41223          	sh	a5,-28(s0)
80002580:	07800793          	li	a5,120
80002584:	fef41123          	sh	a5,-30(s0)
80002588:	fe441583          	lh	a1,-28(s0)
8000258c:	fe241603          	lh	a2,-30(s0)
80002590:	fc842783          	lw	a5,-56(s0)
80002594:	01f00713          	li	a4,31
80002598:	01e00693          	li	a3,30
8000259c:	fcc42503          	lw	a0,-52(s0)
800025a0:	548020ef          	jal	ra,80004ae8 <TFT_drawCircle>
800025a4:	fef44703          	lbu	a4,-17(s0)
800025a8:	00400793          	li	a5,4
800025ac:	02f71a63          	bne	a4,a5,800025e0 <singlePlayerAI+0x1dc>
800025b0:	07800793          	li	a5,120
800025b4:	fef41223          	sh	a5,-28(s0)
800025b8:	07800793          	li	a5,120
800025bc:	fef41123          	sh	a5,-30(s0)
800025c0:	fe441583          	lh	a1,-28(s0)
800025c4:	fe241603          	lh	a2,-30(s0)
800025c8:	fc842783          	lw	a5,-56(s0)
800025cc:	01f00713          	li	a4,31
800025d0:	01e00693          	li	a3,30
800025d4:	fcc42503          	lw	a0,-52(s0)
800025d8:	510020ef          	jal	ra,80004ae8 <TFT_drawCircle>
800025dc:	03c0006f          	j	80002618 <singlePlayerAI+0x214>
800025e0:	fef44703          	lbu	a4,-17(s0)
800025e4:	00500793          	li	a5,5
800025e8:	02f71863          	bne	a4,a5,80002618 <singlePlayerAI+0x214>
800025ec:	0c800793          	li	a5,200
800025f0:	fef41223          	sh	a5,-28(s0)
800025f4:	07800793          	li	a5,120
800025f8:	fef41123          	sh	a5,-30(s0)
800025fc:	fe441583          	lh	a1,-28(s0)
80002600:	fe241603          	lh	a2,-30(s0)
80002604:	fc842783          	lw	a5,-56(s0)
80002608:	01f00713          	li	a4,31
8000260c:	01e00693          	li	a3,30
80002610:	fcc42503          	lw	a0,-52(s0)
80002614:	4d4020ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002618:	fef44703          	lbu	a4,-17(s0)
8000261c:	00600793          	li	a5,6
80002620:	02f71a63          	bne	a4,a5,80002654 <singlePlayerAI+0x250>
80002624:	02800793          	li	a5,40
80002628:	fef41223          	sh	a5,-28(s0)
8000262c:	0c800793          	li	a5,200
80002630:	fef41123          	sh	a5,-30(s0)
80002634:	fe441583          	lh	a1,-28(s0)
80002638:	fe241603          	lh	a2,-30(s0)
8000263c:	fc842783          	lw	a5,-56(s0)
80002640:	01f00713          	li	a4,31
80002644:	01e00693          	li	a3,30
80002648:	fcc42503          	lw	a0,-52(s0)
8000264c:	49c020ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002650:	03c0006f          	j	8000268c <singlePlayerAI+0x288>
80002654:	fef44703          	lbu	a4,-17(s0)
80002658:	00700793          	li	a5,7
8000265c:	02f71863          	bne	a4,a5,8000268c <singlePlayerAI+0x288>
80002660:	07800793          	li	a5,120
80002664:	fef41223          	sh	a5,-28(s0)
80002668:	0c800793          	li	a5,200
8000266c:	fef41123          	sh	a5,-30(s0)
80002670:	fe441583          	lh	a1,-28(s0)
80002674:	fe241603          	lh	a2,-30(s0)
80002678:	fc842783          	lw	a5,-56(s0)
8000267c:	01f00713          	li	a4,31
80002680:	01e00693          	li	a3,30
80002684:	fcc42503          	lw	a0,-52(s0)
80002688:	460020ef          	jal	ra,80004ae8 <TFT_drawCircle>
8000268c:	fef44703          	lbu	a4,-17(s0)
80002690:	00800793          	li	a5,8
80002694:	02f71863          	bne	a4,a5,800026c4 <singlePlayerAI+0x2c0>
80002698:	0c800793          	li	a5,200
8000269c:	fef41223          	sh	a5,-28(s0)
800026a0:	0c800793          	li	a5,200
800026a4:	fef41123          	sh	a5,-30(s0)
800026a8:	fe441583          	lh	a1,-28(s0)
800026ac:	fe241603          	lh	a2,-30(s0)
800026b0:	fc842783          	lw	a5,-56(s0)
800026b4:	01f00713          	li	a4,31
800026b8:	01e00693          	li	a3,30
800026bc:	fcc42503          	lw	a0,-52(s0)
800026c0:	428020ef          	jal	ra,80004ae8 <TFT_drawCircle>
800026c4:	fef44783          	lbu	a5,-17(s0)
800026c8:	5e40006f          	j	80002cac <singlePlayerAI+0x8a8>
800026cc:	fef44783          	lbu	a5,-17(s0)
800026d0:	00178793          	addi	a5,a5,1
800026d4:	fef407a3          	sb	a5,-17(s0)
800026d8:	fef44703          	lbu	a4,-17(s0)
800026dc:	00800793          	li	a5,8
800026e0:	d4e7f8e3          	bleu	a4,a5,80002430 <singlePlayerAI+0x2c>
800026e4:	fe0403a3          	sb	zero,-25(s0)
800026e8:	2ac0006f          	j	80002994 <singlePlayerAI+0x590>
800026ec:	fe040323          	sb	zero,-26(s0)
800026f0:	0300006f          	j	80002720 <singlePlayerAI+0x31c>
800026f4:	fe644783          	lbu	a5,-26(s0)
800026f8:	fc442703          	lw	a4,-60(s0)
800026fc:	00f70733          	add	a4,a4,a5
80002700:	fe644783          	lbu	a5,-26(s0)
80002704:	00074703          	lbu	a4,0(a4)
80002708:	ff040693          	addi	a3,s0,-16
8000270c:	00f687b3          	add	a5,a3,a5
80002710:	fee78423          	sb	a4,-24(a5)
80002714:	fe644783          	lbu	a5,-26(s0)
80002718:	00178793          	addi	a5,a5,1
8000271c:	fef40323          	sb	a5,-26(s0)
80002720:	fe644703          	lbu	a4,-26(s0)
80002724:	00800793          	li	a5,8
80002728:	fce7f6e3          	bleu	a4,a5,800026f4 <singlePlayerAI+0x2f0>
8000272c:	fe744783          	lbu	a5,-25(s0)
80002730:	ff040713          	addi	a4,s0,-16
80002734:	00f707b3          	add	a5,a4,a5
80002738:	fe87c703          	lbu	a4,-24(a5)
8000273c:	02000793          	li	a5,32
80002740:	00f71c63          	bne	a4,a5,80002758 <singlePlayerAI+0x354>
80002744:	fe744783          	lbu	a5,-25(s0)
80002748:	ff040713          	addi	a4,s0,-16
8000274c:	00f707b3          	add	a5,a4,a5
80002750:	05800713          	li	a4,88
80002754:	fee78423          	sb	a4,-24(a5)
80002758:	fc344703          	lbu	a4,-61(s0)
8000275c:	fd840793          	addi	a5,s0,-40
80002760:	00070593          	mv	a1,a4
80002764:	00078513          	mv	a0,a5
80002768:	5dd000ef          	jal	ra,80003544 <AIcheck_winner>
8000276c:	00050793          	mv	a5,a0
80002770:	00078713          	mv	a4,a5
80002774:	00100793          	li	a5,1
80002778:	20f71863          	bne	a4,a5,80002988 <singlePlayerAI+0x584>
8000277c:	fe744783          	lbu	a5,-25(s0)
80002780:	02079a63          	bnez	a5,800027b4 <singlePlayerAI+0x3b0>
80002784:	02800793          	li	a5,40
80002788:	fef41223          	sh	a5,-28(s0)
8000278c:	02800793          	li	a5,40
80002790:	fef41123          	sh	a5,-30(s0)
80002794:	fe441583          	lh	a1,-28(s0)
80002798:	fe241603          	lh	a2,-30(s0)
8000279c:	fc842783          	lw	a5,-56(s0)
800027a0:	01f00713          	li	a4,31
800027a4:	01e00693          	li	a3,30
800027a8:	fcc42503          	lw	a0,-52(s0)
800027ac:	33c020ef          	jal	ra,80004ae8 <TFT_drawCircle>
800027b0:	03c0006f          	j	800027ec <singlePlayerAI+0x3e8>
800027b4:	fe744703          	lbu	a4,-25(s0)
800027b8:	00100793          	li	a5,1
800027bc:	02f71863          	bne	a4,a5,800027ec <singlePlayerAI+0x3e8>
800027c0:	07800793          	li	a5,120
800027c4:	fef41223          	sh	a5,-28(s0)
800027c8:	02800793          	li	a5,40
800027cc:	fef41123          	sh	a5,-30(s0)
800027d0:	fe441583          	lh	a1,-28(s0)
800027d4:	fe241603          	lh	a2,-30(s0)
800027d8:	fc842783          	lw	a5,-56(s0)
800027dc:	01f00713          	li	a4,31
800027e0:	01e00693          	li	a3,30
800027e4:	fcc42503          	lw	a0,-52(s0)
800027e8:	300020ef          	jal	ra,80004ae8 <TFT_drawCircle>
800027ec:	fe744703          	lbu	a4,-25(s0)
800027f0:	00200793          	li	a5,2
800027f4:	02f71a63          	bne	a4,a5,80002828 <singlePlayerAI+0x424>
800027f8:	0c800793          	li	a5,200
800027fc:	fef41223          	sh	a5,-28(s0)
80002800:	02800793          	li	a5,40
80002804:	fef41123          	sh	a5,-30(s0)
80002808:	fe441583          	lh	a1,-28(s0)
8000280c:	fe241603          	lh	a2,-30(s0)
80002810:	fc842783          	lw	a5,-56(s0)
80002814:	01f00713          	li	a4,31
80002818:	01e00693          	li	a3,30
8000281c:	fcc42503          	lw	a0,-52(s0)
80002820:	2c8020ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002824:	03c0006f          	j	80002860 <singlePlayerAI+0x45c>
80002828:	fe744703          	lbu	a4,-25(s0)
8000282c:	00300793          	li	a5,3
80002830:	02f71863          	bne	a4,a5,80002860 <singlePlayerAI+0x45c>
80002834:	02800793          	li	a5,40
80002838:	fef41223          	sh	a5,-28(s0)
8000283c:	07800793          	li	a5,120
80002840:	fef41123          	sh	a5,-30(s0)
80002844:	fe441583          	lh	a1,-28(s0)
80002848:	fe241603          	lh	a2,-30(s0)
8000284c:	fc842783          	lw	a5,-56(s0)
80002850:	01f00713          	li	a4,31
80002854:	01e00693          	li	a3,30
80002858:	fcc42503          	lw	a0,-52(s0)
8000285c:	28c020ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002860:	fe744703          	lbu	a4,-25(s0)
80002864:	00400793          	li	a5,4
80002868:	02f71a63          	bne	a4,a5,8000289c <singlePlayerAI+0x498>
8000286c:	07800793          	li	a5,120
80002870:	fef41223          	sh	a5,-28(s0)
80002874:	07800793          	li	a5,120
80002878:	fef41123          	sh	a5,-30(s0)
8000287c:	fe441583          	lh	a1,-28(s0)
80002880:	fe241603          	lh	a2,-30(s0)
80002884:	fc842783          	lw	a5,-56(s0)
80002888:	01f00713          	li	a4,31
8000288c:	01e00693          	li	a3,30
80002890:	fcc42503          	lw	a0,-52(s0)
80002894:	254020ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002898:	03c0006f          	j	800028d4 <singlePlayerAI+0x4d0>
8000289c:	fe744703          	lbu	a4,-25(s0)
800028a0:	00500793          	li	a5,5
800028a4:	02f71863          	bne	a4,a5,800028d4 <singlePlayerAI+0x4d0>
800028a8:	0c800793          	li	a5,200
800028ac:	fef41223          	sh	a5,-28(s0)
800028b0:	07800793          	li	a5,120
800028b4:	fef41123          	sh	a5,-30(s0)
800028b8:	fe441583          	lh	a1,-28(s0)
800028bc:	fe241603          	lh	a2,-30(s0)
800028c0:	fc842783          	lw	a5,-56(s0)
800028c4:	01f00713          	li	a4,31
800028c8:	01e00693          	li	a3,30
800028cc:	fcc42503          	lw	a0,-52(s0)
800028d0:	218020ef          	jal	ra,80004ae8 <TFT_drawCircle>
800028d4:	fe744703          	lbu	a4,-25(s0)
800028d8:	00600793          	li	a5,6
800028dc:	02f71a63          	bne	a4,a5,80002910 <singlePlayerAI+0x50c>
800028e0:	02800793          	li	a5,40
800028e4:	fef41223          	sh	a5,-28(s0)
800028e8:	0c800793          	li	a5,200
800028ec:	fef41123          	sh	a5,-30(s0)
800028f0:	fe441583          	lh	a1,-28(s0)
800028f4:	fe241603          	lh	a2,-30(s0)
800028f8:	fc842783          	lw	a5,-56(s0)
800028fc:	01f00713          	li	a4,31
80002900:	01e00693          	li	a3,30
80002904:	fcc42503          	lw	a0,-52(s0)
80002908:	1e0020ef          	jal	ra,80004ae8 <TFT_drawCircle>
8000290c:	03c0006f          	j	80002948 <singlePlayerAI+0x544>
80002910:	fe744703          	lbu	a4,-25(s0)
80002914:	00700793          	li	a5,7
80002918:	02f71863          	bne	a4,a5,80002948 <singlePlayerAI+0x544>
8000291c:	07800793          	li	a5,120
80002920:	fef41223          	sh	a5,-28(s0)
80002924:	0c800793          	li	a5,200
80002928:	fef41123          	sh	a5,-30(s0)
8000292c:	fe441583          	lh	a1,-28(s0)
80002930:	fe241603          	lh	a2,-30(s0)
80002934:	fc842783          	lw	a5,-56(s0)
80002938:	01f00713          	li	a4,31
8000293c:	01e00693          	li	a3,30
80002940:	fcc42503          	lw	a0,-52(s0)
80002944:	1a4020ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002948:	fe744703          	lbu	a4,-25(s0)
8000294c:	00800793          	li	a5,8
80002950:	02f71863          	bne	a4,a5,80002980 <singlePlayerAI+0x57c>
80002954:	0c800793          	li	a5,200
80002958:	fef41223          	sh	a5,-28(s0)
8000295c:	0c800793          	li	a5,200
80002960:	fef41123          	sh	a5,-30(s0)
80002964:	fe441583          	lh	a1,-28(s0)
80002968:	fe241603          	lh	a2,-30(s0)
8000296c:	fc842783          	lw	a5,-56(s0)
80002970:	01f00713          	li	a4,31
80002974:	01e00693          	li	a3,30
80002978:	fcc42503          	lw	a0,-52(s0)
8000297c:	16c020ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002980:	fe744783          	lbu	a5,-25(s0)
80002984:	3280006f          	j	80002cac <singlePlayerAI+0x8a8>
80002988:	fe744783          	lbu	a5,-25(s0)
8000298c:	00178793          	addi	a5,a5,1
80002990:	fef403a3          	sb	a5,-25(s0)
80002994:	fe744703          	lbu	a4,-25(s0)
80002998:	00800793          	li	a5,8
8000299c:	d4e7f8e3          	bleu	a4,a5,800026ec <singlePlayerAI+0x2e8>
800029a0:	fc442783          	lw	a5,-60(s0)
800029a4:	0007c703          	lbu	a4,0(a5)
800029a8:	02000793          	li	a5,32
800029ac:	04f71263          	bne	a4,a5,800029f0 <singlePlayerAI+0x5ec>
800029b0:	fc442783          	lw	a5,-60(s0)
800029b4:	04f00713          	li	a4,79
800029b8:	00e78023          	sb	a4,0(a5)
800029bc:	02800793          	li	a5,40
800029c0:	fef41223          	sh	a5,-28(s0)
800029c4:	02800793          	li	a5,40
800029c8:	fef41123          	sh	a5,-30(s0)
800029cc:	fe441583          	lh	a1,-28(s0)
800029d0:	fe241603          	lh	a2,-30(s0)
800029d4:	fc842783          	lw	a5,-56(s0)
800029d8:	01f00713          	li	a4,31
800029dc:	01e00693          	li	a3,30
800029e0:	fcc42503          	lw	a0,-52(s0)
800029e4:	104020ef          	jal	ra,80004ae8 <TFT_drawCircle>
800029e8:	00000793          	li	a5,0
800029ec:	2c00006f          	j	80002cac <singlePlayerAI+0x8a8>
800029f0:	fc442783          	lw	a5,-60(s0)
800029f4:	00278793          	addi	a5,a5,2
800029f8:	0007c703          	lbu	a4,0(a5)
800029fc:	02000793          	li	a5,32
80002a00:	04f71463          	bne	a4,a5,80002a48 <singlePlayerAI+0x644>
80002a04:	fc442783          	lw	a5,-60(s0)
80002a08:	00278793          	addi	a5,a5,2
80002a0c:	04f00713          	li	a4,79
80002a10:	00e78023          	sb	a4,0(a5)
80002a14:	0c800793          	li	a5,200
80002a18:	fef41223          	sh	a5,-28(s0)
80002a1c:	02800793          	li	a5,40
80002a20:	fef41123          	sh	a5,-30(s0)
80002a24:	fe441583          	lh	a1,-28(s0)
80002a28:	fe241603          	lh	a2,-30(s0)
80002a2c:	fc842783          	lw	a5,-56(s0)
80002a30:	01f00713          	li	a4,31
80002a34:	01e00693          	li	a3,30
80002a38:	fcc42503          	lw	a0,-52(s0)
80002a3c:	0ac020ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002a40:	00200793          	li	a5,2
80002a44:	2680006f          	j	80002cac <singlePlayerAI+0x8a8>
80002a48:	fc442783          	lw	a5,-60(s0)
80002a4c:	00678793          	addi	a5,a5,6
80002a50:	0007c703          	lbu	a4,0(a5)
80002a54:	02000793          	li	a5,32
80002a58:	04f71463          	bne	a4,a5,80002aa0 <singlePlayerAI+0x69c>
80002a5c:	fc442783          	lw	a5,-60(s0)
80002a60:	00678793          	addi	a5,a5,6
80002a64:	04f00713          	li	a4,79
80002a68:	00e78023          	sb	a4,0(a5)
80002a6c:	02800793          	li	a5,40
80002a70:	fef41223          	sh	a5,-28(s0)
80002a74:	0c800793          	li	a5,200
80002a78:	fef41123          	sh	a5,-30(s0)
80002a7c:	fe441583          	lh	a1,-28(s0)
80002a80:	fe241603          	lh	a2,-30(s0)
80002a84:	fc842783          	lw	a5,-56(s0)
80002a88:	01f00713          	li	a4,31
80002a8c:	01e00693          	li	a3,30
80002a90:	fcc42503          	lw	a0,-52(s0)
80002a94:	054020ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002a98:	00600793          	li	a5,6
80002a9c:	2100006f          	j	80002cac <singlePlayerAI+0x8a8>
80002aa0:	fc442783          	lw	a5,-60(s0)
80002aa4:	00878793          	addi	a5,a5,8
80002aa8:	0007c703          	lbu	a4,0(a5)
80002aac:	02000793          	li	a5,32
80002ab0:	04f71463          	bne	a4,a5,80002af8 <singlePlayerAI+0x6f4>
80002ab4:	fc442783          	lw	a5,-60(s0)
80002ab8:	00878793          	addi	a5,a5,8
80002abc:	04f00713          	li	a4,79
80002ac0:	00e78023          	sb	a4,0(a5)
80002ac4:	0c800793          	li	a5,200
80002ac8:	fef41223          	sh	a5,-28(s0)
80002acc:	0c800793          	li	a5,200
80002ad0:	fef41123          	sh	a5,-30(s0)
80002ad4:	fe441583          	lh	a1,-28(s0)
80002ad8:	fe241603          	lh	a2,-30(s0)
80002adc:	fc842783          	lw	a5,-56(s0)
80002ae0:	01f00713          	li	a4,31
80002ae4:	01e00693          	li	a3,30
80002ae8:	fcc42503          	lw	a0,-52(s0)
80002aec:	7fd010ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002af0:	00800793          	li	a5,8
80002af4:	1b80006f          	j	80002cac <singlePlayerAI+0x8a8>
80002af8:	fc442783          	lw	a5,-60(s0)
80002afc:	00478793          	addi	a5,a5,4
80002b00:	0007c703          	lbu	a4,0(a5)
80002b04:	02000793          	li	a5,32
80002b08:	04f71463          	bne	a4,a5,80002b50 <singlePlayerAI+0x74c>
80002b0c:	fc442783          	lw	a5,-60(s0)
80002b10:	00478793          	addi	a5,a5,4
80002b14:	04f00713          	li	a4,79
80002b18:	00e78023          	sb	a4,0(a5)
80002b1c:	07800793          	li	a5,120
80002b20:	fef41223          	sh	a5,-28(s0)
80002b24:	07800793          	li	a5,120
80002b28:	fef41123          	sh	a5,-30(s0)
80002b2c:	fe441583          	lh	a1,-28(s0)
80002b30:	fe241603          	lh	a2,-30(s0)
80002b34:	fc842783          	lw	a5,-56(s0)
80002b38:	01f00713          	li	a4,31
80002b3c:	01e00693          	li	a3,30
80002b40:	fcc42503          	lw	a0,-52(s0)
80002b44:	7a5010ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002b48:	00400793          	li	a5,4
80002b4c:	1600006f          	j	80002cac <singlePlayerAI+0x8a8>
80002b50:	fc442783          	lw	a5,-60(s0)
80002b54:	00178793          	addi	a5,a5,1
80002b58:	0007c703          	lbu	a4,0(a5)
80002b5c:	02000793          	li	a5,32
80002b60:	04f71463          	bne	a4,a5,80002ba8 <singlePlayerAI+0x7a4>
80002b64:	fc442783          	lw	a5,-60(s0)
80002b68:	00178793          	addi	a5,a5,1
80002b6c:	04f00713          	li	a4,79
80002b70:	00e78023          	sb	a4,0(a5)
80002b74:	07800793          	li	a5,120
80002b78:	fef41223          	sh	a5,-28(s0)
80002b7c:	02800793          	li	a5,40
80002b80:	fef41123          	sh	a5,-30(s0)
80002b84:	fe441583          	lh	a1,-28(s0)
80002b88:	fe241603          	lh	a2,-30(s0)
80002b8c:	fc842783          	lw	a5,-56(s0)
80002b90:	01f00713          	li	a4,31
80002b94:	01e00693          	li	a3,30
80002b98:	fcc42503          	lw	a0,-52(s0)
80002b9c:	74d010ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002ba0:	00100793          	li	a5,1
80002ba4:	1080006f          	j	80002cac <singlePlayerAI+0x8a8>
80002ba8:	fc442783          	lw	a5,-60(s0)
80002bac:	00378793          	addi	a5,a5,3
80002bb0:	0007c703          	lbu	a4,0(a5)
80002bb4:	02000793          	li	a5,32
80002bb8:	04f71463          	bne	a4,a5,80002c00 <singlePlayerAI+0x7fc>
80002bbc:	fc442783          	lw	a5,-60(s0)
80002bc0:	00378793          	addi	a5,a5,3
80002bc4:	04f00713          	li	a4,79
80002bc8:	00e78023          	sb	a4,0(a5)
80002bcc:	02800793          	li	a5,40
80002bd0:	fef41223          	sh	a5,-28(s0)
80002bd4:	07800793          	li	a5,120
80002bd8:	fef41123          	sh	a5,-30(s0)
80002bdc:	fe441583          	lh	a1,-28(s0)
80002be0:	fe241603          	lh	a2,-30(s0)
80002be4:	fc842783          	lw	a5,-56(s0)
80002be8:	01f00713          	li	a4,31
80002bec:	01e00693          	li	a3,30
80002bf0:	fcc42503          	lw	a0,-52(s0)
80002bf4:	6f5010ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002bf8:	00300793          	li	a5,3
80002bfc:	0b00006f          	j	80002cac <singlePlayerAI+0x8a8>
80002c00:	fc442783          	lw	a5,-60(s0)
80002c04:	00578793          	addi	a5,a5,5
80002c08:	0007c703          	lbu	a4,0(a5)
80002c0c:	02000793          	li	a5,32
80002c10:	04f71463          	bne	a4,a5,80002c58 <singlePlayerAI+0x854>
80002c14:	fc442783          	lw	a5,-60(s0)
80002c18:	00578793          	addi	a5,a5,5
80002c1c:	04f00713          	li	a4,79
80002c20:	00e78023          	sb	a4,0(a5)
80002c24:	0c800793          	li	a5,200
80002c28:	fef41223          	sh	a5,-28(s0)
80002c2c:	07800793          	li	a5,120
80002c30:	fef41123          	sh	a5,-30(s0)
80002c34:	fe441583          	lh	a1,-28(s0)
80002c38:	fe241603          	lh	a2,-30(s0)
80002c3c:	fc842783          	lw	a5,-56(s0)
80002c40:	01f00713          	li	a4,31
80002c44:	01e00693          	li	a3,30
80002c48:	fcc42503          	lw	a0,-52(s0)
80002c4c:	69d010ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002c50:	00500793          	li	a5,5
80002c54:	0580006f          	j	80002cac <singlePlayerAI+0x8a8>
80002c58:	fc442783          	lw	a5,-60(s0)
80002c5c:	00778793          	addi	a5,a5,7
80002c60:	0007c703          	lbu	a4,0(a5)
80002c64:	02000793          	li	a5,32
80002c68:	04f71063          	bne	a4,a5,80002ca8 <singlePlayerAI+0x8a4>
80002c6c:	fc442783          	lw	a5,-60(s0)
80002c70:	00778793          	addi	a5,a5,7
80002c74:	04f00713          	li	a4,79
80002c78:	00e78023          	sb	a4,0(a5)
80002c7c:	07800793          	li	a5,120
80002c80:	fef41223          	sh	a5,-28(s0)
80002c84:	0c800793          	li	a5,200
80002c88:	fef41123          	sh	a5,-30(s0)
80002c8c:	fe441583          	lh	a1,-28(s0)
80002c90:	fe241603          	lh	a2,-30(s0)
80002c94:	fc842783          	lw	a5,-56(s0)
80002c98:	01f00713          	li	a4,31
80002c9c:	01e00693          	li	a3,30
80002ca0:	fcc42503          	lw	a0,-52(s0)
80002ca4:	645010ef          	jal	ra,80004ae8 <TFT_drawCircle>
80002ca8:	0ff00793          	li	a5,255
80002cac:	00078513          	mv	a0,a5
80002cb0:	03c12083          	lw	ra,60(sp)
80002cb4:	03812403          	lw	s0,56(sp)
80002cb8:	04010113          	addi	sp,sp,64
80002cbc:	00008067          	ret

80002cc0 <map>:
	uint16_t in_min,
	uint16_t in_max,
	uint16_t out_min,
	uint16_t out_max
)
{
80002cc0:	fe010113          	addi	sp,sp,-32
80002cc4:	00812e23          	sw	s0,28(sp)
80002cc8:	02010413          	addi	s0,sp,32
80002ccc:	00050793          	mv	a5,a0
80002cd0:	fef41723          	sh	a5,-18(s0)
80002cd4:	00058793          	mv	a5,a1
80002cd8:	fef41623          	sh	a5,-20(s0)
80002cdc:	00060793          	mv	a5,a2
80002ce0:	fef41523          	sh	a5,-22(s0)
80002ce4:	00068793          	mv	a5,a3
80002ce8:	fef41423          	sh	a5,-24(s0)
80002cec:	00070793          	mv	a5,a4
80002cf0:	fef41323          	sh	a5,-26(s0)
	return (coord - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
80002cf4:	fee45703          	lhu	a4,-18(s0)
80002cf8:	fec45783          	lhu	a5,-20(s0)
80002cfc:	40f70733          	sub	a4,a4,a5
80002d00:	fe645683          	lhu	a3,-26(s0)
80002d04:	fe845783          	lhu	a5,-24(s0)
80002d08:	40f687b3          	sub	a5,a3,a5
80002d0c:	02f70733          	mul	a4,a4,a5
80002d10:	fea45683          	lhu	a3,-22(s0)
80002d14:	fec45783          	lhu	a5,-20(s0)
80002d18:	40f687b3          	sub	a5,a3,a5
80002d1c:	02f74733          	div	a4,a4,a5
80002d20:	fe845783          	lhu	a5,-24(s0)
80002d24:	00f707b3          	add	a5,a4,a5
}
80002d28:	00078513          	mv	a0,a5
80002d2c:	01c12403          	lw	s0,28(sp)
80002d30:	02010113          	addi	sp,sp,32
80002d34:	00008067          	ret

80002d38 <drawGame>:
drawGame
(
	spi_instance_t *this_spi,
	gpio_instance_t *this_gpio
)
{
80002d38:	fe010113          	addi	sp,sp,-32
80002d3c:	00112e23          	sw	ra,28(sp)
80002d40:	00812c23          	sw	s0,24(sp)
80002d44:	02010413          	addi	s0,sp,32
80002d48:	fea42623          	sw	a0,-20(s0)
80002d4c:	feb42423          	sw	a1,-24(s0)
    TFT_drawLine(this_spi, 50, 50,  190, 190 ,ILI9341_GREEN,this_gpio);
80002d50:	fe842803          	lw	a6,-24(s0)
80002d54:	7e000793          	li	a5,2016
80002d58:	0be00713          	li	a4,190
80002d5c:	0be00693          	li	a3,190
80002d60:	03200613          	li	a2,50
80002d64:	03200593          	li	a1,50
80002d68:	fec42503          	lw	a0,-20(s0)
80002d6c:	1e8020ef          	jal	ra,80004f54 <TFT_drawLine>
    TFT_drawLine(this_spi, 190, 50,  50, 190 ,ILI9341_GREEN,this_gpio);
80002d70:	fe842803          	lw	a6,-24(s0)
80002d74:	7e000793          	li	a5,2016
80002d78:	0be00713          	li	a4,190
80002d7c:	03200693          	li	a3,50
80002d80:	03200613          	li	a2,50
80002d84:	0be00593          	li	a1,190
80002d88:	fec42503          	lw	a0,-20(s0)
80002d8c:	1c8020ef          	jal	ra,80004f54 <TFT_drawLine>
    TFT_drawCircle(this_spi ,120,120, 100, ILI9341_GREEN, this_gpio);
80002d90:	fe842783          	lw	a5,-24(s0)
80002d94:	7e000713          	li	a4,2016
80002d98:	06400693          	li	a3,100
80002d9c:	07800613          	li	a2,120
80002da0:	07800593          	li	a1,120
80002da4:	fec42503          	lw	a0,-20(s0)
80002da8:	541010ef          	jal	ra,80004ae8 <TFT_drawCircle>
}
80002dac:	00000013          	nop
80002db0:	01c12083          	lw	ra,28(sp)
80002db4:	01812403          	lw	s0,24(sp)
80002db8:	02010113          	addi	sp,sp,32
80002dbc:	00008067          	ret

80002dc0 <check_winner>:
	spi_instance_t * this_spi,
	char board[],
	uint8_t player,
	gpio_instance_t * this_gpio
)
{
80002dc0:	fe010113          	addi	sp,sp,-32
80002dc4:	00112e23          	sw	ra,28(sp)
80002dc8:	00812c23          	sw	s0,24(sp)
80002dcc:	02010413          	addi	s0,sp,32
80002dd0:	fea42623          	sw	a0,-20(s0)
80002dd4:	feb42423          	sw	a1,-24(s0)
80002dd8:	00060793          	mv	a5,a2
80002ddc:	fed42023          	sw	a3,-32(s0)
80002de0:	fef403a3          	sb	a5,-25(s0)
	if (board[0] == 'X' && board[3] == 'X' && board[6] == 'X')
80002de4:	fe842783          	lw	a5,-24(s0)
80002de8:	0007c703          	lbu	a4,0(a5)
80002dec:	05800793          	li	a5,88
80002df0:	06f71e63          	bne	a4,a5,80002e6c <check_winner+0xac>
80002df4:	fe842783          	lw	a5,-24(s0)
80002df8:	00378793          	addi	a5,a5,3
80002dfc:	0007c703          	lbu	a4,0(a5)
80002e00:	05800793          	li	a5,88
80002e04:	06f71463          	bne	a4,a5,80002e6c <check_winner+0xac>
80002e08:	fe842783          	lw	a5,-24(s0)
80002e0c:	00678793          	addi	a5,a5,6
80002e10:	0007c703          	lbu	a4,0(a5)
80002e14:	05800793          	li	a5,88
80002e18:	04f71a63          	bne	a4,a5,80002e6c <check_winner+0xac>
	{
		TFT_drawLine(this_spi,0, 0,  240, 240 ,ILI9341_RED,this_gpio);
80002e1c:	fe042803          	lw	a6,-32(s0)
80002e20:	000107b7          	lui	a5,0x10
80002e24:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80002e28:	0f000713          	li	a4,240
80002e2c:	0f000693          	li	a3,240
80002e30:	00000613          	li	a2,0
80002e34:	00000593          	li	a1,0
80002e38:	fec42503          	lw	a0,-20(s0)
80002e3c:	118020ef          	jal	ra,80004f54 <TFT_drawLine>
		TFT_drawLine(this_spi,240, 0,  0, 240 ,ILI9341_RED,this_gpio);
80002e40:	fe042803          	lw	a6,-32(s0)
80002e44:	000107b7          	lui	a5,0x10
80002e48:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80002e4c:	0f000713          	li	a4,240
80002e50:	00000693          	li	a3,0
80002e54:	00000613          	li	a2,0
80002e58:	0f000593          	li	a1,240
80002e5c:	fec42503          	lw	a0,-20(s0)
80002e60:	0f4020ef          	jal	ra,80004f54 <TFT_drawLine>
		return 1;
80002e64:	00100793          	li	a5,1
80002e68:	6c80006f          	j	80003530 <check_winner+0x770>
	}
	else if (board[1] == 'X' && board[4] == 'X' && board[7] == 'X')
80002e6c:	fe842783          	lw	a5,-24(s0)
80002e70:	00178793          	addi	a5,a5,1
80002e74:	0007c703          	lbu	a4,0(a5)
80002e78:	05800793          	li	a5,88
80002e7c:	06f71e63          	bne	a4,a5,80002ef8 <check_winner+0x138>
80002e80:	fe842783          	lw	a5,-24(s0)
80002e84:	00478793          	addi	a5,a5,4
80002e88:	0007c703          	lbu	a4,0(a5)
80002e8c:	05800793          	li	a5,88
80002e90:	06f71463          	bne	a4,a5,80002ef8 <check_winner+0x138>
80002e94:	fe842783          	lw	a5,-24(s0)
80002e98:	00778793          	addi	a5,a5,7
80002e9c:	0007c703          	lbu	a4,0(a5)
80002ea0:	05800793          	li	a5,88
80002ea4:	04f71a63          	bne	a4,a5,80002ef8 <check_winner+0x138>
	{
		TFT_drawLine(this_spi,0, 0,  240, 240 ,ILI9341_RED,this_gpio);
80002ea8:	fe042803          	lw	a6,-32(s0)
80002eac:	000107b7          	lui	a5,0x10
80002eb0:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80002eb4:	0f000713          	li	a4,240
80002eb8:	0f000693          	li	a3,240
80002ebc:	00000613          	li	a2,0
80002ec0:	00000593          	li	a1,0
80002ec4:	fec42503          	lw	a0,-20(s0)
80002ec8:	08c020ef          	jal	ra,80004f54 <TFT_drawLine>
		TFT_drawLine(this_spi,240, 0,  0, 240 ,ILI9341_RED,this_gpio);
80002ecc:	fe042803          	lw	a6,-32(s0)
80002ed0:	000107b7          	lui	a5,0x10
80002ed4:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80002ed8:	0f000713          	li	a4,240
80002edc:	00000693          	li	a3,0
80002ee0:	00000613          	li	a2,0
80002ee4:	0f000593          	li	a1,240
80002ee8:	fec42503          	lw	a0,-20(s0)
80002eec:	068020ef          	jal	ra,80004f54 <TFT_drawLine>
		return 1;
80002ef0:	00100793          	li	a5,1
80002ef4:	63c0006f          	j	80003530 <check_winner+0x770>
	}
	else if (board[2] == 'X' && board[5] == 'X' && board[8] == 'X')
80002ef8:	fe842783          	lw	a5,-24(s0)
80002efc:	00278793          	addi	a5,a5,2
80002f00:	0007c703          	lbu	a4,0(a5)
80002f04:	05800793          	li	a5,88
80002f08:	06f71e63          	bne	a4,a5,80002f84 <check_winner+0x1c4>
80002f0c:	fe842783          	lw	a5,-24(s0)
80002f10:	00578793          	addi	a5,a5,5
80002f14:	0007c703          	lbu	a4,0(a5)
80002f18:	05800793          	li	a5,88
80002f1c:	06f71463          	bne	a4,a5,80002f84 <check_winner+0x1c4>
80002f20:	fe842783          	lw	a5,-24(s0)
80002f24:	00878793          	addi	a5,a5,8
80002f28:	0007c703          	lbu	a4,0(a5)
80002f2c:	05800793          	li	a5,88
80002f30:	04f71a63          	bne	a4,a5,80002f84 <check_winner+0x1c4>
	{
		TFT_drawLine(this_spi,0, 0,  240, 240 ,ILI9341_RED,this_gpio);
80002f34:	fe042803          	lw	a6,-32(s0)
80002f38:	000107b7          	lui	a5,0x10
80002f3c:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80002f40:	0f000713          	li	a4,240
80002f44:	0f000693          	li	a3,240
80002f48:	00000613          	li	a2,0
80002f4c:	00000593          	li	a1,0
80002f50:	fec42503          	lw	a0,-20(s0)
80002f54:	000020ef          	jal	ra,80004f54 <TFT_drawLine>
		TFT_drawLine(this_spi,240, 0,  0, 240 ,ILI9341_RED,this_gpio);
80002f58:	fe042803          	lw	a6,-32(s0)
80002f5c:	000107b7          	lui	a5,0x10
80002f60:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80002f64:	0f000713          	li	a4,240
80002f68:	00000693          	li	a3,0
80002f6c:	00000613          	li	a2,0
80002f70:	0f000593          	li	a1,240
80002f74:	fec42503          	lw	a0,-20(s0)
80002f78:	7dd010ef          	jal	ra,80004f54 <TFT_drawLine>
		return 1;
80002f7c:	00100793          	li	a5,1
80002f80:	5b00006f          	j	80003530 <check_winner+0x770>
	}
	else if (board[0] == 'X' && board[1] == 'X' && board[2] == 'X')
80002f84:	fe842783          	lw	a5,-24(s0)
80002f88:	0007c703          	lbu	a4,0(a5)
80002f8c:	05800793          	li	a5,88
80002f90:	06f71e63          	bne	a4,a5,8000300c <check_winner+0x24c>
80002f94:	fe842783          	lw	a5,-24(s0)
80002f98:	00178793          	addi	a5,a5,1
80002f9c:	0007c703          	lbu	a4,0(a5)
80002fa0:	05800793          	li	a5,88
80002fa4:	06f71463          	bne	a4,a5,8000300c <check_winner+0x24c>
80002fa8:	fe842783          	lw	a5,-24(s0)
80002fac:	00278793          	addi	a5,a5,2
80002fb0:	0007c703          	lbu	a4,0(a5)
80002fb4:	05800793          	li	a5,88
80002fb8:	04f71a63          	bne	a4,a5,8000300c <check_winner+0x24c>
	{
		TFT_drawLine(this_spi,0, 0,  240, 240 ,ILI9341_RED,this_gpio);
80002fbc:	fe042803          	lw	a6,-32(s0)
80002fc0:	000107b7          	lui	a5,0x10
80002fc4:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80002fc8:	0f000713          	li	a4,240
80002fcc:	0f000693          	li	a3,240
80002fd0:	00000613          	li	a2,0
80002fd4:	00000593          	li	a1,0
80002fd8:	fec42503          	lw	a0,-20(s0)
80002fdc:	779010ef          	jal	ra,80004f54 <TFT_drawLine>
		TFT_drawLine(this_spi,240, 0,  0, 240 ,ILI9341_RED,this_gpio);
80002fe0:	fe042803          	lw	a6,-32(s0)
80002fe4:	000107b7          	lui	a5,0x10
80002fe8:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80002fec:	0f000713          	li	a4,240
80002ff0:	00000693          	li	a3,0
80002ff4:	00000613          	li	a2,0
80002ff8:	0f000593          	li	a1,240
80002ffc:	fec42503          	lw	a0,-20(s0)
80003000:	755010ef          	jal	ra,80004f54 <TFT_drawLine>
		return 1;
80003004:	00100793          	li	a5,1
80003008:	5280006f          	j	80003530 <check_winner+0x770>
	}
	else if (board[3] == 'X' && board[4] == 'X' && board[5] == 'X')
8000300c:	fe842783          	lw	a5,-24(s0)
80003010:	00378793          	addi	a5,a5,3
80003014:	0007c703          	lbu	a4,0(a5)
80003018:	05800793          	li	a5,88
8000301c:	06f71e63          	bne	a4,a5,80003098 <check_winner+0x2d8>
80003020:	fe842783          	lw	a5,-24(s0)
80003024:	00478793          	addi	a5,a5,4
80003028:	0007c703          	lbu	a4,0(a5)
8000302c:	05800793          	li	a5,88
80003030:	06f71463          	bne	a4,a5,80003098 <check_winner+0x2d8>
80003034:	fe842783          	lw	a5,-24(s0)
80003038:	00578793          	addi	a5,a5,5
8000303c:	0007c703          	lbu	a4,0(a5)
80003040:	05800793          	li	a5,88
80003044:	04f71a63          	bne	a4,a5,80003098 <check_winner+0x2d8>
	{
		TFT_drawLine(this_spi,0, 0,  240, 240 ,ILI9341_RED,this_gpio);
80003048:	fe042803          	lw	a6,-32(s0)
8000304c:	000107b7          	lui	a5,0x10
80003050:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80003054:	0f000713          	li	a4,240
80003058:	0f000693          	li	a3,240
8000305c:	00000613          	li	a2,0
80003060:	00000593          	li	a1,0
80003064:	fec42503          	lw	a0,-20(s0)
80003068:	6ed010ef          	jal	ra,80004f54 <TFT_drawLine>
		TFT_drawLine(this_spi,240, 0,  0, 240 ,ILI9341_RED,this_gpio);
8000306c:	fe042803          	lw	a6,-32(s0)
80003070:	000107b7          	lui	a5,0x10
80003074:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80003078:	0f000713          	li	a4,240
8000307c:	00000693          	li	a3,0
80003080:	00000613          	li	a2,0
80003084:	0f000593          	li	a1,240
80003088:	fec42503          	lw	a0,-20(s0)
8000308c:	6c9010ef          	jal	ra,80004f54 <TFT_drawLine>
		return 1;
80003090:	00100793          	li	a5,1
80003094:	49c0006f          	j	80003530 <check_winner+0x770>
	}
	else if (board[6] == 'X' && board[7] == 'X' && board[8] == 'X')
80003098:	fe842783          	lw	a5,-24(s0)
8000309c:	00678793          	addi	a5,a5,6
800030a0:	0007c703          	lbu	a4,0(a5)
800030a4:	05800793          	li	a5,88
800030a8:	06f71e63          	bne	a4,a5,80003124 <check_winner+0x364>
800030ac:	fe842783          	lw	a5,-24(s0)
800030b0:	00778793          	addi	a5,a5,7
800030b4:	0007c703          	lbu	a4,0(a5)
800030b8:	05800793          	li	a5,88
800030bc:	06f71463          	bne	a4,a5,80003124 <check_winner+0x364>
800030c0:	fe842783          	lw	a5,-24(s0)
800030c4:	00878793          	addi	a5,a5,8
800030c8:	0007c703          	lbu	a4,0(a5)
800030cc:	05800793          	li	a5,88
800030d0:	04f71a63          	bne	a4,a5,80003124 <check_winner+0x364>
	{
		TFT_drawLine(this_spi,0, 0,  240, 240 ,ILI9341_RED,this_gpio);
800030d4:	fe042803          	lw	a6,-32(s0)
800030d8:	000107b7          	lui	a5,0x10
800030dc:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
800030e0:	0f000713          	li	a4,240
800030e4:	0f000693          	li	a3,240
800030e8:	00000613          	li	a2,0
800030ec:	00000593          	li	a1,0
800030f0:	fec42503          	lw	a0,-20(s0)
800030f4:	661010ef          	jal	ra,80004f54 <TFT_drawLine>
		TFT_drawLine(this_spi,240, 0,  0, 240 ,ILI9341_RED,this_gpio);
800030f8:	fe042803          	lw	a6,-32(s0)
800030fc:	000107b7          	lui	a5,0x10
80003100:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80003104:	0f000713          	li	a4,240
80003108:	00000693          	li	a3,0
8000310c:	00000613          	li	a2,0
80003110:	0f000593          	li	a1,240
80003114:	fec42503          	lw	a0,-20(s0)
80003118:	63d010ef          	jal	ra,80004f54 <TFT_drawLine>
		return 1;
8000311c:	00100793          	li	a5,1
80003120:	4100006f          	j	80003530 <check_winner+0x770>
	}
	else if (board[0] == 'X' && board[4] == 'X' && board[8] == 'X')
80003124:	fe842783          	lw	a5,-24(s0)
80003128:	0007c703          	lbu	a4,0(a5)
8000312c:	05800793          	li	a5,88
80003130:	06f71e63          	bne	a4,a5,800031ac <check_winner+0x3ec>
80003134:	fe842783          	lw	a5,-24(s0)
80003138:	00478793          	addi	a5,a5,4
8000313c:	0007c703          	lbu	a4,0(a5)
80003140:	05800793          	li	a5,88
80003144:	06f71463          	bne	a4,a5,800031ac <check_winner+0x3ec>
80003148:	fe842783          	lw	a5,-24(s0)
8000314c:	00878793          	addi	a5,a5,8
80003150:	0007c703          	lbu	a4,0(a5)
80003154:	05800793          	li	a5,88
80003158:	04f71a63          	bne	a4,a5,800031ac <check_winner+0x3ec>
	{
		TFT_drawLine(this_spi,0, 0,  240, 240 ,ILI9341_RED,this_gpio);
8000315c:	fe042803          	lw	a6,-32(s0)
80003160:	000107b7          	lui	a5,0x10
80003164:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80003168:	0f000713          	li	a4,240
8000316c:	0f000693          	li	a3,240
80003170:	00000613          	li	a2,0
80003174:	00000593          	li	a1,0
80003178:	fec42503          	lw	a0,-20(s0)
8000317c:	5d9010ef          	jal	ra,80004f54 <TFT_drawLine>
		TFT_drawLine(this_spi,240, 0,  0, 240 ,ILI9341_RED,this_gpio);
80003180:	fe042803          	lw	a6,-32(s0)
80003184:	000107b7          	lui	a5,0x10
80003188:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
8000318c:	0f000713          	li	a4,240
80003190:	00000693          	li	a3,0
80003194:	00000613          	li	a2,0
80003198:	0f000593          	li	a1,240
8000319c:	fec42503          	lw	a0,-20(s0)
800031a0:	5b5010ef          	jal	ra,80004f54 <TFT_drawLine>
		return 1;
800031a4:	00100793          	li	a5,1
800031a8:	3880006f          	j	80003530 <check_winner+0x770>
	}
	else if (board[2] == 'X' && board[4] == 'X' && board[6] == 'X')
800031ac:	fe842783          	lw	a5,-24(s0)
800031b0:	00278793          	addi	a5,a5,2
800031b4:	0007c703          	lbu	a4,0(a5)
800031b8:	05800793          	li	a5,88
800031bc:	06f71e63          	bne	a4,a5,80003238 <check_winner+0x478>
800031c0:	fe842783          	lw	a5,-24(s0)
800031c4:	00478793          	addi	a5,a5,4
800031c8:	0007c703          	lbu	a4,0(a5)
800031cc:	05800793          	li	a5,88
800031d0:	06f71463          	bne	a4,a5,80003238 <check_winner+0x478>
800031d4:	fe842783          	lw	a5,-24(s0)
800031d8:	00678793          	addi	a5,a5,6
800031dc:	0007c703          	lbu	a4,0(a5)
800031e0:	05800793          	li	a5,88
800031e4:	04f71a63          	bne	a4,a5,80003238 <check_winner+0x478>
	{
		TFT_drawLine(this_spi,0, 0,  240, 240 ,ILI9341_RED,this_gpio);
800031e8:	fe042803          	lw	a6,-32(s0)
800031ec:	000107b7          	lui	a5,0x10
800031f0:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
800031f4:	0f000713          	li	a4,240
800031f8:	0f000693          	li	a3,240
800031fc:	00000613          	li	a2,0
80003200:	00000593          	li	a1,0
80003204:	fec42503          	lw	a0,-20(s0)
80003208:	54d010ef          	jal	ra,80004f54 <TFT_drawLine>
		TFT_drawLine(this_spi,240, 0,  0, 240 ,ILI9341_RED,this_gpio);
8000320c:	fe042803          	lw	a6,-32(s0)
80003210:	000107b7          	lui	a5,0x10
80003214:	80078793          	addi	a5,a5,-2048 # f800 <HEAP_SIZE+0xf000>
80003218:	0f000713          	li	a4,240
8000321c:	00000693          	li	a3,0
80003220:	00000613          	li	a2,0
80003224:	0f000593          	li	a1,240
80003228:	fec42503          	lw	a0,-20(s0)
8000322c:	529010ef          	jal	ra,80004f54 <TFT_drawLine>
		return 1;
80003230:	00100793          	li	a5,1
80003234:	2fc0006f          	j	80003530 <check_winner+0x770>
	}
	else if (board[0] == 'O' && board[3] == 'O' && board[6] == 'O')
80003238:	fe842783          	lw	a5,-24(s0)
8000323c:	0007c703          	lbu	a4,0(a5)
80003240:	04f00793          	li	a5,79
80003244:	04f71863          	bne	a4,a5,80003294 <check_winner+0x4d4>
80003248:	fe842783          	lw	a5,-24(s0)
8000324c:	00378793          	addi	a5,a5,3
80003250:	0007c703          	lbu	a4,0(a5)
80003254:	04f00793          	li	a5,79
80003258:	02f71e63          	bne	a4,a5,80003294 <check_winner+0x4d4>
8000325c:	fe842783          	lw	a5,-24(s0)
80003260:	00678793          	addi	a5,a5,6
80003264:	0007c703          	lbu	a4,0(a5)
80003268:	04f00793          	li	a5,79
8000326c:	02f71463          	bne	a4,a5,80003294 <check_winner+0x4d4>
	{
		TFT_drawCircle(this_spi ,120,120, 100, ILI9341_BLUE, this_gpio);
80003270:	fe042783          	lw	a5,-32(s0)
80003274:	01f00713          	li	a4,31
80003278:	06400693          	li	a3,100
8000327c:	07800613          	li	a2,120
80003280:	07800593          	li	a1,120
80003284:	fec42503          	lw	a0,-20(s0)
80003288:	061010ef          	jal	ra,80004ae8 <TFT_drawCircle>
		return 1;
8000328c:	00100793          	li	a5,1
80003290:	2a00006f          	j	80003530 <check_winner+0x770>
	}
	else if (board[1] == 'O' && board[4] == 'O' && board[7] == 'O')
80003294:	fe842783          	lw	a5,-24(s0)
80003298:	00178793          	addi	a5,a5,1
8000329c:	0007c703          	lbu	a4,0(a5)
800032a0:	04f00793          	li	a5,79
800032a4:	04f71863          	bne	a4,a5,800032f4 <check_winner+0x534>
800032a8:	fe842783          	lw	a5,-24(s0)
800032ac:	00478793          	addi	a5,a5,4
800032b0:	0007c703          	lbu	a4,0(a5)
800032b4:	04f00793          	li	a5,79
800032b8:	02f71e63          	bne	a4,a5,800032f4 <check_winner+0x534>
800032bc:	fe842783          	lw	a5,-24(s0)
800032c0:	00778793          	addi	a5,a5,7
800032c4:	0007c703          	lbu	a4,0(a5)
800032c8:	04f00793          	li	a5,79
800032cc:	02f71463          	bne	a4,a5,800032f4 <check_winner+0x534>
	{
		TFT_drawCircle(this_spi ,120,120, 100, ILI9341_BLUE, this_gpio);
800032d0:	fe042783          	lw	a5,-32(s0)
800032d4:	01f00713          	li	a4,31
800032d8:	06400693          	li	a3,100
800032dc:	07800613          	li	a2,120
800032e0:	07800593          	li	a1,120
800032e4:	fec42503          	lw	a0,-20(s0)
800032e8:	001010ef          	jal	ra,80004ae8 <TFT_drawCircle>
		return 1;
800032ec:	00100793          	li	a5,1
800032f0:	2400006f          	j	80003530 <check_winner+0x770>
	}
	else if (board[2] == 'O' && board[5] == 'O' && board[8] == 'O')
800032f4:	fe842783          	lw	a5,-24(s0)
800032f8:	00278793          	addi	a5,a5,2
800032fc:	0007c703          	lbu	a4,0(a5)
80003300:	04f00793          	li	a5,79
80003304:	04f71863          	bne	a4,a5,80003354 <check_winner+0x594>
80003308:	fe842783          	lw	a5,-24(s0)
8000330c:	00578793          	addi	a5,a5,5
80003310:	0007c703          	lbu	a4,0(a5)
80003314:	04f00793          	li	a5,79
80003318:	02f71e63          	bne	a4,a5,80003354 <check_winner+0x594>
8000331c:	fe842783          	lw	a5,-24(s0)
80003320:	00878793          	addi	a5,a5,8
80003324:	0007c703          	lbu	a4,0(a5)
80003328:	04f00793          	li	a5,79
8000332c:	02f71463          	bne	a4,a5,80003354 <check_winner+0x594>
	{
		TFT_drawCircle(this_spi ,120,120, 100, ILI9341_BLUE, this_gpio);
80003330:	fe042783          	lw	a5,-32(s0)
80003334:	01f00713          	li	a4,31
80003338:	06400693          	li	a3,100
8000333c:	07800613          	li	a2,120
80003340:	07800593          	li	a1,120
80003344:	fec42503          	lw	a0,-20(s0)
80003348:	7a0010ef          	jal	ra,80004ae8 <TFT_drawCircle>
		return 1;
8000334c:	00100793          	li	a5,1
80003350:	1e00006f          	j	80003530 <check_winner+0x770>
	}
	else if (board[0] == 'O' && board[1] == 'O' && board[2] == 'O')
80003354:	fe842783          	lw	a5,-24(s0)
80003358:	0007c703          	lbu	a4,0(a5)
8000335c:	04f00793          	li	a5,79
80003360:	04f71863          	bne	a4,a5,800033b0 <check_winner+0x5f0>
80003364:	fe842783          	lw	a5,-24(s0)
80003368:	00178793          	addi	a5,a5,1
8000336c:	0007c703          	lbu	a4,0(a5)
80003370:	04f00793          	li	a5,79
80003374:	02f71e63          	bne	a4,a5,800033b0 <check_winner+0x5f0>
80003378:	fe842783          	lw	a5,-24(s0)
8000337c:	00278793          	addi	a5,a5,2
80003380:	0007c703          	lbu	a4,0(a5)
80003384:	04f00793          	li	a5,79
80003388:	02f71463          	bne	a4,a5,800033b0 <check_winner+0x5f0>
	{
		TFT_drawCircle(this_spi ,120,120, 100, ILI9341_BLUE, this_gpio);
8000338c:	fe042783          	lw	a5,-32(s0)
80003390:	01f00713          	li	a4,31
80003394:	06400693          	li	a3,100
80003398:	07800613          	li	a2,120
8000339c:	07800593          	li	a1,120
800033a0:	fec42503          	lw	a0,-20(s0)
800033a4:	744010ef          	jal	ra,80004ae8 <TFT_drawCircle>
		return 1;
800033a8:	00100793          	li	a5,1
800033ac:	1840006f          	j	80003530 <check_winner+0x770>
	}
	else if (board[3] == 'O' && board[4] == 'O' && board[5] == 'O')
800033b0:	fe842783          	lw	a5,-24(s0)
800033b4:	00378793          	addi	a5,a5,3
800033b8:	0007c703          	lbu	a4,0(a5)
800033bc:	04f00793          	li	a5,79
800033c0:	04f71863          	bne	a4,a5,80003410 <check_winner+0x650>
800033c4:	fe842783          	lw	a5,-24(s0)
800033c8:	00478793          	addi	a5,a5,4
800033cc:	0007c703          	lbu	a4,0(a5)
800033d0:	04f00793          	li	a5,79
800033d4:	02f71e63          	bne	a4,a5,80003410 <check_winner+0x650>
800033d8:	fe842783          	lw	a5,-24(s0)
800033dc:	00578793          	addi	a5,a5,5
800033e0:	0007c703          	lbu	a4,0(a5)
800033e4:	04f00793          	li	a5,79
800033e8:	02f71463          	bne	a4,a5,80003410 <check_winner+0x650>
	{
		TFT_drawCircle(this_spi ,120,120, 100, ILI9341_BLUE, this_gpio);
800033ec:	fe042783          	lw	a5,-32(s0)
800033f0:	01f00713          	li	a4,31
800033f4:	06400693          	li	a3,100
800033f8:	07800613          	li	a2,120
800033fc:	07800593          	li	a1,120
80003400:	fec42503          	lw	a0,-20(s0)
80003404:	6e4010ef          	jal	ra,80004ae8 <TFT_drawCircle>
		return 1;
80003408:	00100793          	li	a5,1
8000340c:	1240006f          	j	80003530 <check_winner+0x770>
	}
	else if (board[6] == 'O' && board[7] == 'O' && board[8] == 'O')
80003410:	fe842783          	lw	a5,-24(s0)
80003414:	00678793          	addi	a5,a5,6
80003418:	0007c703          	lbu	a4,0(a5)
8000341c:	04f00793          	li	a5,79
80003420:	04f71863          	bne	a4,a5,80003470 <check_winner+0x6b0>
80003424:	fe842783          	lw	a5,-24(s0)
80003428:	00778793          	addi	a5,a5,7
8000342c:	0007c703          	lbu	a4,0(a5)
80003430:	04f00793          	li	a5,79
80003434:	02f71e63          	bne	a4,a5,80003470 <check_winner+0x6b0>
80003438:	fe842783          	lw	a5,-24(s0)
8000343c:	00878793          	addi	a5,a5,8
80003440:	0007c703          	lbu	a4,0(a5)
80003444:	04f00793          	li	a5,79
80003448:	02f71463          	bne	a4,a5,80003470 <check_winner+0x6b0>
	{
		TFT_drawCircle(this_spi ,120,120, 100, ILI9341_BLUE, this_gpio);
8000344c:	fe042783          	lw	a5,-32(s0)
80003450:	01f00713          	li	a4,31
80003454:	06400693          	li	a3,100
80003458:	07800613          	li	a2,120
8000345c:	07800593          	li	a1,120
80003460:	fec42503          	lw	a0,-20(s0)
80003464:	684010ef          	jal	ra,80004ae8 <TFT_drawCircle>
		return 1;
80003468:	00100793          	li	a5,1
8000346c:	0c40006f          	j	80003530 <check_winner+0x770>
	}
	else if (board[0] == 'O' && board[4] == 'O' && board[8] == 'O')
80003470:	fe842783          	lw	a5,-24(s0)
80003474:	0007c703          	lbu	a4,0(a5)
80003478:	04f00793          	li	a5,79
8000347c:	04f71863          	bne	a4,a5,800034cc <check_winner+0x70c>
80003480:	fe842783          	lw	a5,-24(s0)
80003484:	00478793          	addi	a5,a5,4
80003488:	0007c703          	lbu	a4,0(a5)
8000348c:	04f00793          	li	a5,79
80003490:	02f71e63          	bne	a4,a5,800034cc <check_winner+0x70c>
80003494:	fe842783          	lw	a5,-24(s0)
80003498:	00878793          	addi	a5,a5,8
8000349c:	0007c703          	lbu	a4,0(a5)
800034a0:	04f00793          	li	a5,79
800034a4:	02f71463          	bne	a4,a5,800034cc <check_winner+0x70c>
	{
		TFT_drawCircle(this_spi ,120,120, 100, ILI9341_BLUE, this_gpio);
800034a8:	fe042783          	lw	a5,-32(s0)
800034ac:	01f00713          	li	a4,31
800034b0:	06400693          	li	a3,100
800034b4:	07800613          	li	a2,120
800034b8:	07800593          	li	a1,120
800034bc:	fec42503          	lw	a0,-20(s0)
800034c0:	628010ef          	jal	ra,80004ae8 <TFT_drawCircle>
		return 1;
800034c4:	00100793          	li	a5,1
800034c8:	0680006f          	j	80003530 <check_winner+0x770>
	}
	else if (board[2] == 'O' && board[4] == 'O' && board[6] == 'O')
800034cc:	fe842783          	lw	a5,-24(s0)
800034d0:	00278793          	addi	a5,a5,2
800034d4:	0007c703          	lbu	a4,0(a5)
800034d8:	04f00793          	li	a5,79
800034dc:	04f71863          	bne	a4,a5,8000352c <check_winner+0x76c>
800034e0:	fe842783          	lw	a5,-24(s0)
800034e4:	00478793          	addi	a5,a5,4
800034e8:	0007c703          	lbu	a4,0(a5)
800034ec:	04f00793          	li	a5,79
800034f0:	02f71e63          	bne	a4,a5,8000352c <check_winner+0x76c>
800034f4:	fe842783          	lw	a5,-24(s0)
800034f8:	00678793          	addi	a5,a5,6
800034fc:	0007c703          	lbu	a4,0(a5)
80003500:	04f00793          	li	a5,79
80003504:	02f71463          	bne	a4,a5,8000352c <check_winner+0x76c>
	{
		TFT_drawCircle(this_spi ,120,120, 100, ILI9341_BLUE, this_gpio);
80003508:	fe042783          	lw	a5,-32(s0)
8000350c:	01f00713          	li	a4,31
80003510:	06400693          	li	a3,100
80003514:	07800613          	li	a2,120
80003518:	07800593          	li	a1,120
8000351c:	fec42503          	lw	a0,-20(s0)
80003520:	5c8010ef          	jal	ra,80004ae8 <TFT_drawCircle>
		return 1;
80003524:	00100793          	li	a5,1
80003528:	0080006f          	j	80003530 <check_winner+0x770>
	}

	return 0;
8000352c:	00000793          	li	a5,0
}
80003530:	00078513          	mv	a0,a5
80003534:	01c12083          	lw	ra,28(sp)
80003538:	01812403          	lw	s0,24(sp)
8000353c:	02010113          	addi	sp,sp,32
80003540:	00008067          	ret

80003544 <AIcheck_winner>:


uint8_t AIcheck_winner(char board[], uint8_t player)
{
80003544:	fe010113          	addi	sp,sp,-32
80003548:	00812e23          	sw	s0,28(sp)
8000354c:	02010413          	addi	s0,sp,32
80003550:	fea42623          	sw	a0,-20(s0)
80003554:	00058793          	mv	a5,a1
80003558:	fef405a3          	sb	a5,-21(s0)
	if (board[0] == 'X' && board[3] == 'X' && board[6] == 'X')
8000355c:	fec42783          	lw	a5,-20(s0)
80003560:	0007c703          	lbu	a4,0(a5)
80003564:	05800793          	li	a5,88
80003568:	02f71a63          	bne	a4,a5,8000359c <AIcheck_winner+0x58>
8000356c:	fec42783          	lw	a5,-20(s0)
80003570:	00378793          	addi	a5,a5,3
80003574:	0007c703          	lbu	a4,0(a5)
80003578:	05800793          	li	a5,88
8000357c:	02f71063          	bne	a4,a5,8000359c <AIcheck_winner+0x58>
80003580:	fec42783          	lw	a5,-20(s0)
80003584:	00678793          	addi	a5,a5,6
80003588:	0007c703          	lbu	a4,0(a5)
8000358c:	05800793          	li	a5,88
80003590:	00f71663          	bne	a4,a5,8000359c <AIcheck_winner+0x58>
	{
    	return 1;
80003594:	00100793          	li	a5,1
80003598:	3f00006f          	j	80003988 <AIcheck_winner+0x444>
	}
	else if (board[1] == 'X' && board[4] == 'X' && board[7] == 'X')
8000359c:	fec42783          	lw	a5,-20(s0)
800035a0:	00178793          	addi	a5,a5,1
800035a4:	0007c703          	lbu	a4,0(a5)
800035a8:	05800793          	li	a5,88
800035ac:	02f71a63          	bne	a4,a5,800035e0 <AIcheck_winner+0x9c>
800035b0:	fec42783          	lw	a5,-20(s0)
800035b4:	00478793          	addi	a5,a5,4
800035b8:	0007c703          	lbu	a4,0(a5)
800035bc:	05800793          	li	a5,88
800035c0:	02f71063          	bne	a4,a5,800035e0 <AIcheck_winner+0x9c>
800035c4:	fec42783          	lw	a5,-20(s0)
800035c8:	00778793          	addi	a5,a5,7
800035cc:	0007c703          	lbu	a4,0(a5)
800035d0:	05800793          	li	a5,88
800035d4:	00f71663          	bne	a4,a5,800035e0 <AIcheck_winner+0x9c>
	{
	    return 1;
800035d8:	00100793          	li	a5,1
800035dc:	3ac0006f          	j	80003988 <AIcheck_winner+0x444>
	}
	else if (board[2] == 'X' && board[5] == 'X' && board[8] == 'X')
800035e0:	fec42783          	lw	a5,-20(s0)
800035e4:	00278793          	addi	a5,a5,2
800035e8:	0007c703          	lbu	a4,0(a5)
800035ec:	05800793          	li	a5,88
800035f0:	02f71a63          	bne	a4,a5,80003624 <AIcheck_winner+0xe0>
800035f4:	fec42783          	lw	a5,-20(s0)
800035f8:	00578793          	addi	a5,a5,5
800035fc:	0007c703          	lbu	a4,0(a5)
80003600:	05800793          	li	a5,88
80003604:	02f71063          	bne	a4,a5,80003624 <AIcheck_winner+0xe0>
80003608:	fec42783          	lw	a5,-20(s0)
8000360c:	00878793          	addi	a5,a5,8
80003610:	0007c703          	lbu	a4,0(a5)
80003614:	05800793          	li	a5,88
80003618:	00f71663          	bne	a4,a5,80003624 <AIcheck_winner+0xe0>
	{
    	return 1;
8000361c:	00100793          	li	a5,1
80003620:	3680006f          	j	80003988 <AIcheck_winner+0x444>
	}
	else if (board[0] == 'X' && board[1] == 'X' && board[2] == 'X')
80003624:	fec42783          	lw	a5,-20(s0)
80003628:	0007c703          	lbu	a4,0(a5)
8000362c:	05800793          	li	a5,88
80003630:	02f71a63          	bne	a4,a5,80003664 <AIcheck_winner+0x120>
80003634:	fec42783          	lw	a5,-20(s0)
80003638:	00178793          	addi	a5,a5,1
8000363c:	0007c703          	lbu	a4,0(a5)
80003640:	05800793          	li	a5,88
80003644:	02f71063          	bne	a4,a5,80003664 <AIcheck_winner+0x120>
80003648:	fec42783          	lw	a5,-20(s0)
8000364c:	00278793          	addi	a5,a5,2
80003650:	0007c703          	lbu	a4,0(a5)
80003654:	05800793          	li	a5,88
80003658:	00f71663          	bne	a4,a5,80003664 <AIcheck_winner+0x120>
	{
	    return 1;
8000365c:	00100793          	li	a5,1
80003660:	3280006f          	j	80003988 <AIcheck_winner+0x444>
	}
	else if (board[3] == 'X' && board[4] == 'X' && board[5] == 'X')
80003664:	fec42783          	lw	a5,-20(s0)
80003668:	00378793          	addi	a5,a5,3
8000366c:	0007c703          	lbu	a4,0(a5)
80003670:	05800793          	li	a5,88
80003674:	02f71a63          	bne	a4,a5,800036a8 <AIcheck_winner+0x164>
80003678:	fec42783          	lw	a5,-20(s0)
8000367c:	00478793          	addi	a5,a5,4
80003680:	0007c703          	lbu	a4,0(a5)
80003684:	05800793          	li	a5,88
80003688:	02f71063          	bne	a4,a5,800036a8 <AIcheck_winner+0x164>
8000368c:	fec42783          	lw	a5,-20(s0)
80003690:	00578793          	addi	a5,a5,5
80003694:	0007c703          	lbu	a4,0(a5)
80003698:	05800793          	li	a5,88
8000369c:	00f71663          	bne	a4,a5,800036a8 <AIcheck_winner+0x164>
	{
	    return 1;
800036a0:	00100793          	li	a5,1
800036a4:	2e40006f          	j	80003988 <AIcheck_winner+0x444>
	}
	else if (board[6] == 'X' && board[7] == 'X' && board[8] == 'X')
800036a8:	fec42783          	lw	a5,-20(s0)
800036ac:	00678793          	addi	a5,a5,6
800036b0:	0007c703          	lbu	a4,0(a5)
800036b4:	05800793          	li	a5,88
800036b8:	02f71a63          	bne	a4,a5,800036ec <AIcheck_winner+0x1a8>
800036bc:	fec42783          	lw	a5,-20(s0)
800036c0:	00778793          	addi	a5,a5,7
800036c4:	0007c703          	lbu	a4,0(a5)
800036c8:	05800793          	li	a5,88
800036cc:	02f71063          	bne	a4,a5,800036ec <AIcheck_winner+0x1a8>
800036d0:	fec42783          	lw	a5,-20(s0)
800036d4:	00878793          	addi	a5,a5,8
800036d8:	0007c703          	lbu	a4,0(a5)
800036dc:	05800793          	li	a5,88
800036e0:	00f71663          	bne	a4,a5,800036ec <AIcheck_winner+0x1a8>
	{
		return 1;
800036e4:	00100793          	li	a5,1
800036e8:	2a00006f          	j	80003988 <AIcheck_winner+0x444>
	}
	else if (board[0] == 'X' && board[4] == 'X' && board[8] == 'X')
800036ec:	fec42783          	lw	a5,-20(s0)
800036f0:	0007c703          	lbu	a4,0(a5)
800036f4:	05800793          	li	a5,88
800036f8:	02f71a63          	bne	a4,a5,8000372c <AIcheck_winner+0x1e8>
800036fc:	fec42783          	lw	a5,-20(s0)
80003700:	00478793          	addi	a5,a5,4
80003704:	0007c703          	lbu	a4,0(a5)
80003708:	05800793          	li	a5,88
8000370c:	02f71063          	bne	a4,a5,8000372c <AIcheck_winner+0x1e8>
80003710:	fec42783          	lw	a5,-20(s0)
80003714:	00878793          	addi	a5,a5,8
80003718:	0007c703          	lbu	a4,0(a5)
8000371c:	05800793          	li	a5,88
80003720:	00f71663          	bne	a4,a5,8000372c <AIcheck_winner+0x1e8>
	{
		return 1;
80003724:	00100793          	li	a5,1
80003728:	2600006f          	j	80003988 <AIcheck_winner+0x444>
	}
	else if (board[2] == 'X' && board[4] == 'X' && board[6] == 'X')
8000372c:	fec42783          	lw	a5,-20(s0)
80003730:	00278793          	addi	a5,a5,2
80003734:	0007c703          	lbu	a4,0(a5)
80003738:	05800793          	li	a5,88
8000373c:	02f71a63          	bne	a4,a5,80003770 <AIcheck_winner+0x22c>
80003740:	fec42783          	lw	a5,-20(s0)
80003744:	00478793          	addi	a5,a5,4
80003748:	0007c703          	lbu	a4,0(a5)
8000374c:	05800793          	li	a5,88
80003750:	02f71063          	bne	a4,a5,80003770 <AIcheck_winner+0x22c>
80003754:	fec42783          	lw	a5,-20(s0)
80003758:	00678793          	addi	a5,a5,6
8000375c:	0007c703          	lbu	a4,0(a5)
80003760:	05800793          	li	a5,88
80003764:	00f71663          	bne	a4,a5,80003770 <AIcheck_winner+0x22c>
	{
		return 1;
80003768:	00100793          	li	a5,1
8000376c:	21c0006f          	j	80003988 <AIcheck_winner+0x444>
	}
	else if (board[0] == 'O' && board[3] == 'O' && board[6] == 'O')
80003770:	fec42783          	lw	a5,-20(s0)
80003774:	0007c703          	lbu	a4,0(a5)
80003778:	04f00793          	li	a5,79
8000377c:	02f71a63          	bne	a4,a5,800037b0 <AIcheck_winner+0x26c>
80003780:	fec42783          	lw	a5,-20(s0)
80003784:	00378793          	addi	a5,a5,3
80003788:	0007c703          	lbu	a4,0(a5)
8000378c:	04f00793          	li	a5,79
80003790:	02f71063          	bne	a4,a5,800037b0 <AIcheck_winner+0x26c>
80003794:	fec42783          	lw	a5,-20(s0)
80003798:	00678793          	addi	a5,a5,6
8000379c:	0007c703          	lbu	a4,0(a5)
800037a0:	04f00793          	li	a5,79
800037a4:	00f71663          	bne	a4,a5,800037b0 <AIcheck_winner+0x26c>
	{
		return 1;
800037a8:	00100793          	li	a5,1
800037ac:	1dc0006f          	j	80003988 <AIcheck_winner+0x444>
	}
	else if (board[1] == 'O' && board[4] == 'O' && board[7] == 'O')
800037b0:	fec42783          	lw	a5,-20(s0)
800037b4:	00178793          	addi	a5,a5,1
800037b8:	0007c703          	lbu	a4,0(a5)
800037bc:	04f00793          	li	a5,79
800037c0:	02f71a63          	bne	a4,a5,800037f4 <AIcheck_winner+0x2b0>
800037c4:	fec42783          	lw	a5,-20(s0)
800037c8:	00478793          	addi	a5,a5,4
800037cc:	0007c703          	lbu	a4,0(a5)
800037d0:	04f00793          	li	a5,79
800037d4:	02f71063          	bne	a4,a5,800037f4 <AIcheck_winner+0x2b0>
800037d8:	fec42783          	lw	a5,-20(s0)
800037dc:	00778793          	addi	a5,a5,7
800037e0:	0007c703          	lbu	a4,0(a5)
800037e4:	04f00793          	li	a5,79
800037e8:	00f71663          	bne	a4,a5,800037f4 <AIcheck_winner+0x2b0>
	{
		return 1;
800037ec:	00100793          	li	a5,1
800037f0:	1980006f          	j	80003988 <AIcheck_winner+0x444>
	}
	else if (board[2] == 'O' && board[5] == 'O' && board[8] == 'O')
800037f4:	fec42783          	lw	a5,-20(s0)
800037f8:	00278793          	addi	a5,a5,2
800037fc:	0007c703          	lbu	a4,0(a5)
80003800:	04f00793          	li	a5,79
80003804:	02f71a63          	bne	a4,a5,80003838 <AIcheck_winner+0x2f4>
80003808:	fec42783          	lw	a5,-20(s0)
8000380c:	00578793          	addi	a5,a5,5
80003810:	0007c703          	lbu	a4,0(a5)
80003814:	04f00793          	li	a5,79
80003818:	02f71063          	bne	a4,a5,80003838 <AIcheck_winner+0x2f4>
8000381c:	fec42783          	lw	a5,-20(s0)
80003820:	00878793          	addi	a5,a5,8
80003824:	0007c703          	lbu	a4,0(a5)
80003828:	04f00793          	li	a5,79
8000382c:	00f71663          	bne	a4,a5,80003838 <AIcheck_winner+0x2f4>
	{
		return 1;
80003830:	00100793          	li	a5,1
80003834:	1540006f          	j	80003988 <AIcheck_winner+0x444>
	}
	else if (board[0] == 'O' && board[1] == 'O' && board[2] == 'O')
80003838:	fec42783          	lw	a5,-20(s0)
8000383c:	0007c703          	lbu	a4,0(a5)
80003840:	04f00793          	li	a5,79
80003844:	02f71a63          	bne	a4,a5,80003878 <AIcheck_winner+0x334>
80003848:	fec42783          	lw	a5,-20(s0)
8000384c:	00178793          	addi	a5,a5,1
80003850:	0007c703          	lbu	a4,0(a5)
80003854:	04f00793          	li	a5,79
80003858:	02f71063          	bne	a4,a5,80003878 <AIcheck_winner+0x334>
8000385c:	fec42783          	lw	a5,-20(s0)
80003860:	00278793          	addi	a5,a5,2
80003864:	0007c703          	lbu	a4,0(a5)
80003868:	04f00793          	li	a5,79
8000386c:	00f71663          	bne	a4,a5,80003878 <AIcheck_winner+0x334>
	{
		return 1;
80003870:	00100793          	li	a5,1
80003874:	1140006f          	j	80003988 <AIcheck_winner+0x444>
	}
	else if (board[3] == 'O' && board[4] == 'O' && board[5] == 'O')
80003878:	fec42783          	lw	a5,-20(s0)
8000387c:	00378793          	addi	a5,a5,3
80003880:	0007c703          	lbu	a4,0(a5)
80003884:	04f00793          	li	a5,79
80003888:	02f71a63          	bne	a4,a5,800038bc <AIcheck_winner+0x378>
8000388c:	fec42783          	lw	a5,-20(s0)
80003890:	00478793          	addi	a5,a5,4
80003894:	0007c703          	lbu	a4,0(a5)
80003898:	04f00793          	li	a5,79
8000389c:	02f71063          	bne	a4,a5,800038bc <AIcheck_winner+0x378>
800038a0:	fec42783          	lw	a5,-20(s0)
800038a4:	00578793          	addi	a5,a5,5
800038a8:	0007c703          	lbu	a4,0(a5)
800038ac:	04f00793          	li	a5,79
800038b0:	00f71663          	bne	a4,a5,800038bc <AIcheck_winner+0x378>
	{
		return 1;
800038b4:	00100793          	li	a5,1
800038b8:	0d00006f          	j	80003988 <AIcheck_winner+0x444>
	}
	else if (board[6] == 'O' && board[7] == 'O' && board[8] == 'O')
800038bc:	fec42783          	lw	a5,-20(s0)
800038c0:	00678793          	addi	a5,a5,6
800038c4:	0007c703          	lbu	a4,0(a5)
800038c8:	04f00793          	li	a5,79
800038cc:	02f71a63          	bne	a4,a5,80003900 <AIcheck_winner+0x3bc>
800038d0:	fec42783          	lw	a5,-20(s0)
800038d4:	00778793          	addi	a5,a5,7
800038d8:	0007c703          	lbu	a4,0(a5)
800038dc:	04f00793          	li	a5,79
800038e0:	02f71063          	bne	a4,a5,80003900 <AIcheck_winner+0x3bc>
800038e4:	fec42783          	lw	a5,-20(s0)
800038e8:	00878793          	addi	a5,a5,8
800038ec:	0007c703          	lbu	a4,0(a5)
800038f0:	04f00793          	li	a5,79
800038f4:	00f71663          	bne	a4,a5,80003900 <AIcheck_winner+0x3bc>
	{
		return 1;
800038f8:	00100793          	li	a5,1
800038fc:	08c0006f          	j	80003988 <AIcheck_winner+0x444>
	}
	else if (board[0] == 'O' && board[4] == 'O' && board[8] == 'O')
80003900:	fec42783          	lw	a5,-20(s0)
80003904:	0007c703          	lbu	a4,0(a5)
80003908:	04f00793          	li	a5,79
8000390c:	02f71a63          	bne	a4,a5,80003940 <AIcheck_winner+0x3fc>
80003910:	fec42783          	lw	a5,-20(s0)
80003914:	00478793          	addi	a5,a5,4
80003918:	0007c703          	lbu	a4,0(a5)
8000391c:	04f00793          	li	a5,79
80003920:	02f71063          	bne	a4,a5,80003940 <AIcheck_winner+0x3fc>
80003924:	fec42783          	lw	a5,-20(s0)
80003928:	00878793          	addi	a5,a5,8
8000392c:	0007c703          	lbu	a4,0(a5)
80003930:	04f00793          	li	a5,79
80003934:	00f71663          	bne	a4,a5,80003940 <AIcheck_winner+0x3fc>
	{
		return 1;
80003938:	00100793          	li	a5,1
8000393c:	04c0006f          	j	80003988 <AIcheck_winner+0x444>
	}
	else if (board[2] == 'O' && board[4] == 'O' && board[6] == 'O')
80003940:	fec42783          	lw	a5,-20(s0)
80003944:	00278793          	addi	a5,a5,2
80003948:	0007c703          	lbu	a4,0(a5)
8000394c:	04f00793          	li	a5,79
80003950:	02f71a63          	bne	a4,a5,80003984 <AIcheck_winner+0x440>
80003954:	fec42783          	lw	a5,-20(s0)
80003958:	00478793          	addi	a5,a5,4
8000395c:	0007c703          	lbu	a4,0(a5)
80003960:	04f00793          	li	a5,79
80003964:	02f71063          	bne	a4,a5,80003984 <AIcheck_winner+0x440>
80003968:	fec42783          	lw	a5,-20(s0)
8000396c:	00678793          	addi	a5,a5,6
80003970:	0007c703          	lbu	a4,0(a5)
80003974:	04f00793          	li	a5,79
80003978:	00f71663          	bne	a4,a5,80003984 <AIcheck_winner+0x440>
	{
		return 1;
8000397c:	00100793          	li	a5,1
80003980:	0080006f          	j	80003988 <AIcheck_winner+0x444>
	}

return 0;
80003984:	00000793          	li	a5,0
}
80003988:	00078513          	mv	a0,a5
8000398c:	01c12403          	lw	s0,28(sp)
80003990:	02010113          	addi	sp,sp,32
80003994:	00008067          	ret

80003998 <TS_begin>:
	uint16_t versionNumber;
    versionNumber = TS_readRegister8( this_spi, this_gpio , 0);
	versionNumber <<= 8;
	versionNumber |= TS_readRegister8( this_spi, this_gpio , 1);
	return versionNumber;
}
80003998:	fd010113          	addi	sp,sp,-48
8000399c:	02112623          	sw	ra,44(sp)
800039a0:	02812423          	sw	s0,40(sp)
800039a4:	03010413          	addi	s0,sp,48
800039a8:	fca42e23          	sw	a0,-36(s0)
800039ac:	fcb42c23          	sw	a1,-40(s0)
800039b0:	00200693          	li	a3,2
800039b4:	00300613          	li	a2,3
800039b8:	fd842583          	lw	a1,-40(s0)
800039bc:	fdc42503          	lw	a0,-36(s0)
800039c0:	288000ef          	jal	ra,80003c48 <TS_writeRegister8>
800039c4:	fe042423          	sw	zero,-24(s0)
800039c8:	0100006f          	j	800039d8 <TS_begin+0x40>
800039cc:	fe842783          	lw	a5,-24(s0)
800039d0:	00178793          	addi	a5,a5,1
800039d4:	fef42423          	sw	a5,-24(s0)
800039d8:	fe842703          	lw	a4,-24(s0)
800039dc:	000017b7          	lui	a5,0x1
800039e0:	ffe78793          	addi	a5,a5,-2 # ffe <HEAP_SIZE+0x7fe>
800039e4:	fee7f4e3          	bleu	a4,a5,800039cc <TS_begin+0x34>
800039e8:	fe0407a3          	sb	zero,-17(s0)
800039ec:	0240006f          	j	80003a10 <TS_begin+0x78>
800039f0:	fef44783          	lbu	a5,-17(s0)
800039f4:	00078613          	mv	a2,a5
800039f8:	fd842583          	lw	a1,-40(s0)
800039fc:	fdc42503          	lw	a0,-36(s0)
80003a00:	1a0000ef          	jal	ra,80003ba0 <TS_readRegister8>
80003a04:	fef44783          	lbu	a5,-17(s0)
80003a08:	00178793          	addi	a5,a5,1
80003a0c:	fef407a3          	sb	a5,-17(s0)
80003a10:	fef44703          	lbu	a4,-17(s0)
80003a14:	04000793          	li	a5,64
80003a18:	fce7fce3          	bleu	a4,a5,800039f0 <TS_begin+0x58>
80003a1c:	00000693          	li	a3,0
80003a20:	00400613          	li	a2,4
80003a24:	fd842583          	lw	a1,-40(s0)
80003a28:	fdc42503          	lw	a0,-36(s0)
80003a2c:	21c000ef          	jal	ra,80003c48 <TS_writeRegister8>
80003a30:	00100693          	li	a3,1
80003a34:	04000613          	li	a2,64
80003a38:	fd842583          	lw	a1,-40(s0)
80003a3c:	fdc42503          	lw	a0,-36(s0)
80003a40:	208000ef          	jal	ra,80003c48 <TS_writeRegister8>
80003a44:	04000613          	li	a2,64
80003a48:	fd842583          	lw	a1,-40(s0)
80003a4c:	fdc42503          	lw	a0,-36(s0)
80003a50:	150000ef          	jal	ra,80003ba0 <TS_readRegister8>
80003a54:	00100693          	li	a3,1
80003a58:	00a00613          	li	a2,10
80003a5c:	fd842583          	lw	a1,-40(s0)
80003a60:	fdc42503          	lw	a0,-36(s0)
80003a64:	1e4000ef          	jal	ra,80003c48 <TS_writeRegister8>
80003a68:	06000693          	li	a3,96
80003a6c:	02000613          	li	a2,32
80003a70:	fd842583          	lw	a1,-40(s0)
80003a74:	fdc42503          	lw	a0,-36(s0)
80003a78:	1d0000ef          	jal	ra,80003c48 <TS_writeRegister8>
80003a7c:	00200693          	li	a3,2
80003a80:	02100613          	li	a2,33
80003a84:	fd842583          	lw	a1,-40(s0)
80003a88:	fdc42503          	lw	a0,-36(s0)
80003a8c:	1bc000ef          	jal	ra,80003c48 <TS_writeRegister8>
80003a90:	0a400693          	li	a3,164
80003a94:	04100613          	li	a2,65
80003a98:	fd842583          	lw	a1,-40(s0)
80003a9c:	fdc42503          	lw	a0,-36(s0)
80003aa0:	1a8000ef          	jal	ra,80003c48 <TS_writeRegister8>
80003aa4:	00600693          	li	a3,6
80003aa8:	05600613          	li	a2,86
80003aac:	fd842583          	lw	a1,-40(s0)
80003ab0:	fdc42503          	lw	a0,-36(s0)
80003ab4:	194000ef          	jal	ra,80003c48 <TS_writeRegister8>
80003ab8:	00100693          	li	a3,1
80003abc:	04a00613          	li	a2,74
80003ac0:	fd842583          	lw	a1,-40(s0)
80003ac4:	fdc42503          	lw	a0,-36(s0)
80003ac8:	180000ef          	jal	ra,80003c48 <TS_writeRegister8>
80003acc:	00100693          	li	a3,1
80003ad0:	04b00613          	li	a2,75
80003ad4:	fd842583          	lw	a1,-40(s0)
80003ad8:	fdc42503          	lw	a0,-36(s0)
80003adc:	16c000ef          	jal	ra,80003c48 <TS_writeRegister8>
80003ae0:	00000693          	li	a3,0
80003ae4:	04b00613          	li	a2,75
80003ae8:	fd842583          	lw	a1,-40(s0)
80003aec:	fdc42503          	lw	a0,-36(s0)
80003af0:	158000ef          	jal	ra,80003c48 <TS_writeRegister8>
80003af4:	00000693          	li	a3,0
80003af8:	05800613          	li	a2,88
80003afc:	fd842583          	lw	a1,-40(s0)
80003b00:	fdc42503          	lw	a0,-36(s0)
80003b04:	144000ef          	jal	ra,80003c48 <TS_writeRegister8>
80003b08:	0ff00693          	li	a3,255
80003b0c:	00b00613          	li	a2,11
80003b10:	fd842583          	lw	a1,-40(s0)
80003b14:	fdc42503          	lw	a0,-36(s0)
80003b18:	130000ef          	jal	ra,80003c48 <TS_writeRegister8>
80003b1c:	00500693          	li	a3,5
80003b20:	00900613          	li	a2,9
80003b24:	fd842583          	lw	a1,-40(s0)
80003b28:	fdc42503          	lw	a0,-36(s0)
80003b2c:	11c000ef          	jal	ra,80003c48 <TS_writeRegister8>
80003b30:	00000013          	nop
80003b34:	02c12083          	lw	ra,44(sp)
80003b38:	02812403          	lw	s0,40(sp)
80003b3c:	03010113          	addi	sp,sp,48
80003b40:	00008067          	ret

80003b44 <TS_write>:
80003b44:	fe010113          	addi	sp,sp,-32
80003b48:	00112e23          	sw	ra,28(sp)
80003b4c:	00812c23          	sw	s0,24(sp)
80003b50:	02010413          	addi	s0,sp,32
80003b54:	fea42623          	sw	a0,-20(s0)
80003b58:	00058793          	mv	a5,a1
80003b5c:	fec42223          	sw	a2,-28(s0)
80003b60:	fef405a3          	sb	a5,-21(s0)
80003b64:	00100593          	li	a1,1
80003b68:	fec42503          	lw	a0,-20(s0)
80003b6c:	ba4fd0ef          	jal	ra,80000f10 <SPI_set_slave_select>
80003b70:	feb44783          	lbu	a5,-21(s0)
80003b74:	00078593          	mv	a1,a5
80003b78:	fec42503          	lw	a0,-20(s0)
80003b7c:	d58fd0ef          	jal	ra,800010d4 <SPI_transfer_frame>
80003b80:	00100593          	li	a1,1
80003b84:	fec42503          	lw	a0,-20(s0)
80003b88:	c68fd0ef          	jal	ra,80000ff0 <SPI_clear_slave_select>
80003b8c:	00000013          	nop
80003b90:	01c12083          	lw	ra,28(sp)
80003b94:	01812403          	lw	s0,24(sp)
80003b98:	02010113          	addi	sp,sp,32
80003b9c:	00008067          	ret

80003ba0 <TS_readRegister8>:
80003ba0:	fd010113          	addi	sp,sp,-48
80003ba4:	02112623          	sw	ra,44(sp)
80003ba8:	02812423          	sw	s0,40(sp)
80003bac:	03010413          	addi	s0,sp,48
80003bb0:	fca42e23          	sw	a0,-36(s0)
80003bb4:	fcb42c23          	sw	a1,-40(s0)
80003bb8:	00060793          	mv	a5,a2
80003bbc:	fcf40ba3          	sb	a5,-41(s0)
80003bc0:	fe0407a3          	sb	zero,-17(s0)
80003bc4:	00000613          	li	a2,0
80003bc8:	00500593          	li	a1,5
80003bcc:	fd842503          	lw	a0,-40(s0)
80003bd0:	b0dfd0ef          	jal	ra,800016dc <GPIO_set_output>
80003bd4:	00100593          	li	a1,1
80003bd8:	fdc42503          	lw	a0,-36(s0)
80003bdc:	b34fd0ef          	jal	ra,80000f10 <SPI_set_slave_select>
80003be0:	fd744783          	lbu	a5,-41(s0)
80003be4:	f807e793          	ori	a5,a5,-128
80003be8:	0ff7f793          	andi	a5,a5,255
80003bec:	00078593          	mv	a1,a5
80003bf0:	fdc42503          	lw	a0,-36(s0)
80003bf4:	ce0fd0ef          	jal	ra,800010d4 <SPI_transfer_frame>
80003bf8:	00050793          	mv	a5,a0
80003bfc:	fef407a3          	sb	a5,-17(s0)
80003c00:	00000593          	li	a1,0
80003c04:	fdc42503          	lw	a0,-36(s0)
80003c08:	cccfd0ef          	jal	ra,800010d4 <SPI_transfer_frame>
80003c0c:	00050793          	mv	a5,a0
80003c10:	fef407a3          	sb	a5,-17(s0)
80003c14:	00100593          	li	a1,1
80003c18:	fdc42503          	lw	a0,-36(s0)
80003c1c:	bd4fd0ef          	jal	ra,80000ff0 <SPI_clear_slave_select>
80003c20:	00100613          	li	a2,1
80003c24:	00500593          	li	a1,5
80003c28:	fd842503          	lw	a0,-40(s0)
80003c2c:	ab1fd0ef          	jal	ra,800016dc <GPIO_set_output>
80003c30:	fef44783          	lbu	a5,-17(s0)
80003c34:	00078513          	mv	a0,a5
80003c38:	02c12083          	lw	ra,44(sp)
80003c3c:	02812403          	lw	s0,40(sp)
80003c40:	03010113          	addi	sp,sp,48
80003c44:	00008067          	ret

80003c48 <TS_writeRegister8>:
80003c48:	fe010113          	addi	sp,sp,-32
80003c4c:	00112e23          	sw	ra,28(sp)
80003c50:	00812c23          	sw	s0,24(sp)
80003c54:	02010413          	addi	s0,sp,32
80003c58:	fea42623          	sw	a0,-20(s0)
80003c5c:	feb42423          	sw	a1,-24(s0)
80003c60:	00060793          	mv	a5,a2
80003c64:	00068713          	mv	a4,a3
80003c68:	fef403a3          	sb	a5,-25(s0)
80003c6c:	00070793          	mv	a5,a4
80003c70:	fef40323          	sb	a5,-26(s0)
80003c74:	00000613          	li	a2,0
80003c78:	00500593          	li	a1,5
80003c7c:	fe842503          	lw	a0,-24(s0)
80003c80:	a5dfd0ef          	jal	ra,800016dc <GPIO_set_output>
80003c84:	fe744783          	lbu	a5,-25(s0)
80003c88:	fe842603          	lw	a2,-24(s0)
80003c8c:	00078593          	mv	a1,a5
80003c90:	fec42503          	lw	a0,-20(s0)
80003c94:	eb1ff0ef          	jal	ra,80003b44 <TS_write>
80003c98:	fe644783          	lbu	a5,-26(s0)
80003c9c:	fe842603          	lw	a2,-24(s0)
80003ca0:	00078593          	mv	a1,a5
80003ca4:	fec42503          	lw	a0,-20(s0)
80003ca8:	e9dff0ef          	jal	ra,80003b44 <TS_write>
80003cac:	00100613          	li	a2,1
80003cb0:	00500593          	li	a1,5
80003cb4:	fe842503          	lw	a0,-24(s0)
80003cb8:	a25fd0ef          	jal	ra,800016dc <GPIO_set_output>
80003cbc:	00000013          	nop
80003cc0:	01c12083          	lw	ra,28(sp)
80003cc4:	01812403          	lw	s0,24(sp)
80003cc8:	02010113          	addi	sp,sp,32
80003ccc:	00008067          	ret

80003cd0 <TS_readData>:
	gpio_instance_t * this_gpio,
	uint16_t *x,
	uint16_t *y,
	uint8_t *z
)
{
80003cd0:	fc010113          	addi	sp,sp,-64
80003cd4:	02112e23          	sw	ra,60(sp)
80003cd8:	02812c23          	sw	s0,56(sp)
80003cdc:	02912a23          	sw	s1,52(sp)
80003ce0:	04010413          	addi	s0,sp,64
80003ce4:	fca42e23          	sw	a0,-36(s0)
80003ce8:	fcb42c23          	sw	a1,-40(s0)
80003cec:	fcc42a23          	sw	a2,-44(s0)
80003cf0:	fcd42823          	sw	a3,-48(s0)
80003cf4:	fce42623          	sw	a4,-52(s0)
	uint8_t data[4];
	for (uint8_t loop=0;loop<4;loop++)
80003cf8:	fe0407a3          	sb	zero,-17(s0)
80003cfc:	0380006f          	j	80003d34 <TS_readData+0x64>
	{
		data[loop]= TS_readRegister8 (this_spi, this_gpio, 0xD7);
80003d00:	fef44483          	lbu	s1,-17(s0)
80003d04:	0d700613          	li	a2,215
80003d08:	fd842583          	lw	a1,-40(s0)
80003d0c:	fdc42503          	lw	a0,-36(s0)
80003d10:	e91ff0ef          	jal	ra,80003ba0 <TS_readRegister8>
80003d14:	00050793          	mv	a5,a0
80003d18:	00078713          	mv	a4,a5
80003d1c:	ff040793          	addi	a5,s0,-16
80003d20:	009787b3          	add	a5,a5,s1
80003d24:	fee78c23          	sb	a4,-8(a5)
	for (uint8_t loop=0;loop<4;loop++)
80003d28:	fef44783          	lbu	a5,-17(s0)
80003d2c:	00178793          	addi	a5,a5,1
80003d30:	fef407a3          	sb	a5,-17(s0)
80003d34:	fef44703          	lbu	a4,-17(s0)
80003d38:	00300793          	li	a5,3
80003d3c:	fce7f2e3          	bleu	a4,a5,80003d00 <TS_readData+0x30>
	}
	*x= data[0];
80003d40:	fe844783          	lbu	a5,-24(s0)
80003d44:	01079713          	slli	a4,a5,0x10
80003d48:	01075713          	srli	a4,a4,0x10
80003d4c:	fd442783          	lw	a5,-44(s0)
80003d50:	00e79023          	sh	a4,0(a5)
	*x <<= 4;
80003d54:	fd442783          	lw	a5,-44(s0)
80003d58:	0007d783          	lhu	a5,0(a5)
80003d5c:	00479793          	slli	a5,a5,0x4
80003d60:	01079713          	slli	a4,a5,0x10
80003d64:	01075713          	srli	a4,a4,0x10
80003d68:	fd442783          	lw	a5,-44(s0)
80003d6c:	00e79023          	sh	a4,0(a5)
	*x |= (data[1] >> 4);
80003d70:	fd442783          	lw	a5,-44(s0)
80003d74:	0007d703          	lhu	a4,0(a5)
80003d78:	fe944783          	lbu	a5,-23(s0)
80003d7c:	0047d793          	srli	a5,a5,0x4
80003d80:	0ff7f793          	andi	a5,a5,255
80003d84:	01079793          	slli	a5,a5,0x10
80003d88:	0107d793          	srli	a5,a5,0x10
80003d8c:	00f767b3          	or	a5,a4,a5
80003d90:	01079713          	slli	a4,a5,0x10
80003d94:	01075713          	srli	a4,a4,0x10
80003d98:	fd442783          	lw	a5,-44(s0)
80003d9c:	00e79023          	sh	a4,0(a5)
	*y = data[1] & 0x0F;
80003da0:	fe944783          	lbu	a5,-23(s0)
80003da4:	01079793          	slli	a5,a5,0x10
80003da8:	0107d793          	srli	a5,a5,0x10
80003dac:	00f7f793          	andi	a5,a5,15
80003db0:	01079713          	slli	a4,a5,0x10
80003db4:	01075713          	srli	a4,a4,0x10
80003db8:	fd042783          	lw	a5,-48(s0)
80003dbc:	00e79023          	sh	a4,0(a5)
	*y <<= 8;
80003dc0:	fd042783          	lw	a5,-48(s0)
80003dc4:	0007d783          	lhu	a5,0(a5)
80003dc8:	00879793          	slli	a5,a5,0x8
80003dcc:	01079713          	slli	a4,a5,0x10
80003dd0:	01075713          	srli	a4,a4,0x10
80003dd4:	fd042783          	lw	a5,-48(s0)
80003dd8:	00e79023          	sh	a4,0(a5)
	*y |= data[2];
80003ddc:	fd042783          	lw	a5,-48(s0)
80003de0:	0007d703          	lhu	a4,0(a5)
80003de4:	fea44783          	lbu	a5,-22(s0)
80003de8:	01079793          	slli	a5,a5,0x10
80003dec:	0107d793          	srli	a5,a5,0x10
80003df0:	00f767b3          	or	a5,a4,a5
80003df4:	01079713          	slli	a4,a5,0x10
80003df8:	01075713          	srli	a4,a4,0x10
80003dfc:	fd042783          	lw	a5,-48(s0)
80003e00:	00e79023          	sh	a4,0(a5)
	*z = data[3];
80003e04:	feb44703          	lbu	a4,-21(s0)
80003e08:	fcc42783          	lw	a5,-52(s0)
80003e0c:	00e78023          	sb	a4,0(a5)
	if( TS_readRegister8(this_spi, this_gpio,STMPE_FIFO_STA)& STMPE_FIFO_STA_EMPTY) // buffer empty?
80003e10:	04b00613          	li	a2,75
80003e14:	fd842583          	lw	a1,-40(s0)
80003e18:	fdc42503          	lw	a0,-36(s0)
80003e1c:	d85ff0ef          	jal	ra,80003ba0 <TS_readRegister8>
80003e20:	00050793          	mv	a5,a0
80003e24:	0207f793          	andi	a5,a5,32
80003e28:	00078c63          	beqz	a5,80003e40 <TS_readData+0x170>
	{
		TS_writeRegister8(this_spi, this_gpio,STMPE_INT_STA, 0xFF);
80003e2c:	0ff00693          	li	a3,255
80003e30:	00b00613          	li	a2,11
80003e34:	fd842583          	lw	a1,-40(s0)
80003e38:	fdc42503          	lw	a0,-36(s0)
80003e3c:	e0dff0ef          	jal	ra,80003c48 <TS_writeRegister8>
	}
}
80003e40:	00000013          	nop
80003e44:	03c12083          	lw	ra,60(sp)
80003e48:	03812403          	lw	s0,56(sp)
80003e4c:	03412483          	lw	s1,52(sp)
80003e50:	04010113          	addi	sp,sp,64
80003e54:	00008067          	ret

80003e58 <TFT_spiwrite>:
    master_rx = SPI_transfer_frame( this_spi, 0x00 );
    master_rx = SPI_transfer_frame( this_spi, 0x00 );
    SPI_clear_slave_select( this_spi, SPI_SLAVE_0 );
    //GPIO_set_output( this_gpio, GPIO_5, 1 ); // Chip Select Signal
    return master_rx;
}
80003e58:	fe010113          	addi	sp,sp,-32
80003e5c:	00112e23          	sw	ra,28(sp)
80003e60:	00812c23          	sw	s0,24(sp)
80003e64:	02010413          	addi	s0,sp,32
80003e68:	fea42623          	sw	a0,-20(s0)
80003e6c:	00058793          	mv	a5,a1
80003e70:	fef405a3          	sb	a5,-21(s0)
80003e74:	00000593          	li	a1,0
80003e78:	fec42503          	lw	a0,-20(s0)
80003e7c:	894fd0ef          	jal	ra,80000f10 <SPI_set_slave_select>
80003e80:	feb44783          	lbu	a5,-21(s0)
80003e84:	00078593          	mv	a1,a5
80003e88:	fec42503          	lw	a0,-20(s0)
80003e8c:	a48fd0ef          	jal	ra,800010d4 <SPI_transfer_frame>
80003e90:	00000593          	li	a1,0
80003e94:	fec42503          	lw	a0,-20(s0)
80003e98:	958fd0ef          	jal	ra,80000ff0 <SPI_clear_slave_select>
80003e9c:	00000013          	nop
80003ea0:	01c12083          	lw	ra,28(sp)
80003ea4:	01812403          	lw	s0,24(sp)
80003ea8:	02010113          	addi	sp,sp,32
80003eac:	00008067          	ret

80003eb0 <TFT_begin>:
80003eb0:	fd010113          	addi	sp,sp,-48
80003eb4:	02112623          	sw	ra,44(sp)
80003eb8:	02812423          	sw	s0,40(sp)
80003ebc:	03010413          	addi	s0,sp,48
80003ec0:	fca42e23          	sw	a0,-36(s0)
80003ec4:	fcb42c23          	sw	a1,-40(s0)
80003ec8:	00000613          	li	a2,0
80003ecc:	00600593          	li	a1,6
80003ed0:	fd842503          	lw	a0,-40(s0)
80003ed4:	809fd0ef          	jal	ra,800016dc <GPIO_set_output>
80003ed8:	fe041723          	sh	zero,-18(s0)
80003edc:	0200006f          	j	80003efc <TFT_begin+0x4c>
80003ee0:	fee45783          	lhu	a5,-18(s0)
80003ee4:	01079793          	slli	a5,a5,0x10
80003ee8:	0107d793          	srli	a5,a5,0x10
80003eec:	00178793          	addi	a5,a5,1
80003ef0:	01079793          	slli	a5,a5,0x10
80003ef4:	0107d793          	srli	a5,a5,0x10
80003ef8:	fef41723          	sh	a5,-18(s0)
80003efc:	fee45783          	lhu	a5,-18(s0)
80003f00:	01079713          	slli	a4,a5,0x10
80003f04:	01075713          	srli	a4,a4,0x10
80003f08:	000017b7          	lui	a5,0x1
80003f0c:	ffe78793          	addi	a5,a5,-2 # ffe <HEAP_SIZE+0x7fe>
80003f10:	fce7f8e3          	bleu	a4,a5,80003ee0 <TFT_begin+0x30>
80003f14:	00100613          	li	a2,1
80003f18:	00600593          	li	a1,6
80003f1c:	fd842503          	lw	a0,-40(s0)
80003f20:	fbcfd0ef          	jal	ra,800016dc <GPIO_set_output>
80003f24:	fe041623          	sh	zero,-20(s0)
80003f28:	0200006f          	j	80003f48 <TFT_begin+0x98>
80003f2c:	fec45783          	lhu	a5,-20(s0)
80003f30:	01079793          	slli	a5,a5,0x10
80003f34:	0107d793          	srli	a5,a5,0x10
80003f38:	00178793          	addi	a5,a5,1
80003f3c:	01079793          	slli	a5,a5,0x10
80003f40:	0107d793          	srli	a5,a5,0x10
80003f44:	fef41623          	sh	a5,-20(s0)
80003f48:	fec45783          	lhu	a5,-20(s0)
80003f4c:	01079713          	slli	a4,a5,0x10
80003f50:	01075713          	srli	a4,a4,0x10
80003f54:	000017b7          	lui	a5,0x1
80003f58:	ffe78793          	addi	a5,a5,-2 # ffe <HEAP_SIZE+0x7fe>
80003f5c:	fce7f8e3          	bleu	a4,a5,80003f2c <TFT_begin+0x7c>
80003f60:	fd842603          	lw	a2,-40(s0)
80003f64:	0ef00593          	li	a1,239
80003f68:	fdc42503          	lw	a0,-36(s0)
80003f6c:	5e0000ef          	jal	ra,8000454c <TFT_writecommand>
80003f70:	fd842603          	lw	a2,-40(s0)
80003f74:	00300593          	li	a1,3
80003f78:	fdc42503          	lw	a0,-36(s0)
80003f7c:	634000ef          	jal	ra,800045b0 <TFT_writedata>
80003f80:	fd842603          	lw	a2,-40(s0)
80003f84:	08000593          	li	a1,128
80003f88:	fdc42503          	lw	a0,-36(s0)
80003f8c:	624000ef          	jal	ra,800045b0 <TFT_writedata>
80003f90:	fd842603          	lw	a2,-40(s0)
80003f94:	00200593          	li	a1,2
80003f98:	fdc42503          	lw	a0,-36(s0)
80003f9c:	614000ef          	jal	ra,800045b0 <TFT_writedata>
80003fa0:	fd842603          	lw	a2,-40(s0)
80003fa4:	0cf00593          	li	a1,207
80003fa8:	fdc42503          	lw	a0,-36(s0)
80003fac:	5a0000ef          	jal	ra,8000454c <TFT_writecommand>
80003fb0:	fd842603          	lw	a2,-40(s0)
80003fb4:	00000593          	li	a1,0
80003fb8:	fdc42503          	lw	a0,-36(s0)
80003fbc:	5f4000ef          	jal	ra,800045b0 <TFT_writedata>
80003fc0:	fd842603          	lw	a2,-40(s0)
80003fc4:	0c100593          	li	a1,193
80003fc8:	fdc42503          	lw	a0,-36(s0)
80003fcc:	5e4000ef          	jal	ra,800045b0 <TFT_writedata>
80003fd0:	fd842603          	lw	a2,-40(s0)
80003fd4:	03000593          	li	a1,48
80003fd8:	fdc42503          	lw	a0,-36(s0)
80003fdc:	5d4000ef          	jal	ra,800045b0 <TFT_writedata>
80003fe0:	fd842603          	lw	a2,-40(s0)
80003fe4:	0ed00593          	li	a1,237
80003fe8:	fdc42503          	lw	a0,-36(s0)
80003fec:	560000ef          	jal	ra,8000454c <TFT_writecommand>
80003ff0:	fd842603          	lw	a2,-40(s0)
80003ff4:	06400593          	li	a1,100
80003ff8:	fdc42503          	lw	a0,-36(s0)
80003ffc:	5b4000ef          	jal	ra,800045b0 <TFT_writedata>
80004000:	fd842603          	lw	a2,-40(s0)
80004004:	00300593          	li	a1,3
80004008:	fdc42503          	lw	a0,-36(s0)
8000400c:	5a4000ef          	jal	ra,800045b0 <TFT_writedata>
80004010:	fd842603          	lw	a2,-40(s0)
80004014:	01200593          	li	a1,18
80004018:	fdc42503          	lw	a0,-36(s0)
8000401c:	594000ef          	jal	ra,800045b0 <TFT_writedata>
80004020:	fd842603          	lw	a2,-40(s0)
80004024:	08100593          	li	a1,129
80004028:	fdc42503          	lw	a0,-36(s0)
8000402c:	584000ef          	jal	ra,800045b0 <TFT_writedata>
80004030:	fd842603          	lw	a2,-40(s0)
80004034:	0e800593          	li	a1,232
80004038:	fdc42503          	lw	a0,-36(s0)
8000403c:	510000ef          	jal	ra,8000454c <TFT_writecommand>
80004040:	fd842603          	lw	a2,-40(s0)
80004044:	08500593          	li	a1,133
80004048:	fdc42503          	lw	a0,-36(s0)
8000404c:	564000ef          	jal	ra,800045b0 <TFT_writedata>
80004050:	fd842603          	lw	a2,-40(s0)
80004054:	00000593          	li	a1,0
80004058:	fdc42503          	lw	a0,-36(s0)
8000405c:	554000ef          	jal	ra,800045b0 <TFT_writedata>
80004060:	fd842603          	lw	a2,-40(s0)
80004064:	07800593          	li	a1,120
80004068:	fdc42503          	lw	a0,-36(s0)
8000406c:	544000ef          	jal	ra,800045b0 <TFT_writedata>
80004070:	fd842603          	lw	a2,-40(s0)
80004074:	0cb00593          	li	a1,203
80004078:	fdc42503          	lw	a0,-36(s0)
8000407c:	4d0000ef          	jal	ra,8000454c <TFT_writecommand>
80004080:	fd842603          	lw	a2,-40(s0)
80004084:	03900593          	li	a1,57
80004088:	fdc42503          	lw	a0,-36(s0)
8000408c:	524000ef          	jal	ra,800045b0 <TFT_writedata>
80004090:	fd842603          	lw	a2,-40(s0)
80004094:	02c00593          	li	a1,44
80004098:	fdc42503          	lw	a0,-36(s0)
8000409c:	514000ef          	jal	ra,800045b0 <TFT_writedata>
800040a0:	fd842603          	lw	a2,-40(s0)
800040a4:	00000593          	li	a1,0
800040a8:	fdc42503          	lw	a0,-36(s0)
800040ac:	504000ef          	jal	ra,800045b0 <TFT_writedata>
800040b0:	fd842603          	lw	a2,-40(s0)
800040b4:	03400593          	li	a1,52
800040b8:	fdc42503          	lw	a0,-36(s0)
800040bc:	4f4000ef          	jal	ra,800045b0 <TFT_writedata>
800040c0:	fd842603          	lw	a2,-40(s0)
800040c4:	00200593          	li	a1,2
800040c8:	fdc42503          	lw	a0,-36(s0)
800040cc:	4e4000ef          	jal	ra,800045b0 <TFT_writedata>
800040d0:	fd842603          	lw	a2,-40(s0)
800040d4:	0f700593          	li	a1,247
800040d8:	fdc42503          	lw	a0,-36(s0)
800040dc:	470000ef          	jal	ra,8000454c <TFT_writecommand>
800040e0:	fd842603          	lw	a2,-40(s0)
800040e4:	02000593          	li	a1,32
800040e8:	fdc42503          	lw	a0,-36(s0)
800040ec:	4c4000ef          	jal	ra,800045b0 <TFT_writedata>
800040f0:	fd842603          	lw	a2,-40(s0)
800040f4:	0ea00593          	li	a1,234
800040f8:	fdc42503          	lw	a0,-36(s0)
800040fc:	450000ef          	jal	ra,8000454c <TFT_writecommand>
80004100:	fd842603          	lw	a2,-40(s0)
80004104:	00000593          	li	a1,0
80004108:	fdc42503          	lw	a0,-36(s0)
8000410c:	4a4000ef          	jal	ra,800045b0 <TFT_writedata>
80004110:	fd842603          	lw	a2,-40(s0)
80004114:	00000593          	li	a1,0
80004118:	fdc42503          	lw	a0,-36(s0)
8000411c:	494000ef          	jal	ra,800045b0 <TFT_writedata>
80004120:	fd842603          	lw	a2,-40(s0)
80004124:	0c000593          	li	a1,192
80004128:	fdc42503          	lw	a0,-36(s0)
8000412c:	420000ef          	jal	ra,8000454c <TFT_writecommand>
80004130:	fd842603          	lw	a2,-40(s0)
80004134:	02300593          	li	a1,35
80004138:	fdc42503          	lw	a0,-36(s0)
8000413c:	474000ef          	jal	ra,800045b0 <TFT_writedata>
80004140:	fd842603          	lw	a2,-40(s0)
80004144:	0c100593          	li	a1,193
80004148:	fdc42503          	lw	a0,-36(s0)
8000414c:	400000ef          	jal	ra,8000454c <TFT_writecommand>
80004150:	fd842603          	lw	a2,-40(s0)
80004154:	01000593          	li	a1,16
80004158:	fdc42503          	lw	a0,-36(s0)
8000415c:	454000ef          	jal	ra,800045b0 <TFT_writedata>
80004160:	fd842603          	lw	a2,-40(s0)
80004164:	0c500593          	li	a1,197
80004168:	fdc42503          	lw	a0,-36(s0)
8000416c:	3e0000ef          	jal	ra,8000454c <TFT_writecommand>
80004170:	fd842603          	lw	a2,-40(s0)
80004174:	03e00593          	li	a1,62
80004178:	fdc42503          	lw	a0,-36(s0)
8000417c:	434000ef          	jal	ra,800045b0 <TFT_writedata>
80004180:	fd842603          	lw	a2,-40(s0)
80004184:	02800593          	li	a1,40
80004188:	fdc42503          	lw	a0,-36(s0)
8000418c:	424000ef          	jal	ra,800045b0 <TFT_writedata>
80004190:	fd842603          	lw	a2,-40(s0)
80004194:	0c700593          	li	a1,199
80004198:	fdc42503          	lw	a0,-36(s0)
8000419c:	3b0000ef          	jal	ra,8000454c <TFT_writecommand>
800041a0:	fd842603          	lw	a2,-40(s0)
800041a4:	08600593          	li	a1,134
800041a8:	fdc42503          	lw	a0,-36(s0)
800041ac:	404000ef          	jal	ra,800045b0 <TFT_writedata>
800041b0:	fd842603          	lw	a2,-40(s0)
800041b4:	03600593          	li	a1,54
800041b8:	fdc42503          	lw	a0,-36(s0)
800041bc:	390000ef          	jal	ra,8000454c <TFT_writecommand>
800041c0:	fd842603          	lw	a2,-40(s0)
800041c4:	04800593          	li	a1,72
800041c8:	fdc42503          	lw	a0,-36(s0)
800041cc:	3e4000ef          	jal	ra,800045b0 <TFT_writedata>
800041d0:	fd842603          	lw	a2,-40(s0)
800041d4:	03a00593          	li	a1,58
800041d8:	fdc42503          	lw	a0,-36(s0)
800041dc:	370000ef          	jal	ra,8000454c <TFT_writecommand>
800041e0:	fd842603          	lw	a2,-40(s0)
800041e4:	05500593          	li	a1,85
800041e8:	fdc42503          	lw	a0,-36(s0)
800041ec:	3c4000ef          	jal	ra,800045b0 <TFT_writedata>
800041f0:	fd842603          	lw	a2,-40(s0)
800041f4:	0b100593          	li	a1,177
800041f8:	fdc42503          	lw	a0,-36(s0)
800041fc:	350000ef          	jal	ra,8000454c <TFT_writecommand>
80004200:	fd842603          	lw	a2,-40(s0)
80004204:	00000593          	li	a1,0
80004208:	fdc42503          	lw	a0,-36(s0)
8000420c:	3a4000ef          	jal	ra,800045b0 <TFT_writedata>
80004210:	fd842603          	lw	a2,-40(s0)
80004214:	01800593          	li	a1,24
80004218:	fdc42503          	lw	a0,-36(s0)
8000421c:	394000ef          	jal	ra,800045b0 <TFT_writedata>
80004220:	fd842603          	lw	a2,-40(s0)
80004224:	0b600593          	li	a1,182
80004228:	fdc42503          	lw	a0,-36(s0)
8000422c:	320000ef          	jal	ra,8000454c <TFT_writecommand>
80004230:	fd842603          	lw	a2,-40(s0)
80004234:	00800593          	li	a1,8
80004238:	fdc42503          	lw	a0,-36(s0)
8000423c:	374000ef          	jal	ra,800045b0 <TFT_writedata>
80004240:	fd842603          	lw	a2,-40(s0)
80004244:	08200593          	li	a1,130
80004248:	fdc42503          	lw	a0,-36(s0)
8000424c:	364000ef          	jal	ra,800045b0 <TFT_writedata>
80004250:	fd842603          	lw	a2,-40(s0)
80004254:	02700593          	li	a1,39
80004258:	fdc42503          	lw	a0,-36(s0)
8000425c:	354000ef          	jal	ra,800045b0 <TFT_writedata>
80004260:	fd842603          	lw	a2,-40(s0)
80004264:	0f200593          	li	a1,242
80004268:	fdc42503          	lw	a0,-36(s0)
8000426c:	2e0000ef          	jal	ra,8000454c <TFT_writecommand>
80004270:	fd842603          	lw	a2,-40(s0)
80004274:	00000593          	li	a1,0
80004278:	fdc42503          	lw	a0,-36(s0)
8000427c:	334000ef          	jal	ra,800045b0 <TFT_writedata>
80004280:	fd842603          	lw	a2,-40(s0)
80004284:	02600593          	li	a1,38
80004288:	fdc42503          	lw	a0,-36(s0)
8000428c:	2c0000ef          	jal	ra,8000454c <TFT_writecommand>
80004290:	fd842603          	lw	a2,-40(s0)
80004294:	00100593          	li	a1,1
80004298:	fdc42503          	lw	a0,-36(s0)
8000429c:	314000ef          	jal	ra,800045b0 <TFT_writedata>
800042a0:	fd842603          	lw	a2,-40(s0)
800042a4:	0e000593          	li	a1,224
800042a8:	fdc42503          	lw	a0,-36(s0)
800042ac:	2a0000ef          	jal	ra,8000454c <TFT_writecommand>
800042b0:	fd842603          	lw	a2,-40(s0)
800042b4:	00f00593          	li	a1,15
800042b8:	fdc42503          	lw	a0,-36(s0)
800042bc:	2f4000ef          	jal	ra,800045b0 <TFT_writedata>
800042c0:	fd842603          	lw	a2,-40(s0)
800042c4:	03100593          	li	a1,49
800042c8:	fdc42503          	lw	a0,-36(s0)
800042cc:	2e4000ef          	jal	ra,800045b0 <TFT_writedata>
800042d0:	fd842603          	lw	a2,-40(s0)
800042d4:	02b00593          	li	a1,43
800042d8:	fdc42503          	lw	a0,-36(s0)
800042dc:	2d4000ef          	jal	ra,800045b0 <TFT_writedata>
800042e0:	fd842603          	lw	a2,-40(s0)
800042e4:	00c00593          	li	a1,12
800042e8:	fdc42503          	lw	a0,-36(s0)
800042ec:	2c4000ef          	jal	ra,800045b0 <TFT_writedata>
800042f0:	fd842603          	lw	a2,-40(s0)
800042f4:	00e00593          	li	a1,14
800042f8:	fdc42503          	lw	a0,-36(s0)
800042fc:	2b4000ef          	jal	ra,800045b0 <TFT_writedata>
80004300:	fd842603          	lw	a2,-40(s0)
80004304:	00800593          	li	a1,8
80004308:	fdc42503          	lw	a0,-36(s0)
8000430c:	2a4000ef          	jal	ra,800045b0 <TFT_writedata>
80004310:	fd842603          	lw	a2,-40(s0)
80004314:	04e00593          	li	a1,78
80004318:	fdc42503          	lw	a0,-36(s0)
8000431c:	294000ef          	jal	ra,800045b0 <TFT_writedata>
80004320:	fd842603          	lw	a2,-40(s0)
80004324:	0f100593          	li	a1,241
80004328:	fdc42503          	lw	a0,-36(s0)
8000432c:	284000ef          	jal	ra,800045b0 <TFT_writedata>
80004330:	fd842603          	lw	a2,-40(s0)
80004334:	03700593          	li	a1,55
80004338:	fdc42503          	lw	a0,-36(s0)
8000433c:	274000ef          	jal	ra,800045b0 <TFT_writedata>
80004340:	fd842603          	lw	a2,-40(s0)
80004344:	00700593          	li	a1,7
80004348:	fdc42503          	lw	a0,-36(s0)
8000434c:	264000ef          	jal	ra,800045b0 <TFT_writedata>
80004350:	fd842603          	lw	a2,-40(s0)
80004354:	01000593          	li	a1,16
80004358:	fdc42503          	lw	a0,-36(s0)
8000435c:	254000ef          	jal	ra,800045b0 <TFT_writedata>
80004360:	fd842603          	lw	a2,-40(s0)
80004364:	00300593          	li	a1,3
80004368:	fdc42503          	lw	a0,-36(s0)
8000436c:	244000ef          	jal	ra,800045b0 <TFT_writedata>
80004370:	fd842603          	lw	a2,-40(s0)
80004374:	00e00593          	li	a1,14
80004378:	fdc42503          	lw	a0,-36(s0)
8000437c:	234000ef          	jal	ra,800045b0 <TFT_writedata>
80004380:	fd842603          	lw	a2,-40(s0)
80004384:	00900593          	li	a1,9
80004388:	fdc42503          	lw	a0,-36(s0)
8000438c:	224000ef          	jal	ra,800045b0 <TFT_writedata>
80004390:	fd842603          	lw	a2,-40(s0)
80004394:	00000593          	li	a1,0
80004398:	fdc42503          	lw	a0,-36(s0)
8000439c:	214000ef          	jal	ra,800045b0 <TFT_writedata>
800043a0:	fd842603          	lw	a2,-40(s0)
800043a4:	0e100593          	li	a1,225
800043a8:	fdc42503          	lw	a0,-36(s0)
800043ac:	1a0000ef          	jal	ra,8000454c <TFT_writecommand>
800043b0:	fd842603          	lw	a2,-40(s0)
800043b4:	00000593          	li	a1,0
800043b8:	fdc42503          	lw	a0,-36(s0)
800043bc:	1f4000ef          	jal	ra,800045b0 <TFT_writedata>
800043c0:	fd842603          	lw	a2,-40(s0)
800043c4:	00e00593          	li	a1,14
800043c8:	fdc42503          	lw	a0,-36(s0)
800043cc:	1e4000ef          	jal	ra,800045b0 <TFT_writedata>
800043d0:	fd842603          	lw	a2,-40(s0)
800043d4:	01400593          	li	a1,20
800043d8:	fdc42503          	lw	a0,-36(s0)
800043dc:	1d4000ef          	jal	ra,800045b0 <TFT_writedata>
800043e0:	fd842603          	lw	a2,-40(s0)
800043e4:	00300593          	li	a1,3
800043e8:	fdc42503          	lw	a0,-36(s0)
800043ec:	1c4000ef          	jal	ra,800045b0 <TFT_writedata>
800043f0:	fd842603          	lw	a2,-40(s0)
800043f4:	01100593          	li	a1,17
800043f8:	fdc42503          	lw	a0,-36(s0)
800043fc:	1b4000ef          	jal	ra,800045b0 <TFT_writedata>
80004400:	fd842603          	lw	a2,-40(s0)
80004404:	00700593          	li	a1,7
80004408:	fdc42503          	lw	a0,-36(s0)
8000440c:	1a4000ef          	jal	ra,800045b0 <TFT_writedata>
80004410:	fd842603          	lw	a2,-40(s0)
80004414:	03100593          	li	a1,49
80004418:	fdc42503          	lw	a0,-36(s0)
8000441c:	194000ef          	jal	ra,800045b0 <TFT_writedata>
80004420:	fd842603          	lw	a2,-40(s0)
80004424:	0c100593          	li	a1,193
80004428:	fdc42503          	lw	a0,-36(s0)
8000442c:	184000ef          	jal	ra,800045b0 <TFT_writedata>
80004430:	fd842603          	lw	a2,-40(s0)
80004434:	04800593          	li	a1,72
80004438:	fdc42503          	lw	a0,-36(s0)
8000443c:	174000ef          	jal	ra,800045b0 <TFT_writedata>
80004440:	fd842603          	lw	a2,-40(s0)
80004444:	00800593          	li	a1,8
80004448:	fdc42503          	lw	a0,-36(s0)
8000444c:	164000ef          	jal	ra,800045b0 <TFT_writedata>
80004450:	fd842603          	lw	a2,-40(s0)
80004454:	00f00593          	li	a1,15
80004458:	fdc42503          	lw	a0,-36(s0)
8000445c:	154000ef          	jal	ra,800045b0 <TFT_writedata>
80004460:	fd842603          	lw	a2,-40(s0)
80004464:	00c00593          	li	a1,12
80004468:	fdc42503          	lw	a0,-36(s0)
8000446c:	144000ef          	jal	ra,800045b0 <TFT_writedata>
80004470:	fd842603          	lw	a2,-40(s0)
80004474:	03100593          	li	a1,49
80004478:	fdc42503          	lw	a0,-36(s0)
8000447c:	134000ef          	jal	ra,800045b0 <TFT_writedata>
80004480:	fd842603          	lw	a2,-40(s0)
80004484:	03600593          	li	a1,54
80004488:	fdc42503          	lw	a0,-36(s0)
8000448c:	124000ef          	jal	ra,800045b0 <TFT_writedata>
80004490:	fd842603          	lw	a2,-40(s0)
80004494:	00f00593          	li	a1,15
80004498:	fdc42503          	lw	a0,-36(s0)
8000449c:	114000ef          	jal	ra,800045b0 <TFT_writedata>
800044a0:	fd842603          	lw	a2,-40(s0)
800044a4:	01100593          	li	a1,17
800044a8:	fdc42503          	lw	a0,-36(s0)
800044ac:	0a0000ef          	jal	ra,8000454c <TFT_writecommand>
800044b0:	fe041523          	sh	zero,-22(s0)
800044b4:	0200006f          	j	800044d4 <TFT_begin+0x624>
800044b8:	fea45783          	lhu	a5,-22(s0)
800044bc:	01079793          	slli	a5,a5,0x10
800044c0:	0107d793          	srli	a5,a5,0x10
800044c4:	00178793          	addi	a5,a5,1
800044c8:	01079793          	slli	a5,a5,0x10
800044cc:	0107d793          	srli	a5,a5,0x10
800044d0:	fef41523          	sh	a5,-22(s0)
800044d4:	fea45783          	lhu	a5,-22(s0)
800044d8:	01079713          	slli	a4,a5,0x10
800044dc:	01075713          	srli	a4,a4,0x10
800044e0:	000017b7          	lui	a5,0x1
800044e4:	ffe78793          	addi	a5,a5,-2 # ffe <HEAP_SIZE+0x7fe>
800044e8:	fce7f8e3          	bleu	a4,a5,800044b8 <TFT_begin+0x608>
800044ec:	fd842603          	lw	a2,-40(s0)
800044f0:	02900593          	li	a1,41
800044f4:	fdc42503          	lw	a0,-36(s0)
800044f8:	054000ef          	jal	ra,8000454c <TFT_writecommand>
800044fc:	fe041423          	sh	zero,-24(s0)
80004500:	0200006f          	j	80004520 <TFT_begin+0x670>
80004504:	fe845783          	lhu	a5,-24(s0)
80004508:	01079793          	slli	a5,a5,0x10
8000450c:	0107d793          	srli	a5,a5,0x10
80004510:	00178793          	addi	a5,a5,1
80004514:	01079793          	slli	a5,a5,0x10
80004518:	0107d793          	srli	a5,a5,0x10
8000451c:	fef41423          	sh	a5,-24(s0)
80004520:	fe845783          	lhu	a5,-24(s0)
80004524:	01079713          	slli	a4,a5,0x10
80004528:	01075713          	srli	a4,a4,0x10
8000452c:	000017b7          	lui	a5,0x1
80004530:	ffe78793          	addi	a5,a5,-2 # ffe <HEAP_SIZE+0x7fe>
80004534:	fce7f8e3          	bleu	a4,a5,80004504 <TFT_begin+0x654>
80004538:	00000013          	nop
8000453c:	02c12083          	lw	ra,44(sp)
80004540:	02812403          	lw	s0,40(sp)
80004544:	03010113          	addi	sp,sp,48
80004548:	00008067          	ret

8000454c <TFT_writecommand>:
8000454c:	fe010113          	addi	sp,sp,-32
80004550:	00112e23          	sw	ra,28(sp)
80004554:	00812c23          	sw	s0,24(sp)
80004558:	02010413          	addi	s0,sp,32
8000455c:	fea42623          	sw	a0,-20(s0)
80004560:	00058793          	mv	a5,a1
80004564:	fec42223          	sw	a2,-28(s0)
80004568:	fef405a3          	sb	a5,-21(s0)
8000456c:	00000613          	li	a2,0
80004570:	00400593          	li	a1,4
80004574:	fe442503          	lw	a0,-28(s0)
80004578:	964fd0ef          	jal	ra,800016dc <GPIO_set_output>
8000457c:	feb44783          	lbu	a5,-21(s0)
80004580:	00078593          	mv	a1,a5
80004584:	fec42503          	lw	a0,-20(s0)
80004588:	8d1ff0ef          	jal	ra,80003e58 <TFT_spiwrite>
8000458c:	00100613          	li	a2,1
80004590:	00400593          	li	a1,4
80004594:	fe442503          	lw	a0,-28(s0)
80004598:	944fd0ef          	jal	ra,800016dc <GPIO_set_output>
8000459c:	00000013          	nop
800045a0:	01c12083          	lw	ra,28(sp)
800045a4:	01812403          	lw	s0,24(sp)
800045a8:	02010113          	addi	sp,sp,32
800045ac:	00008067          	ret

800045b0 <TFT_writedata>:
800045b0:	fe010113          	addi	sp,sp,-32
800045b4:	00112e23          	sw	ra,28(sp)
800045b8:	00812c23          	sw	s0,24(sp)
800045bc:	02010413          	addi	s0,sp,32
800045c0:	fea42623          	sw	a0,-20(s0)
800045c4:	00058793          	mv	a5,a1
800045c8:	fec42223          	sw	a2,-28(s0)
800045cc:	fef405a3          	sb	a5,-21(s0)
800045d0:	00100613          	li	a2,1
800045d4:	00400593          	li	a1,4
800045d8:	fe442503          	lw	a0,-28(s0)
800045dc:	900fd0ef          	jal	ra,800016dc <GPIO_set_output>
800045e0:	feb44783          	lbu	a5,-21(s0)
800045e4:	00078593          	mv	a1,a5
800045e8:	fec42503          	lw	a0,-20(s0)
800045ec:	86dff0ef          	jal	ra,80003e58 <TFT_spiwrite>
800045f0:	00000013          	nop
800045f4:	01c12083          	lw	ra,28(sp)
800045f8:	01812403          	lw	s0,24(sp)
800045fc:	02010113          	addi	sp,sp,32
80004600:	00008067          	ret

80004604 <TFT_setAddrWindow>:
80004604:	fe010113          	addi	sp,sp,-32
80004608:	00112e23          	sw	ra,28(sp)
8000460c:	00812c23          	sw	s0,24(sp)
80004610:	02010413          	addi	s0,sp,32
80004614:	fea42623          	sw	a0,-20(s0)
80004618:	fef42023          	sw	a5,-32(s0)
8000461c:	00058793          	mv	a5,a1
80004620:	fef41523          	sh	a5,-22(s0)
80004624:	00060793          	mv	a5,a2
80004628:	fef41423          	sh	a5,-24(s0)
8000462c:	00068793          	mv	a5,a3
80004630:	fef41323          	sh	a5,-26(s0)
80004634:	00070793          	mv	a5,a4
80004638:	fef41223          	sh	a5,-28(s0)
8000463c:	fe042603          	lw	a2,-32(s0)
80004640:	02a00593          	li	a1,42
80004644:	fec42503          	lw	a0,-20(s0)
80004648:	f05ff0ef          	jal	ra,8000454c <TFT_writecommand>
8000464c:	fea45783          	lhu	a5,-22(s0)
80004650:	0087d793          	srli	a5,a5,0x8
80004654:	01079793          	slli	a5,a5,0x10
80004658:	0107d793          	srli	a5,a5,0x10
8000465c:	0ff7f793          	andi	a5,a5,255
80004660:	fe042603          	lw	a2,-32(s0)
80004664:	00078593          	mv	a1,a5
80004668:	fec42503          	lw	a0,-20(s0)
8000466c:	f45ff0ef          	jal	ra,800045b0 <TFT_writedata>
80004670:	fea45783          	lhu	a5,-22(s0)
80004674:	0ff7f793          	andi	a5,a5,255
80004678:	fe042603          	lw	a2,-32(s0)
8000467c:	00078593          	mv	a1,a5
80004680:	fec42503          	lw	a0,-20(s0)
80004684:	f2dff0ef          	jal	ra,800045b0 <TFT_writedata>
80004688:	fe645783          	lhu	a5,-26(s0)
8000468c:	0087d793          	srli	a5,a5,0x8
80004690:	01079793          	slli	a5,a5,0x10
80004694:	0107d793          	srli	a5,a5,0x10
80004698:	0ff7f793          	andi	a5,a5,255
8000469c:	fe042603          	lw	a2,-32(s0)
800046a0:	00078593          	mv	a1,a5
800046a4:	fec42503          	lw	a0,-20(s0)
800046a8:	f09ff0ef          	jal	ra,800045b0 <TFT_writedata>
800046ac:	fe645783          	lhu	a5,-26(s0)
800046b0:	0ff7f793          	andi	a5,a5,255
800046b4:	fe042603          	lw	a2,-32(s0)
800046b8:	00078593          	mv	a1,a5
800046bc:	fec42503          	lw	a0,-20(s0)
800046c0:	ef1ff0ef          	jal	ra,800045b0 <TFT_writedata>
800046c4:	fe042603          	lw	a2,-32(s0)
800046c8:	02b00593          	li	a1,43
800046cc:	fec42503          	lw	a0,-20(s0)
800046d0:	e7dff0ef          	jal	ra,8000454c <TFT_writecommand>
800046d4:	fe845783          	lhu	a5,-24(s0)
800046d8:	0087d793          	srli	a5,a5,0x8
800046dc:	01079793          	slli	a5,a5,0x10
800046e0:	0107d793          	srli	a5,a5,0x10
800046e4:	0ff7f793          	andi	a5,a5,255
800046e8:	fe042603          	lw	a2,-32(s0)
800046ec:	00078593          	mv	a1,a5
800046f0:	fec42503          	lw	a0,-20(s0)
800046f4:	ebdff0ef          	jal	ra,800045b0 <TFT_writedata>
800046f8:	fe845783          	lhu	a5,-24(s0)
800046fc:	0ff7f793          	andi	a5,a5,255
80004700:	fe042603          	lw	a2,-32(s0)
80004704:	00078593          	mv	a1,a5
80004708:	fec42503          	lw	a0,-20(s0)
8000470c:	ea5ff0ef          	jal	ra,800045b0 <TFT_writedata>
80004710:	fe445783          	lhu	a5,-28(s0)
80004714:	0087d793          	srli	a5,a5,0x8
80004718:	01079793          	slli	a5,a5,0x10
8000471c:	0107d793          	srli	a5,a5,0x10
80004720:	0ff7f793          	andi	a5,a5,255
80004724:	fe042603          	lw	a2,-32(s0)
80004728:	00078593          	mv	a1,a5
8000472c:	fec42503          	lw	a0,-20(s0)
80004730:	e81ff0ef          	jal	ra,800045b0 <TFT_writedata>
80004734:	fe445783          	lhu	a5,-28(s0)
80004738:	0ff7f793          	andi	a5,a5,255
8000473c:	fe042603          	lw	a2,-32(s0)
80004740:	00078593          	mv	a1,a5
80004744:	fec42503          	lw	a0,-20(s0)
80004748:	e69ff0ef          	jal	ra,800045b0 <TFT_writedata>
8000474c:	fe042603          	lw	a2,-32(s0)
80004750:	02c00593          	li	a1,44
80004754:	fec42503          	lw	a0,-20(s0)
80004758:	df5ff0ef          	jal	ra,8000454c <TFT_writecommand>
8000475c:	00000013          	nop
80004760:	01c12083          	lw	ra,28(sp)
80004764:	01812403          	lw	s0,24(sp)
80004768:	02010113          	addi	sp,sp,32
8000476c:	00008067          	ret

80004770 <TFT_fastVLine>:
80004770:	fd010113          	addi	sp,sp,-48
80004774:	02112623          	sw	ra,44(sp)
80004778:	02812423          	sw	s0,40(sp)
8000477c:	03010413          	addi	s0,sp,48
80004780:	fca42e23          	sw	a0,-36(s0)
80004784:	fcf42823          	sw	a5,-48(s0)
80004788:	00058793          	mv	a5,a1
8000478c:	fcf41d23          	sh	a5,-38(s0)
80004790:	00060793          	mv	a5,a2
80004794:	fcf41c23          	sh	a5,-40(s0)
80004798:	00068793          	mv	a5,a3
8000479c:	fcf41b23          	sh	a5,-42(s0)
800047a0:	00070793          	mv	a5,a4
800047a4:	fcf41a23          	sh	a5,-44(s0)
800047a8:	fda41703          	lh	a4,-38(s0)
800047ac:	0ef00793          	li	a5,239
800047b0:	0ee7c663          	blt	a5,a4,8000489c <TFT_fastVLine+0x12c>
800047b4:	fd841703          	lh	a4,-40(s0)
800047b8:	13f00793          	li	a5,319
800047bc:	0ee7c063          	blt	a5,a4,8000489c <TFT_fastVLine+0x12c>
800047c0:	fd841703          	lh	a4,-40(s0)
800047c4:	fd641783          	lh	a5,-42(s0)
800047c8:	00f707b3          	add	a5,a4,a5
800047cc:	fff78713          	addi	a4,a5,-1
800047d0:	13f00793          	li	a5,319
800047d4:	00e7de63          	ble	a4,a5,800047f0 <TFT_fastVLine+0x80>
800047d8:	fd845783          	lhu	a5,-40(s0)
800047dc:	14000713          	li	a4,320
800047e0:	40f707b3          	sub	a5,a4,a5
800047e4:	01079793          	slli	a5,a5,0x10
800047e8:	0107d793          	srli	a5,a5,0x10
800047ec:	fcf41b23          	sh	a5,-42(s0)
800047f0:	fda45583          	lhu	a1,-38(s0)
800047f4:	fd845603          	lhu	a2,-40(s0)
800047f8:	fda45683          	lhu	a3,-38(s0)
800047fc:	fd845703          	lhu	a4,-40(s0)
80004800:	fd645783          	lhu	a5,-42(s0)
80004804:	00f707b3          	add	a5,a4,a5
80004808:	01079793          	slli	a5,a5,0x10
8000480c:	0107d793          	srli	a5,a5,0x10
80004810:	fff78793          	addi	a5,a5,-1
80004814:	01079713          	slli	a4,a5,0x10
80004818:	01075713          	srli	a4,a4,0x10
8000481c:	fd042783          	lw	a5,-48(s0)
80004820:	fdc42503          	lw	a0,-36(s0)
80004824:	de1ff0ef          	jal	ra,80004604 <TFT_setAddrWindow>
80004828:	fd441783          	lh	a5,-44(s0)
8000482c:	4087d793          	srai	a5,a5,0x8
80004830:	01079793          	slli	a5,a5,0x10
80004834:	4107d793          	srai	a5,a5,0x10
80004838:	fef407a3          	sb	a5,-17(s0)
8000483c:	fd445783          	lhu	a5,-44(s0)
80004840:	fef40723          	sb	a5,-18(s0)
80004844:	00100613          	li	a2,1
80004848:	00400593          	li	a1,4
8000484c:	fd042503          	lw	a0,-48(s0)
80004850:	e8dfc0ef          	jal	ra,800016dc <GPIO_set_output>
80004854:	0240006f          	j	80004878 <TFT_fastVLine+0x108>
80004858:	fef44783          	lbu	a5,-17(s0)
8000485c:	00078593          	mv	a1,a5
80004860:	fdc42503          	lw	a0,-36(s0)
80004864:	df4ff0ef          	jal	ra,80003e58 <TFT_spiwrite>
80004868:	fee44783          	lbu	a5,-18(s0)
8000486c:	00078593          	mv	a1,a5
80004870:	fdc42503          	lw	a0,-36(s0)
80004874:	de4ff0ef          	jal	ra,80003e58 <TFT_spiwrite>
80004878:	fd641783          	lh	a5,-42(s0)
8000487c:	01079713          	slli	a4,a5,0x10
80004880:	01075713          	srli	a4,a4,0x10
80004884:	fff70713          	addi	a4,a4,-1
80004888:	01071713          	slli	a4,a4,0x10
8000488c:	01075713          	srli	a4,a4,0x10
80004890:	fce41b23          	sh	a4,-42(s0)
80004894:	fc0792e3          	bnez	a5,80004858 <TFT_fastVLine+0xe8>
80004898:	0080006f          	j	800048a0 <TFT_fastVLine+0x130>
8000489c:	00000013          	nop
800048a0:	02c12083          	lw	ra,44(sp)
800048a4:	02812403          	lw	s0,40(sp)
800048a8:	03010113          	addi	sp,sp,48
800048ac:	00008067          	ret

800048b0 <TFT_fastHLine>:
800048b0:	fd010113          	addi	sp,sp,-48
800048b4:	02112623          	sw	ra,44(sp)
800048b8:	02812423          	sw	s0,40(sp)
800048bc:	03010413          	addi	s0,sp,48
800048c0:	fca42e23          	sw	a0,-36(s0)
800048c4:	fcf42823          	sw	a5,-48(s0)
800048c8:	00058793          	mv	a5,a1
800048cc:	fcf41d23          	sh	a5,-38(s0)
800048d0:	00060793          	mv	a5,a2
800048d4:	fcf41c23          	sh	a5,-40(s0)
800048d8:	00068793          	mv	a5,a3
800048dc:	fcf41b23          	sh	a5,-42(s0)
800048e0:	00070793          	mv	a5,a4
800048e4:	fcf41a23          	sh	a5,-44(s0)
800048e8:	fda41703          	lh	a4,-38(s0)
800048ec:	0ef00793          	li	a5,239
800048f0:	0ee7c663          	blt	a5,a4,800049dc <TFT_fastHLine+0x12c>
800048f4:	fd841703          	lh	a4,-40(s0)
800048f8:	13f00793          	li	a5,319
800048fc:	0ee7c063          	blt	a5,a4,800049dc <TFT_fastHLine+0x12c>
80004900:	fda41703          	lh	a4,-38(s0)
80004904:	fd641783          	lh	a5,-42(s0)
80004908:	00f707b3          	add	a5,a4,a5
8000490c:	fff78713          	addi	a4,a5,-1
80004910:	0ef00793          	li	a5,239
80004914:	00e7de63          	ble	a4,a5,80004930 <TFT_fastHLine+0x80>
80004918:	fda45783          	lhu	a5,-38(s0)
8000491c:	0f000713          	li	a4,240
80004920:	40f707b3          	sub	a5,a4,a5
80004924:	01079793          	slli	a5,a5,0x10
80004928:	0107d793          	srli	a5,a5,0x10
8000492c:	fcf41b23          	sh	a5,-42(s0)
80004930:	fda45583          	lhu	a1,-38(s0)
80004934:	fd845603          	lhu	a2,-40(s0)
80004938:	fda45703          	lhu	a4,-38(s0)
8000493c:	fd645783          	lhu	a5,-42(s0)
80004940:	00f707b3          	add	a5,a4,a5
80004944:	01079793          	slli	a5,a5,0x10
80004948:	0107d793          	srli	a5,a5,0x10
8000494c:	fff78793          	addi	a5,a5,-1
80004950:	01079693          	slli	a3,a5,0x10
80004954:	0106d693          	srli	a3,a3,0x10
80004958:	fd845703          	lhu	a4,-40(s0)
8000495c:	fd042783          	lw	a5,-48(s0)
80004960:	fdc42503          	lw	a0,-36(s0)
80004964:	ca1ff0ef          	jal	ra,80004604 <TFT_setAddrWindow>
80004968:	fd441783          	lh	a5,-44(s0)
8000496c:	4087d793          	srai	a5,a5,0x8
80004970:	01079793          	slli	a5,a5,0x10
80004974:	4107d793          	srai	a5,a5,0x10
80004978:	fef407a3          	sb	a5,-17(s0)
8000497c:	fd445783          	lhu	a5,-44(s0)
80004980:	fef40723          	sb	a5,-18(s0)
80004984:	00100613          	li	a2,1
80004988:	00400593          	li	a1,4
8000498c:	fd042503          	lw	a0,-48(s0)
80004990:	d4dfc0ef          	jal	ra,800016dc <GPIO_set_output>
80004994:	0240006f          	j	800049b8 <TFT_fastHLine+0x108>
80004998:	fef44783          	lbu	a5,-17(s0)
8000499c:	00078593          	mv	a1,a5
800049a0:	fdc42503          	lw	a0,-36(s0)
800049a4:	cb4ff0ef          	jal	ra,80003e58 <TFT_spiwrite>
800049a8:	fee44783          	lbu	a5,-18(s0)
800049ac:	00078593          	mv	a1,a5
800049b0:	fdc42503          	lw	a0,-36(s0)
800049b4:	ca4ff0ef          	jal	ra,80003e58 <TFT_spiwrite>
800049b8:	fd641783          	lh	a5,-42(s0)
800049bc:	01079713          	slli	a4,a5,0x10
800049c0:	01075713          	srli	a4,a4,0x10
800049c4:	fff70713          	addi	a4,a4,-1
800049c8:	01071713          	slli	a4,a4,0x10
800049cc:	01075713          	srli	a4,a4,0x10
800049d0:	fce41b23          	sh	a4,-42(s0)
800049d4:	fc0792e3          	bnez	a5,80004998 <TFT_fastHLine+0xe8>
800049d8:	0080006f          	j	800049e0 <TFT_fastHLine+0x130>
800049dc:	00000013          	nop
800049e0:	02c12083          	lw	ra,44(sp)
800049e4:	02812403          	lw	s0,40(sp)
800049e8:	03010113          	addi	sp,sp,48
800049ec:	00008067          	ret

800049f0 <TFT_drawPixel>:
	int16_t xPt,
	int16_t yPt,
	uint16_t colour,
	gpio_instance_t * this_gpio
)
{
800049f0:	fd010113          	addi	sp,sp,-48
800049f4:	02112623          	sw	ra,44(sp)
800049f8:	02812423          	sw	s0,40(sp)
800049fc:	03010413          	addi	s0,sp,48
80004a00:	fca42e23          	sw	a0,-36(s0)
80004a04:	00058793          	mv	a5,a1
80004a08:	fce42823          	sw	a4,-48(s0)
80004a0c:	fcf41d23          	sh	a5,-38(s0)
80004a10:	00060793          	mv	a5,a2
80004a14:	fcf41c23          	sh	a5,-40(s0)
80004a18:	00068793          	mv	a5,a3
80004a1c:	fcf41b23          	sh	a5,-42(s0)
    if ((xPt < 0)||(xPt >= TFT_WIDTH)||(yPt < 0)||(yPt >= TFT_HEIGHT)) return;
80004a20:	fda41783          	lh	a5,-38(s0)
80004a24:	0a07c863          	bltz	a5,80004ad4 <TFT_drawPixel+0xe4>
80004a28:	fda41703          	lh	a4,-38(s0)
80004a2c:	0ef00793          	li	a5,239
80004a30:	0ae7c263          	blt	a5,a4,80004ad4 <TFT_drawPixel+0xe4>
80004a34:	fd841783          	lh	a5,-40(s0)
80004a38:	0807ce63          	bltz	a5,80004ad4 <TFT_drawPixel+0xe4>
80004a3c:	fd841703          	lh	a4,-40(s0)
80004a40:	13f00793          	li	a5,319
80004a44:	08e7c863          	blt	a5,a4,80004ad4 <TFT_drawPixel+0xe4>
    uint8_t colour_msb = 0;
80004a48:	fe0407a3          	sb	zero,-17(s0)
    colour_msb = colour >> 8;
80004a4c:	fd645783          	lhu	a5,-42(s0)
80004a50:	0087d793          	srli	a5,a5,0x8
80004a54:	01079793          	slli	a5,a5,0x10
80004a58:	0107d793          	srli	a5,a5,0x10
80004a5c:	fef407a3          	sb	a5,-17(s0)
    uint8_t colour_lsb = 0;
80004a60:	fe040723          	sb	zero,-18(s0)
    colour_lsb = colour;
80004a64:	fd645783          	lhu	a5,-42(s0)
80004a68:	fef40723          	sb	a5,-18(s0)
    TFT_setAddrWindow(this_spi, xPt, yPt, xPt+1 ,yPt+1, this_gpio);
80004a6c:	fda45583          	lhu	a1,-38(s0)
80004a70:	fd845603          	lhu	a2,-40(s0)
80004a74:	fda45783          	lhu	a5,-38(s0)
80004a78:	00178793          	addi	a5,a5,1
80004a7c:	01079693          	slli	a3,a5,0x10
80004a80:	0106d693          	srli	a3,a3,0x10
80004a84:	fd845783          	lhu	a5,-40(s0)
80004a88:	00178793          	addi	a5,a5,1
80004a8c:	01079713          	slli	a4,a5,0x10
80004a90:	01075713          	srli	a4,a4,0x10
80004a94:	fd042783          	lw	a5,-48(s0)
80004a98:	fdc42503          	lw	a0,-36(s0)
80004a9c:	b69ff0ef          	jal	ra,80004604 <TFT_setAddrWindow>
    GPIO_set_output( this_gpio, GPIO_4, 1 ); // Data Command Signal
80004aa0:	00100613          	li	a2,1
80004aa4:	00400593          	li	a1,4
80004aa8:	fd042503          	lw	a0,-48(s0)
80004aac:	c31fc0ef          	jal	ra,800016dc <GPIO_set_output>
    TFT_spiwrite( this_spi, colour_msb );
80004ab0:	fef44783          	lbu	a5,-17(s0)
80004ab4:	00078593          	mv	a1,a5
80004ab8:	fdc42503          	lw	a0,-36(s0)
80004abc:	b9cff0ef          	jal	ra,80003e58 <TFT_spiwrite>
    TFT_spiwrite( this_spi, colour_lsb );
80004ac0:	fee44783          	lbu	a5,-18(s0)
80004ac4:	00078593          	mv	a1,a5
80004ac8:	fdc42503          	lw	a0,-36(s0)
80004acc:	b8cff0ef          	jal	ra,80003e58 <TFT_spiwrite>
80004ad0:	0080006f          	j	80004ad8 <TFT_drawPixel+0xe8>
    if ((xPt < 0)||(xPt >= TFT_WIDTH)||(yPt < 0)||(yPt >= TFT_HEIGHT)) return;
80004ad4:	00000013          	nop
}
80004ad8:	02c12083          	lw	ra,44(sp)
80004adc:	02812403          	lw	s0,40(sp)
80004ae0:	03010113          	addi	sp,sp,48
80004ae4:	00008067          	ret

80004ae8 <TFT_drawCircle>:
	int16_t y0,
	int16_t radius,
	uint16_t color,
	gpio_instance_t * this_gpio
)
{
80004ae8:	fd010113          	addi	sp,sp,-48
80004aec:	02112623          	sw	ra,44(sp)
80004af0:	02812423          	sw	s0,40(sp)
80004af4:	03010413          	addi	s0,sp,48
80004af8:	fca42e23          	sw	a0,-36(s0)
80004afc:	fcf42823          	sw	a5,-48(s0)
80004b00:	00058793          	mv	a5,a1
80004b04:	fcf41d23          	sh	a5,-38(s0)
80004b08:	00060793          	mv	a5,a2
80004b0c:	fcf41c23          	sh	a5,-40(s0)
80004b10:	00068793          	mv	a5,a3
80004b14:	fcf41b23          	sh	a5,-42(s0)
80004b18:	00070793          	mv	a5,a4
80004b1c:	fcf41a23          	sh	a5,-44(s0)
  int16_t f = 1 - radius;
80004b20:	fd645783          	lhu	a5,-42(s0)
80004b24:	00100713          	li	a4,1
80004b28:	40f707b3          	sub	a5,a4,a5
80004b2c:	01079793          	slli	a5,a5,0x10
80004b30:	0107d793          	srli	a5,a5,0x10
80004b34:	fef41723          	sh	a5,-18(s0)
  int16_t ddF_x = 1;
80004b38:	00100793          	li	a5,1
80004b3c:	fef41623          	sh	a5,-20(s0)
  int16_t ddF_y = -2 * radius;
80004b40:	fd645783          	lhu	a5,-42(s0)
80004b44:	00000713          	li	a4,0
80004b48:	40f707b3          	sub	a5,a4,a5
80004b4c:	00179793          	slli	a5,a5,0x1
80004b50:	01079793          	slli	a5,a5,0x10
80004b54:	0107d793          	srli	a5,a5,0x10
80004b58:	fef41523          	sh	a5,-22(s0)
  int16_t x = 0;
80004b5c:	fe041423          	sh	zero,-24(s0)
  int16_t y = radius;
80004b60:	fd645783          	lhu	a5,-42(s0)
80004b64:	fef41323          	sh	a5,-26(s0)

  TFT_drawPixel(this_spi, x0  , y0+radius, color, this_gpio);
80004b68:	fd845703          	lhu	a4,-40(s0)
80004b6c:	fd645783          	lhu	a5,-42(s0)
80004b70:	00f707b3          	add	a5,a4,a5
80004b74:	01079793          	slli	a5,a5,0x10
80004b78:	0107d793          	srli	a5,a5,0x10
80004b7c:	01079613          	slli	a2,a5,0x10
80004b80:	41065613          	srai	a2,a2,0x10
80004b84:	fd445683          	lhu	a3,-44(s0)
80004b88:	fda41783          	lh	a5,-38(s0)
80004b8c:	fd042703          	lw	a4,-48(s0)
80004b90:	00078593          	mv	a1,a5
80004b94:	fdc42503          	lw	a0,-36(s0)
80004b98:	e59ff0ef          	jal	ra,800049f0 <TFT_drawPixel>
  TFT_drawPixel(this_spi, x0  , y0-radius, color, this_gpio);
80004b9c:	fd845703          	lhu	a4,-40(s0)
80004ba0:	fd645783          	lhu	a5,-42(s0)
80004ba4:	40f707b3          	sub	a5,a4,a5
80004ba8:	01079793          	slli	a5,a5,0x10
80004bac:	0107d793          	srli	a5,a5,0x10
80004bb0:	01079613          	slli	a2,a5,0x10
80004bb4:	41065613          	srai	a2,a2,0x10
80004bb8:	fd445683          	lhu	a3,-44(s0)
80004bbc:	fda41783          	lh	a5,-38(s0)
80004bc0:	fd042703          	lw	a4,-48(s0)
80004bc4:	00078593          	mv	a1,a5
80004bc8:	fdc42503          	lw	a0,-36(s0)
80004bcc:	e25ff0ef          	jal	ra,800049f0 <TFT_drawPixel>
  TFT_drawPixel(this_spi,x0+radius, y0  , color, this_gpio);
80004bd0:	fda45703          	lhu	a4,-38(s0)
80004bd4:	fd645783          	lhu	a5,-42(s0)
80004bd8:	00f707b3          	add	a5,a4,a5
80004bdc:	01079793          	slli	a5,a5,0x10
80004be0:	0107d793          	srli	a5,a5,0x10
80004be4:	01079793          	slli	a5,a5,0x10
80004be8:	4107d793          	srai	a5,a5,0x10
80004bec:	fd445683          	lhu	a3,-44(s0)
80004bf0:	fd841603          	lh	a2,-40(s0)
80004bf4:	fd042703          	lw	a4,-48(s0)
80004bf8:	00078593          	mv	a1,a5
80004bfc:	fdc42503          	lw	a0,-36(s0)
80004c00:	df1ff0ef          	jal	ra,800049f0 <TFT_drawPixel>
  TFT_drawPixel(this_spi,x0-radius, y0  , color, this_gpio);
80004c04:	fda45703          	lhu	a4,-38(s0)
80004c08:	fd645783          	lhu	a5,-42(s0)
80004c0c:	40f707b3          	sub	a5,a4,a5
80004c10:	01079793          	slli	a5,a5,0x10
80004c14:	0107d793          	srli	a5,a5,0x10
80004c18:	01079793          	slli	a5,a5,0x10
80004c1c:	4107d793          	srai	a5,a5,0x10
80004c20:	fd445683          	lhu	a3,-44(s0)
80004c24:	fd841603          	lh	a2,-40(s0)
80004c28:	fd042703          	lw	a4,-48(s0)
80004c2c:	00078593          	mv	a1,a5
80004c30:	fdc42503          	lw	a0,-36(s0)
80004c34:	dbdff0ef          	jal	ra,800049f0 <TFT_drawPixel>

  while (x<y) {
80004c38:	2fc0006f          	j	80004f34 <TFT_drawCircle+0x44c>
    if (f >= 0) {
80004c3c:	fee41783          	lh	a5,-18(s0)
80004c40:	0407c663          	bltz	a5,80004c8c <TFT_drawCircle+0x1a4>
      y--;
80004c44:	fe641783          	lh	a5,-26(s0)
80004c48:	01079793          	slli	a5,a5,0x10
80004c4c:	0107d793          	srli	a5,a5,0x10
80004c50:	fff78793          	addi	a5,a5,-1
80004c54:	01079793          	slli	a5,a5,0x10
80004c58:	0107d793          	srli	a5,a5,0x10
80004c5c:	fef41323          	sh	a5,-26(s0)
      ddF_y += 2;
80004c60:	fea45783          	lhu	a5,-22(s0)
80004c64:	00278793          	addi	a5,a5,2
80004c68:	01079793          	slli	a5,a5,0x10
80004c6c:	0107d793          	srli	a5,a5,0x10
80004c70:	fef41523          	sh	a5,-22(s0)
      f += ddF_y;
80004c74:	fee45703          	lhu	a4,-18(s0)
80004c78:	fea45783          	lhu	a5,-22(s0)
80004c7c:	00f707b3          	add	a5,a4,a5
80004c80:	01079793          	slli	a5,a5,0x10
80004c84:	0107d793          	srli	a5,a5,0x10
80004c88:	fef41723          	sh	a5,-18(s0)
    }
    x++;
80004c8c:	fe841783          	lh	a5,-24(s0)
80004c90:	01079793          	slli	a5,a5,0x10
80004c94:	0107d793          	srli	a5,a5,0x10
80004c98:	00178793          	addi	a5,a5,1
80004c9c:	01079793          	slli	a5,a5,0x10
80004ca0:	0107d793          	srli	a5,a5,0x10
80004ca4:	fef41423          	sh	a5,-24(s0)
    ddF_x += 2;
80004ca8:	fec45783          	lhu	a5,-20(s0)
80004cac:	00278793          	addi	a5,a5,2
80004cb0:	01079793          	slli	a5,a5,0x10
80004cb4:	0107d793          	srli	a5,a5,0x10
80004cb8:	fef41623          	sh	a5,-20(s0)
    f += ddF_x;
80004cbc:	fee45703          	lhu	a4,-18(s0)
80004cc0:	fec45783          	lhu	a5,-20(s0)
80004cc4:	00f707b3          	add	a5,a4,a5
80004cc8:	01079793          	slli	a5,a5,0x10
80004ccc:	0107d793          	srli	a5,a5,0x10
80004cd0:	fef41723          	sh	a5,-18(s0)

    TFT_drawPixel(this_spi,x0 + x, y0 + y, color, this_gpio);
80004cd4:	fda45703          	lhu	a4,-38(s0)
80004cd8:	fe845783          	lhu	a5,-24(s0)
80004cdc:	00f707b3          	add	a5,a4,a5
80004ce0:	01079793          	slli	a5,a5,0x10
80004ce4:	0107d793          	srli	a5,a5,0x10
80004ce8:	01079593          	slli	a1,a5,0x10
80004cec:	4105d593          	srai	a1,a1,0x10
80004cf0:	fd845703          	lhu	a4,-40(s0)
80004cf4:	fe645783          	lhu	a5,-26(s0)
80004cf8:	00f707b3          	add	a5,a4,a5
80004cfc:	01079793          	slli	a5,a5,0x10
80004d00:	0107d793          	srli	a5,a5,0x10
80004d04:	01079793          	slli	a5,a5,0x10
80004d08:	4107d793          	srai	a5,a5,0x10
80004d0c:	fd445683          	lhu	a3,-44(s0)
80004d10:	fd042703          	lw	a4,-48(s0)
80004d14:	00078613          	mv	a2,a5
80004d18:	fdc42503          	lw	a0,-36(s0)
80004d1c:	cd5ff0ef          	jal	ra,800049f0 <TFT_drawPixel>
    TFT_drawPixel(this_spi,x0 - x, y0 + y, color, this_gpio);
80004d20:	fda45703          	lhu	a4,-38(s0)
80004d24:	fe845783          	lhu	a5,-24(s0)
80004d28:	40f707b3          	sub	a5,a4,a5
80004d2c:	01079793          	slli	a5,a5,0x10
80004d30:	0107d793          	srli	a5,a5,0x10
80004d34:	01079593          	slli	a1,a5,0x10
80004d38:	4105d593          	srai	a1,a1,0x10
80004d3c:	fd845703          	lhu	a4,-40(s0)
80004d40:	fe645783          	lhu	a5,-26(s0)
80004d44:	00f707b3          	add	a5,a4,a5
80004d48:	01079793          	slli	a5,a5,0x10
80004d4c:	0107d793          	srli	a5,a5,0x10
80004d50:	01079793          	slli	a5,a5,0x10
80004d54:	4107d793          	srai	a5,a5,0x10
80004d58:	fd445683          	lhu	a3,-44(s0)
80004d5c:	fd042703          	lw	a4,-48(s0)
80004d60:	00078613          	mv	a2,a5
80004d64:	fdc42503          	lw	a0,-36(s0)
80004d68:	c89ff0ef          	jal	ra,800049f0 <TFT_drawPixel>
    TFT_drawPixel(this_spi,x0 + x, y0 - y, color, this_gpio);
80004d6c:	fda45703          	lhu	a4,-38(s0)
80004d70:	fe845783          	lhu	a5,-24(s0)
80004d74:	00f707b3          	add	a5,a4,a5
80004d78:	01079793          	slli	a5,a5,0x10
80004d7c:	0107d793          	srli	a5,a5,0x10
80004d80:	01079593          	slli	a1,a5,0x10
80004d84:	4105d593          	srai	a1,a1,0x10
80004d88:	fd845703          	lhu	a4,-40(s0)
80004d8c:	fe645783          	lhu	a5,-26(s0)
80004d90:	40f707b3          	sub	a5,a4,a5
80004d94:	01079793          	slli	a5,a5,0x10
80004d98:	0107d793          	srli	a5,a5,0x10
80004d9c:	01079793          	slli	a5,a5,0x10
80004da0:	4107d793          	srai	a5,a5,0x10
80004da4:	fd445683          	lhu	a3,-44(s0)
80004da8:	fd042703          	lw	a4,-48(s0)
80004dac:	00078613          	mv	a2,a5
80004db0:	fdc42503          	lw	a0,-36(s0)
80004db4:	c3dff0ef          	jal	ra,800049f0 <TFT_drawPixel>
    TFT_drawPixel(this_spi,x0 - x, y0 - y, color, this_gpio);
80004db8:	fda45703          	lhu	a4,-38(s0)
80004dbc:	fe845783          	lhu	a5,-24(s0)
80004dc0:	40f707b3          	sub	a5,a4,a5
80004dc4:	01079793          	slli	a5,a5,0x10
80004dc8:	0107d793          	srli	a5,a5,0x10
80004dcc:	01079593          	slli	a1,a5,0x10
80004dd0:	4105d593          	srai	a1,a1,0x10
80004dd4:	fd845703          	lhu	a4,-40(s0)
80004dd8:	fe645783          	lhu	a5,-26(s0)
80004ddc:	40f707b3          	sub	a5,a4,a5
80004de0:	01079793          	slli	a5,a5,0x10
80004de4:	0107d793          	srli	a5,a5,0x10
80004de8:	01079793          	slli	a5,a5,0x10
80004dec:	4107d793          	srai	a5,a5,0x10
80004df0:	fd445683          	lhu	a3,-44(s0)
80004df4:	fd042703          	lw	a4,-48(s0)
80004df8:	00078613          	mv	a2,a5
80004dfc:	fdc42503          	lw	a0,-36(s0)
80004e00:	bf1ff0ef          	jal	ra,800049f0 <TFT_drawPixel>
    TFT_drawPixel(this_spi,x0 + y, y0 + x, color, this_gpio);
80004e04:	fda45703          	lhu	a4,-38(s0)
80004e08:	fe645783          	lhu	a5,-26(s0)
80004e0c:	00f707b3          	add	a5,a4,a5
80004e10:	01079793          	slli	a5,a5,0x10
80004e14:	0107d793          	srli	a5,a5,0x10
80004e18:	01079593          	slli	a1,a5,0x10
80004e1c:	4105d593          	srai	a1,a1,0x10
80004e20:	fd845703          	lhu	a4,-40(s0)
80004e24:	fe845783          	lhu	a5,-24(s0)
80004e28:	00f707b3          	add	a5,a4,a5
80004e2c:	01079793          	slli	a5,a5,0x10
80004e30:	0107d793          	srli	a5,a5,0x10
80004e34:	01079793          	slli	a5,a5,0x10
80004e38:	4107d793          	srai	a5,a5,0x10
80004e3c:	fd445683          	lhu	a3,-44(s0)
80004e40:	fd042703          	lw	a4,-48(s0)
80004e44:	00078613          	mv	a2,a5
80004e48:	fdc42503          	lw	a0,-36(s0)
80004e4c:	ba5ff0ef          	jal	ra,800049f0 <TFT_drawPixel>
    TFT_drawPixel(this_spi,x0 - y, y0 + x, color, this_gpio);
80004e50:	fda45703          	lhu	a4,-38(s0)
80004e54:	fe645783          	lhu	a5,-26(s0)
80004e58:	40f707b3          	sub	a5,a4,a5
80004e5c:	01079793          	slli	a5,a5,0x10
80004e60:	0107d793          	srli	a5,a5,0x10
80004e64:	01079593          	slli	a1,a5,0x10
80004e68:	4105d593          	srai	a1,a1,0x10
80004e6c:	fd845703          	lhu	a4,-40(s0)
80004e70:	fe845783          	lhu	a5,-24(s0)
80004e74:	00f707b3          	add	a5,a4,a5
80004e78:	01079793          	slli	a5,a5,0x10
80004e7c:	0107d793          	srli	a5,a5,0x10
80004e80:	01079793          	slli	a5,a5,0x10
80004e84:	4107d793          	srai	a5,a5,0x10
80004e88:	fd445683          	lhu	a3,-44(s0)
80004e8c:	fd042703          	lw	a4,-48(s0)
80004e90:	00078613          	mv	a2,a5
80004e94:	fdc42503          	lw	a0,-36(s0)
80004e98:	b59ff0ef          	jal	ra,800049f0 <TFT_drawPixel>
    TFT_drawPixel(this_spi,x0 + y, y0 - x, color, this_gpio);
80004e9c:	fda45703          	lhu	a4,-38(s0)
80004ea0:	fe645783          	lhu	a5,-26(s0)
80004ea4:	00f707b3          	add	a5,a4,a5
80004ea8:	01079793          	slli	a5,a5,0x10
80004eac:	0107d793          	srli	a5,a5,0x10
80004eb0:	01079593          	slli	a1,a5,0x10
80004eb4:	4105d593          	srai	a1,a1,0x10
80004eb8:	fd845703          	lhu	a4,-40(s0)
80004ebc:	fe845783          	lhu	a5,-24(s0)
80004ec0:	40f707b3          	sub	a5,a4,a5
80004ec4:	01079793          	slli	a5,a5,0x10
80004ec8:	0107d793          	srli	a5,a5,0x10
80004ecc:	01079793          	slli	a5,a5,0x10
80004ed0:	4107d793          	srai	a5,a5,0x10
80004ed4:	fd445683          	lhu	a3,-44(s0)
80004ed8:	fd042703          	lw	a4,-48(s0)
80004edc:	00078613          	mv	a2,a5
80004ee0:	fdc42503          	lw	a0,-36(s0)
80004ee4:	b0dff0ef          	jal	ra,800049f0 <TFT_drawPixel>
    TFT_drawPixel(this_spi,x0 - y, y0 - x, color, this_gpio);
80004ee8:	fda45703          	lhu	a4,-38(s0)
80004eec:	fe645783          	lhu	a5,-26(s0)
80004ef0:	40f707b3          	sub	a5,a4,a5
80004ef4:	01079793          	slli	a5,a5,0x10
80004ef8:	0107d793          	srli	a5,a5,0x10
80004efc:	01079593          	slli	a1,a5,0x10
80004f00:	4105d593          	srai	a1,a1,0x10
80004f04:	fd845703          	lhu	a4,-40(s0)
80004f08:	fe845783          	lhu	a5,-24(s0)
80004f0c:	40f707b3          	sub	a5,a4,a5
80004f10:	01079793          	slli	a5,a5,0x10
80004f14:	0107d793          	srli	a5,a5,0x10
80004f18:	01079793          	slli	a5,a5,0x10
80004f1c:	4107d793          	srai	a5,a5,0x10
80004f20:	fd445683          	lhu	a3,-44(s0)
80004f24:	fd042703          	lw	a4,-48(s0)
80004f28:	00078613          	mv	a2,a5
80004f2c:	fdc42503          	lw	a0,-36(s0)
80004f30:	ac1ff0ef          	jal	ra,800049f0 <TFT_drawPixel>
  while (x<y) {
80004f34:	fe841703          	lh	a4,-24(s0)
80004f38:	fe641783          	lh	a5,-26(s0)
80004f3c:	d0f740e3          	blt	a4,a5,80004c3c <TFT_drawCircle+0x154>
  }
}
80004f40:	00000013          	nop
80004f44:	02c12083          	lw	ra,44(sp)
80004f48:	02812403          	lw	s0,40(sp)
80004f4c:	03010113          	addi	sp,sp,48
80004f50:	00008067          	ret

80004f54 <TFT_drawLine>:
	int16_t x1,
	int16_t y1,
	uint16_t color,
	gpio_instance_t * this_gpio
)
{
80004f54:	fb010113          	addi	sp,sp,-80
80004f58:	04112623          	sw	ra,76(sp)
80004f5c:	04812423          	sw	s0,72(sp)
80004f60:	05010413          	addi	s0,sp,80
80004f64:	fca42623          	sw	a0,-52(s0)
80004f68:	00058513          	mv	a0,a1
80004f6c:	00060593          	mv	a1,a2
80004f70:	00068613          	mv	a2,a3
80004f74:	00070693          	mv	a3,a4
80004f78:	00078713          	mv	a4,a5
80004f7c:	fb042e23          	sw	a6,-68(s0)
80004f80:	00050793          	mv	a5,a0
80004f84:	fcf41523          	sh	a5,-54(s0)
80004f88:	00058793          	mv	a5,a1
80004f8c:	fcf41423          	sh	a5,-56(s0)
80004f90:	00060793          	mv	a5,a2
80004f94:	fcf41323          	sh	a5,-58(s0)
80004f98:	00068793          	mv	a5,a3
80004f9c:	fcf41223          	sh	a5,-60(s0)
80004fa0:	00070793          	mv	a5,a4
80004fa4:	fcf41123          	sh	a5,-62(s0)
  int16_t steep = abs(y1 - y0) > abs(x1 - x0);
80004fa8:	fc441703          	lh	a4,-60(s0)
80004fac:	fc841783          	lh	a5,-56(s0)
80004fb0:	40f70733          	sub	a4,a4,a5
80004fb4:	41f75793          	srai	a5,a4,0x1f
80004fb8:	00e7c733          	xor	a4,a5,a4
80004fbc:	40f70733          	sub	a4,a4,a5
80004fc0:	fc641683          	lh	a3,-58(s0)
80004fc4:	fca41783          	lh	a5,-54(s0)
80004fc8:	40f687b3          	sub	a5,a3,a5
80004fcc:	41f7d693          	srai	a3,a5,0x1f
80004fd0:	00f6c7b3          	xor	a5,a3,a5
80004fd4:	40d787b3          	sub	a5,a5,a3
80004fd8:	00e7a7b3          	slt	a5,a5,a4
80004fdc:	0ff7f793          	andi	a5,a5,255
80004fe0:	fef41523          	sh	a5,-22(s0)
  if (steep) {
80004fe4:	fea41783          	lh	a5,-22(s0)
80004fe8:	02078a63          	beqz	a5,8000501c <TFT_drawLine+0xc8>
    _swap_int16_t(x0, y0);
80004fec:	fca45783          	lhu	a5,-54(s0)
80004ff0:	fef41423          	sh	a5,-24(s0)
80004ff4:	fc845783          	lhu	a5,-56(s0)
80004ff8:	fcf41523          	sh	a5,-54(s0)
80004ffc:	fe845783          	lhu	a5,-24(s0)
80005000:	fcf41423          	sh	a5,-56(s0)
    _swap_int16_t(x1, y1);
80005004:	fc645783          	lhu	a5,-58(s0)
80005008:	fef41323          	sh	a5,-26(s0)
8000500c:	fc445783          	lhu	a5,-60(s0)
80005010:	fcf41323          	sh	a5,-58(s0)
80005014:	fe645783          	lhu	a5,-26(s0)
80005018:	fcf41223          	sh	a5,-60(s0)
  }

  if (x0 > x1) {
8000501c:	fca41703          	lh	a4,-54(s0)
80005020:	fc641783          	lh	a5,-58(s0)
80005024:	02e7da63          	ble	a4,a5,80005058 <TFT_drawLine+0x104>
    _swap_int16_t(x0, x1);
80005028:	fca45783          	lhu	a5,-54(s0)
8000502c:	fef41223          	sh	a5,-28(s0)
80005030:	fc645783          	lhu	a5,-58(s0)
80005034:	fcf41523          	sh	a5,-54(s0)
80005038:	fe445783          	lhu	a5,-28(s0)
8000503c:	fcf41323          	sh	a5,-58(s0)
    _swap_int16_t(y0, y1);
80005040:	fc845783          	lhu	a5,-56(s0)
80005044:	fef41123          	sh	a5,-30(s0)
80005048:	fc445783          	lhu	a5,-60(s0)
8000504c:	fcf41423          	sh	a5,-56(s0)
80005050:	fe245783          	lhu	a5,-30(s0)
80005054:	fcf41223          	sh	a5,-60(s0)
  }

  int16_t dx, dy;
  dx = x1 - x0;
80005058:	fc645703          	lhu	a4,-58(s0)
8000505c:	fca45783          	lhu	a5,-54(s0)
80005060:	40f707b3          	sub	a5,a4,a5
80005064:	01079793          	slli	a5,a5,0x10
80005068:	0107d793          	srli	a5,a5,0x10
8000506c:	fef41023          	sh	a5,-32(s0)
  dy = abs(y1 - y0);
80005070:	fc441703          	lh	a4,-60(s0)
80005074:	fc841783          	lh	a5,-56(s0)
80005078:	40f707b3          	sub	a5,a4,a5
8000507c:	41f7d713          	srai	a4,a5,0x1f
80005080:	00f747b3          	xor	a5,a4,a5
80005084:	40e787b3          	sub	a5,a5,a4
80005088:	fcf41f23          	sh	a5,-34(s0)

  int16_t err = dx / 2;
8000508c:	fe041783          	lh	a5,-32(s0)
80005090:	01f7d713          	srli	a4,a5,0x1f
80005094:	00f707b3          	add	a5,a4,a5
80005098:	4017d793          	srai	a5,a5,0x1
8000509c:	fef41723          	sh	a5,-18(s0)
  int16_t ystep;

  if (y0 < y1) {
800050a0:	fc841703          	lh	a4,-56(s0)
800050a4:	fc441783          	lh	a5,-60(s0)
800050a8:	00f75863          	ble	a5,a4,800050b8 <TFT_drawLine+0x164>
    ystep = 1;
800050ac:	00100793          	li	a5,1
800050b0:	fef41623          	sh	a5,-20(s0)
800050b4:	0c00006f          	j	80005174 <TFT_drawLine+0x220>
  } else {
    ystep = -1;
800050b8:	fff00793          	li	a5,-1
800050bc:	fef41623          	sh	a5,-20(s0)
  }

  for (; x0<=x1; x0++) {
800050c0:	0b40006f          	j	80005174 <TFT_drawLine+0x220>
    if (steep) {
800050c4:	fea41783          	lh	a5,-22(s0)
800050c8:	02078263          	beqz	a5,800050ec <TFT_drawLine+0x198>
    	TFT_drawPixel(this_spi,y0, x0, color, this_gpio);
800050cc:	fc245683          	lhu	a3,-62(s0)
800050d0:	fca41603          	lh	a2,-54(s0)
800050d4:	fc841783          	lh	a5,-56(s0)
800050d8:	fbc42703          	lw	a4,-68(s0)
800050dc:	00078593          	mv	a1,a5
800050e0:	fcc42503          	lw	a0,-52(s0)
800050e4:	90dff0ef          	jal	ra,800049f0 <TFT_drawPixel>
800050e8:	0200006f          	j	80005108 <TFT_drawLine+0x1b4>
    } else {
    	TFT_drawPixel(this_spi,x0, y0, color,this_gpio);
800050ec:	fc245683          	lhu	a3,-62(s0)
800050f0:	fc841603          	lh	a2,-56(s0)
800050f4:	fca41783          	lh	a5,-54(s0)
800050f8:	fbc42703          	lw	a4,-68(s0)
800050fc:	00078593          	mv	a1,a5
80005100:	fcc42503          	lw	a0,-52(s0)
80005104:	8edff0ef          	jal	ra,800049f0 <TFT_drawPixel>
    }
    err -= dy;
80005108:	fee45703          	lhu	a4,-18(s0)
8000510c:	fde45783          	lhu	a5,-34(s0)
80005110:	40f707b3          	sub	a5,a4,a5
80005114:	01079793          	slli	a5,a5,0x10
80005118:	0107d793          	srli	a5,a5,0x10
8000511c:	fef41723          	sh	a5,-18(s0)
    if (err < 0) {
80005120:	fee41783          	lh	a5,-18(s0)
80005124:	0207da63          	bgez	a5,80005158 <TFT_drawLine+0x204>
      y0 += ystep;
80005128:	fc845703          	lhu	a4,-56(s0)
8000512c:	fec45783          	lhu	a5,-20(s0)
80005130:	00f707b3          	add	a5,a4,a5
80005134:	01079793          	slli	a5,a5,0x10
80005138:	0107d793          	srli	a5,a5,0x10
8000513c:	fcf41423          	sh	a5,-56(s0)
      err += dx;
80005140:	fee45703          	lhu	a4,-18(s0)
80005144:	fe045783          	lhu	a5,-32(s0)
80005148:	00f707b3          	add	a5,a4,a5
8000514c:	01079793          	slli	a5,a5,0x10
80005150:	0107d793          	srli	a5,a5,0x10
80005154:	fef41723          	sh	a5,-18(s0)
  for (; x0<=x1; x0++) {
80005158:	fca41783          	lh	a5,-54(s0)
8000515c:	01079793          	slli	a5,a5,0x10
80005160:	0107d793          	srli	a5,a5,0x10
80005164:	00178793          	addi	a5,a5,1
80005168:	01079793          	slli	a5,a5,0x10
8000516c:	0107d793          	srli	a5,a5,0x10
80005170:	fcf41523          	sh	a5,-54(s0)
80005174:	fca41703          	lh	a4,-54(s0)
80005178:	fc641783          	lh	a5,-58(s0)
8000517c:	f4e7d4e3          	ble	a4,a5,800050c4 <TFT_drawLine+0x170>
    }
  }
}
80005180:	00000013          	nop
80005184:	04c12083          	lw	ra,76(sp)
80005188:	04812403          	lw	s0,72(sp)
8000518c:	05010113          	addi	sp,sp,80
80005190:	00008067          	ret

80005194 <main>:

/*-------------------------------------------------------------------------*//**
 * main() function.
 */
int main()
{
80005194:	fe010113          	addi	sp,sp,-32
80005198:	00112e23          	sw	ra,28(sp)
8000519c:	00812c23          	sw	s0,24(sp)
800051a0:	02010413          	addi	s0,sp,32
    g_10ms_count = 0;
800051a4:	800067b7          	lui	a5,0x80006
800051a8:	c207a223          	sw	zero,-988(a5) # 80005c24 <__stack_top+0xffffeff4>

    /**************************************************************************
     * Initialize the CoreGPIO driver with the base address of the CoreGPIO
     * instance to use and the initial state of the outputs.
     *************************************************************************/
    GPIO_init( &g_gpio, COREGPIO_OUT_BASE_ADDR, GPIO_APB_32_BITS_BUS );
800051ac:	00200613          	li	a2,2
800051b0:	700055b7          	lui	a1,0x70005
800051b4:	800067b7          	lui	a5,0x80006
800051b8:	bc878513          	addi	a0,a5,-1080 # 80005bc8 <__stack_top+0xffffef98>
800051bc:	880fc0ef          	jal	ra,8000123c <GPIO_init>
    GPIO_set_outputs(&g_gpio, 0);
800051c0:	00000593          	li	a1,0
800051c4:	800067b7          	lui	a5,0x80006
800051c8:	bc878513          	addi	a0,a5,-1080 # 80005bc8 <__stack_top+0xffffef98>
800051cc:	a4cfc0ef          	jal	ra,80001418 <GPIO_set_outputs>

    /**************************************************************************
     * Configure the GPIOs.
     ************************************3*************************************/
	GPIO_set_output( &g_gpio, GPIO_0, 0x00 );
800051d0:	00000613          	li	a2,0
800051d4:	00000593          	li	a1,0
800051d8:	800067b7          	lui	a5,0x80006
800051dc:	bc878513          	addi	a0,a5,-1080 # 80005bc8 <__stack_top+0xffffef98>
800051e0:	cfcfc0ef          	jal	ra,800016dc <GPIO_set_output>
	GPIO_set_output( &g_gpio, GPIO_1, 0x00 );
800051e4:	00000613          	li	a2,0
800051e8:	00100593          	li	a1,1
800051ec:	800067b7          	lui	a5,0x80006
800051f0:	bc878513          	addi	a0,a5,-1080 # 80005bc8 <__stack_top+0xffffef98>
800051f4:	ce8fc0ef          	jal	ra,800016dc <GPIO_set_output>
    GPIO_config( &g_gpio, GPIO_4, GPIO_OUTPUT_MODE); // Data Command Signal
800051f8:	00500613          	li	a2,5
800051fc:	00400593          	li	a1,4
80005200:	800067b7          	lui	a5,0x80006
80005204:	bc878513          	addi	a0,a5,-1080 # 80005bc8 <__stack_top+0xffffef98>
80005208:	9a8fc0ef          	jal	ra,800013b0 <GPIO_config>
	GPIO_set_output( &g_gpio, GPIO_4, 1 ); // Data Command Signal
8000520c:	00100613          	li	a2,1
80005210:	00400593          	li	a1,4
80005214:	800067b7          	lui	a5,0x80006
80005218:	bc878513          	addi	a0,a5,-1080 # 80005bc8 <__stack_top+0xffffef98>
8000521c:	cc0fc0ef          	jal	ra,800016dc <GPIO_set_output>
	GPIO_config( &g_gpio, GPIO_6, GPIO_OUTPUT_MODE); // reset Signal
80005220:	00500613          	li	a2,5
80005224:	00600593          	li	a1,6
80005228:	800067b7          	lui	a5,0x80006
8000522c:	bc878513          	addi	a0,a5,-1080 # 80005bc8 <__stack_top+0xffffef98>
80005230:	980fc0ef          	jal	ra,800013b0 <GPIO_config>
	GPIO_set_output( &g_gpio, GPIO_6, 1 ); // reset Signal
80005234:	00100613          	li	a2,1
80005238:	00600593          	li	a1,6
8000523c:	800067b7          	lui	a5,0x80006
80005240:	bc878513          	addi	a0,a5,-1080 # 80005bc8 <__stack_top+0xffffef98>
80005244:	c98fc0ef          	jal	ra,800016dc <GPIO_set_output>
	GPIO_config( &g_gpio, GPIO_5, GPIO_OUTPUT_MODE); // Chip Select Signal TS
80005248:	00500613          	li	a2,5
8000524c:	00500593          	li	a1,5
80005250:	800067b7          	lui	a5,0x80006
80005254:	bc878513          	addi	a0,a5,-1080 # 80005bc8 <__stack_top+0xffffef98>
80005258:	958fc0ef          	jal	ra,800013b0 <GPIO_config>
	GPIO_set_output( &g_gpio, GPIO_5, 1 ); // Chip Select Signal TS
8000525c:	00100613          	li	a2,1
80005260:	00500593          	li	a1,5
80005264:	800067b7          	lui	a5,0x80006
80005268:	bc878513          	addi	a0,a5,-1080 # 80005bc8 <__stack_top+0xffffef98>
8000526c:	c70fc0ef          	jal	ra,800016dc <GPIO_set_output>

    /**************************************************************************
      * Initialize CoreSPI0  in master mode.
      *************************************************************************/
	SPI_init(&g_core_spi0, CORE_SPI0_BASE_ADDRESS,8);
80005270:	00800613          	li	a2,8
80005274:	700065b7          	lui	a1,0x70006
80005278:	800067b7          	lui	a5,0x80006
8000527c:	bd878513          	addi	a0,a5,-1064 # 80005bd8 <__stack_top+0xffffefa8>
80005280:	a71fb0ef          	jal	ra,80000cf0 <SPI_init>
	SPI_configure_master_mode(&g_core_spi0);
80005284:	800067b7          	lui	a5,0x80006
80005288:	bd878513          	addi	a0,a5,-1064 # 80005bd8 <__stack_top+0xffffefa8>
8000528c:	bd5fb0ef          	jal	ra,80000e60 <SPI_configure_master_mode>

	/**************************************************************************
      * Initialize TFT Screen.
      *************************************************************************/
	TFT_begin( &g_core_spi0, &g_gpio); // initialize the TFT Screen
80005290:	800067b7          	lui	a5,0x80006
80005294:	bc878593          	addi	a1,a5,-1080 # 80005bc8 <__stack_top+0xffffef98>
80005298:	800067b7          	lui	a5,0x80006
8000529c:	bd878513          	addi	a0,a5,-1064 # 80005bd8 <__stack_top+0xffffefa8>
800052a0:	c11fe0ef          	jal	ra,80003eb0 <TFT_begin>
	for(volatile uint16_t delay0 = 0; delay0 < 0xFF; delay0++); // Delay
800052a4:	fe041723          	sh	zero,-18(s0)
800052a8:	0200006f          	j	800052c8 <main+0x134>
800052ac:	fee45783          	lhu	a5,-18(s0)
800052b0:	01079793          	slli	a5,a5,0x10
800052b4:	0107d793          	srli	a5,a5,0x10
800052b8:	00178793          	addi	a5,a5,1
800052bc:	01079793          	slli	a5,a5,0x10
800052c0:	0107d793          	srli	a5,a5,0x10
800052c4:	fef41723          	sh	a5,-18(s0)
800052c8:	fee45783          	lhu	a5,-18(s0)
800052cc:	01079713          	slli	a4,a5,0x10
800052d0:	01075713          	srli	a4,a4,0x10
800052d4:	0fe00793          	li	a5,254
800052d8:	fce7fae3          	bleu	a4,a5,800052ac <main+0x118>

	/**************************************************************************
      * Initialize Touch Screen (TS).
      *************************************************************************/
	TS_begin(&g_core_spi0, &g_gpio); // initialize the touch screen
800052dc:	800067b7          	lui	a5,0x80006
800052e0:	bc878593          	addi	a1,a5,-1080 # 80005bc8 <__stack_top+0xffffef98>
800052e4:	800067b7          	lui	a5,0x80006
800052e8:	bd878513          	addi	a0,a5,-1064 # 80005bd8 <__stack_top+0xffffefa8>
800052ec:	eacfe0ef          	jal	ra,80003998 <TS_begin>
	for(volatile uint16_t delay1 = 0; delay1 < 0xFF; delay1++); // Delay
800052f0:	fe041623          	sh	zero,-20(s0)
800052f4:	0200006f          	j	80005314 <main+0x180>
800052f8:	fec45783          	lhu	a5,-20(s0)
800052fc:	01079793          	slli	a5,a5,0x10
80005300:	0107d793          	srli	a5,a5,0x10
80005304:	00178793          	addi	a5,a5,1
80005308:	01079793          	slli	a5,a5,0x10
8000530c:	0107d793          	srli	a5,a5,0x10
80005310:	fef41623          	sh	a5,-20(s0)
80005314:	fec45783          	lhu	a5,-20(s0)
80005318:	01079713          	slli	a4,a5,0x10
8000531c:	01075713          	srli	a4,a4,0x10
80005320:	0fe00793          	li	a5,254
80005324:	fce7fae3          	bleu	a4,a5,800052f8 <main+0x164>
      * Player Modes
      * Single Player 	->  	singlePlayerMode(&g_core_spi0, &g_gpio)
      * Two Player 		->		twoPlayerMode(&g_core_spi0, &g_gpio);
      *************************************************************************/
	//twoPlayerMode(&g_core_spi0, &g_gpio); // Two Player Mode
	singlePlayerMode(&g_core_spi0, &g_gpio); // Single Player Mode
80005328:	800067b7          	lui	a5,0x80006
8000532c:	bc878593          	addi	a1,a5,-1080 # 80005bc8 <__stack_top+0xffffef98>
80005330:	800067b7          	lui	a5,0x80006
80005334:	bd878513          	addi	a0,a5,-1064 # 80005bd8 <__stack_top+0xffffefa8>
80005338:	ec0fc0ef          	jal	ra,800019f8 <singlePlayerMode>

	while(1);
8000533c:	0000006f          	j	8000533c <main+0x1a8>

80005340 <SysTick_Handler>:
 * 10mS so the resolution will be 10ms). Rolls over every 49 days or so...
 *
 * Should be safe to read g_10ms_count from elsewhere.
 */
void SysTick_Handler( void )
{
80005340:	fe010113          	addi	sp,sp,-32
80005344:	00112e23          	sw	ra,28(sp)
80005348:	00812c23          	sw	s0,24(sp)
8000534c:	02010413          	addi	s0,sp,32
    static uint8_t count;
    /*
     * Toggle GPIO output pattern by doing an exclusive OR of all
     * pattern bits with ones.
     */
    if(count++>=50)
80005350:	800067b7          	lui	a5,0x80006
80005354:	b087c783          	lbu	a5,-1272(a5) # 80005b08 <__stack_top+0xffffeed8>
80005358:	00178713          	addi	a4,a5,1
8000535c:	0ff77693          	andi	a3,a4,255
80005360:	80006737          	lui	a4,0x80006
80005364:	b0d70423          	sb	a3,-1272(a4) # 80005b08 <__stack_top+0xffffeed8>
80005368:	03100713          	li	a4,49
8000536c:	02f77c63          	bleu	a5,a4,800053a4 <SysTick_Handler+0x64>
    {
        gpio_pattern = GPIO_get_outputs( &g_gpio );
80005370:	800067b7          	lui	a5,0x80006
80005374:	bc878513          	addi	a0,a5,-1080 # 80005bc8 <__stack_top+0xffffef98>
80005378:	9ecfc0ef          	jal	ra,80001564 <GPIO_get_outputs>
8000537c:	fea42623          	sw	a0,-20(s0)
        gpio_pattern ^= 0x00000002;
80005380:	fec42783          	lw	a5,-20(s0)
80005384:	0027c793          	xori	a5,a5,2
80005388:	fef42623          	sw	a5,-20(s0)
        GPIO_set_outputs( &g_gpio, gpio_pattern );
8000538c:	fec42583          	lw	a1,-20(s0)
80005390:	800067b7          	lui	a5,0x80006
80005394:	bc878513          	addi	a0,a5,-1080 # 80005bc8 <__stack_top+0xffffef98>
80005398:	880fc0ef          	jal	ra,80001418 <GPIO_set_outputs>
        count=0;
8000539c:	800067b7          	lui	a5,0x80006
800053a0:	b0078423          	sb	zero,-1272(a5) # 80005b08 <__stack_top+0xffffeed8>
    }

    g_10ms_count += 10;
800053a4:	800067b7          	lui	a5,0x80006
800053a8:	c247a783          	lw	a5,-988(a5) # 80005c24 <__stack_top+0xffffeff4>
800053ac:	00a78713          	addi	a4,a5,10
800053b0:	800067b7          	lui	a5,0x80006
800053b4:	c2e7a223          	sw	a4,-988(a5) # 80005c24 <__stack_top+0xffffeff4>

     /*
      * For neatness, if we roll over, reset cleanly back to 0 so the count
      * always goes up in proper 10s.
      */
    if(g_10ms_count < 10)
800053b8:	800067b7          	lui	a5,0x80006
800053bc:	c247a703          	lw	a4,-988(a5) # 80005c24 <__stack_top+0xffffeff4>
800053c0:	00900793          	li	a5,9
800053c4:	00e7e663          	bltu	a5,a4,800053d0 <SysTick_Handler+0x90>
        g_10ms_count = 0;
800053c8:	800067b7          	lui	a5,0x80006
800053cc:	c207a223          	sw	zero,-988(a5) # 80005c24 <__stack_top+0xffffeff4>
}
800053d0:	00000013          	nop
800053d4:	01c12083          	lw	ra,28(sp)
800053d8:	01812403          	lw	s0,24(sp)
800053dc:	02010113          	addi	sp,sp,32
800053e0:	00008067          	ret

800053e4 <exit>:
800053e4:	ff010113          	addi	sp,sp,-16
800053e8:	00000593          	li	a1,0
800053ec:	00812423          	sw	s0,8(sp)
800053f0:	00112623          	sw	ra,12(sp)
800053f4:	00050413          	mv	s0,a0
800053f8:	0fc000ef          	jal	ra,800054f4 <__call_exitprocs>
800053fc:	800057b7          	lui	a5,0x80005
80005400:	6407a503          	lw	a0,1600(a5) # 80005640 <__stack_top+0xffffea10>
80005404:	03c52783          	lw	a5,60(a0) # 4400003c <RAM_SIZE+0x43ff003c>
80005408:	00078463          	beqz	a5,80005410 <exit+0x2c>
8000540c:	000780e7          	jalr	a5
80005410:	00040513          	mv	a0,s0
80005414:	e24fb0ef          	jal	ra,80000a38 <_exit>

80005418 <memset>:
80005418:	00f00813          	li	a6,15
8000541c:	00050713          	mv	a4,a0
80005420:	02c87e63          	bleu	a2,a6,8000545c <memset+0x44>
80005424:	00f77793          	andi	a5,a4,15
80005428:	0a079063          	bnez	a5,800054c8 <memset+0xb0>
8000542c:	08059263          	bnez	a1,800054b0 <memset+0x98>
80005430:	ff067693          	andi	a3,a2,-16
80005434:	00f67613          	andi	a2,a2,15
80005438:	00e686b3          	add	a3,a3,a4
8000543c:	00b72023          	sw	a1,0(a4)
80005440:	00b72223          	sw	a1,4(a4)
80005444:	00b72423          	sw	a1,8(a4)
80005448:	00b72623          	sw	a1,12(a4)
8000544c:	01070713          	addi	a4,a4,16
80005450:	fed766e3          	bltu	a4,a3,8000543c <memset+0x24>
80005454:	00061463          	bnez	a2,8000545c <memset+0x44>
80005458:	00008067          	ret
8000545c:	40c806b3          	sub	a3,a6,a2
80005460:	00269693          	slli	a3,a3,0x2
80005464:	00000297          	auipc	t0,0x0
80005468:	005686b3          	add	a3,a3,t0
8000546c:	00c68067          	jr	12(a3)
80005470:	00b70723          	sb	a1,14(a4)
80005474:	00b706a3          	sb	a1,13(a4)
80005478:	00b70623          	sb	a1,12(a4)
8000547c:	00b705a3          	sb	a1,11(a4)
80005480:	00b70523          	sb	a1,10(a4)
80005484:	00b704a3          	sb	a1,9(a4)
80005488:	00b70423          	sb	a1,8(a4)
8000548c:	00b703a3          	sb	a1,7(a4)
80005490:	00b70323          	sb	a1,6(a4)
80005494:	00b702a3          	sb	a1,5(a4)
80005498:	00b70223          	sb	a1,4(a4)
8000549c:	00b701a3          	sb	a1,3(a4)
800054a0:	00b70123          	sb	a1,2(a4)
800054a4:	00b700a3          	sb	a1,1(a4)
800054a8:	00b70023          	sb	a1,0(a4)
800054ac:	00008067          	ret
800054b0:	0ff5f593          	andi	a1,a1,255
800054b4:	00859693          	slli	a3,a1,0x8
800054b8:	00d5e5b3          	or	a1,a1,a3
800054bc:	01059693          	slli	a3,a1,0x10
800054c0:	00d5e5b3          	or	a1,a1,a3
800054c4:	f6dff06f          	j	80005430 <memset+0x18>
800054c8:	00279693          	slli	a3,a5,0x2
800054cc:	00000297          	auipc	t0,0x0
800054d0:	005686b3          	add	a3,a3,t0
800054d4:	00008293          	mv	t0,ra
800054d8:	fa0680e7          	jalr	-96(a3)
800054dc:	00028093          	mv	ra,t0
800054e0:	ff078793          	addi	a5,a5,-16
800054e4:	40f70733          	sub	a4,a4,a5
800054e8:	00f60633          	add	a2,a2,a5
800054ec:	f6c878e3          	bleu	a2,a6,8000545c <memset+0x44>
800054f0:	f3dff06f          	j	8000542c <memset+0x14>

800054f4 <__call_exitprocs>:
800054f4:	fd010113          	addi	sp,sp,-48
800054f8:	800057b7          	lui	a5,0x80005
800054fc:	01312e23          	sw	s3,28(sp)
80005500:	6407a983          	lw	s3,1600(a5) # 80005640 <__stack_top+0xffffea10>
80005504:	01412c23          	sw	s4,24(sp)
80005508:	01512a23          	sw	s5,20(sp)
8000550c:	01612823          	sw	s6,16(sp)
80005510:	02112623          	sw	ra,44(sp)
80005514:	02812423          	sw	s0,40(sp)
80005518:	02912223          	sw	s1,36(sp)
8000551c:	03212023          	sw	s2,32(sp)
80005520:	01712623          	sw	s7,12(sp)
80005524:	00050a93          	mv	s5,a0
80005528:	00058a13          	mv	s4,a1
8000552c:	00100b13          	li	s6,1
80005530:	1489a483          	lw	s1,328(s3)
80005534:	00048c63          	beqz	s1,8000554c <__call_exitprocs+0x58>
80005538:	0044a403          	lw	s0,4(s1)
8000553c:	fff40913          	addi	s2,s0,-1
80005540:	00241413          	slli	s0,s0,0x2
80005544:	00848433          	add	s0,s1,s0
80005548:	02095863          	bgez	s2,80005578 <__call_exitprocs+0x84>
8000554c:	02c12083          	lw	ra,44(sp)
80005550:	02812403          	lw	s0,40(sp)
80005554:	02412483          	lw	s1,36(sp)
80005558:	02012903          	lw	s2,32(sp)
8000555c:	01c12983          	lw	s3,28(sp)
80005560:	01812a03          	lw	s4,24(sp)
80005564:	01412a83          	lw	s5,20(sp)
80005568:	01012b03          	lw	s6,16(sp)
8000556c:	00c12b83          	lw	s7,12(sp)
80005570:	03010113          	addi	sp,sp,48
80005574:	00008067          	ret
80005578:	000a0c63          	beqz	s4,80005590 <__call_exitprocs+0x9c>
8000557c:	10442783          	lw	a5,260(s0)
80005580:	01478863          	beq	a5,s4,80005590 <__call_exitprocs+0x9c>
80005584:	fff90913          	addi	s2,s2,-1
80005588:	ffc40413          	addi	s0,s0,-4
8000558c:	fbdff06f          	j	80005548 <__call_exitprocs+0x54>
80005590:	0044a703          	lw	a4,4(s1)
80005594:	00442783          	lw	a5,4(s0)
80005598:	fff70713          	addi	a4,a4,-1
8000559c:	03271c63          	bne	a4,s2,800055d4 <__call_exitprocs+0xe0>
800055a0:	0124a223          	sw	s2,4(s1)
800055a4:	fe0780e3          	beqz	a5,80005584 <__call_exitprocs+0x90>
800055a8:	1884a683          	lw	a3,392(s1)
800055ac:	012b1733          	sll	a4,s6,s2
800055b0:	0044ab83          	lw	s7,4(s1)
800055b4:	00d776b3          	and	a3,a4,a3
800055b8:	02069263          	bnez	a3,800055dc <__call_exitprocs+0xe8>
800055bc:	000780e7          	jalr	a5
800055c0:	0044a703          	lw	a4,4(s1)
800055c4:	1489a783          	lw	a5,328(s3)
800055c8:	f77714e3          	bne	a4,s7,80005530 <__call_exitprocs+0x3c>
800055cc:	faf48ce3          	beq	s1,a5,80005584 <__call_exitprocs+0x90>
800055d0:	f61ff06f          	j	80005530 <__call_exitprocs+0x3c>
800055d4:	00042223          	sw	zero,4(s0)
800055d8:	fcdff06f          	j	800055a4 <__call_exitprocs+0xb0>
800055dc:	18c4a683          	lw	a3,396(s1)
800055e0:	08442583          	lw	a1,132(s0)
800055e4:	00d77733          	and	a4,a4,a3
800055e8:	00071863          	bnez	a4,800055f8 <__call_exitprocs+0x104>
800055ec:	000a8513          	mv	a0,s5
800055f0:	000780e7          	jalr	a5
800055f4:	fcdff06f          	j	800055c0 <__call_exitprocs+0xcc>
800055f8:	00058513          	mv	a0,a1
800055fc:	000780e7          	jalr	a5
80005600:	fc1ff06f          	j	800055c0 <__call_exitprocs+0xcc>
	...
80005610:	6568                	flw	fa0,76(a0)
80005612:	6c6c                	flw	fa1,92(s0)
80005614:	0000006f          	j	80005614 <__call_exitprocs+0x120>
80005618:	7274                	flw	fa3,100(a2)
8000561a:	7061                	0x7061
8000561c:	000a                	0xa
8000561e:	0000                	unimp
80005620:	2020                	fld	fs0,64(s0)
80005622:	2020                	fld	fs0,64(s0)
80005624:	2020                	fld	fs0,64(s0)
80005626:	2020                	fld	fs0,64(s0)
80005628:	0020                	addi	s0,sp,8
8000562a:	0000                	unimp
8000562c:	3231                	jal	80004f38 <TFT_drawCircle+0x450>
8000562e:	36353433          	0x36353433
80005632:	00393837          	lui	a6,0x393
80005636:	0000                	unimp
80005638:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
8000563c:	0000                	unimp
	...
